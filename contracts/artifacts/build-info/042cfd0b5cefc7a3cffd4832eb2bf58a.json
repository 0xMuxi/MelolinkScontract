{
	"id": "042cfd0b5cefc7a3cffd4832eb2bf58a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.21",
	"solcLongVersion": "0.8.21+commit.d9974bed",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MultiNFT.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract MultiNFT is ERC1155, Ownable {\n    // Mapping from token ID to supply\n    mapping(uint256 => uint256) public tokenSupply;\n\n    constructor() ERC1155(\"https://myapi.com/api/token/{id}.json\") Ownable(msg.sender) {\n        // Mint initial supply of tokens\n        mintToken(1, 100);\n        mintToken(2, 200);\n    }\n\n    function mintToken(uint256 tokenId, uint256 amount) public onlyOwner {\n        _mint(msg.sender, tokenId, amount, \"\");\n        tokenSupply[tokenId] += amount;\n    }\n\n    function burnToken(uint256 tokenId, uint256 amount) public onlyOwner {\n        require(balanceOf(msg.sender, tokenId) >= amount, \"Insufficient balance\");\n        _burn(msg.sender, tokenId, amount);\n        tokenSupply[tokenId] -= amount;\n    }\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"./IERC1155.sol\";\nimport {IERC1155Receiver} from \"./IERC1155Receiver.sol\";\nimport {IERC1155MetadataURI} from \"./extensions/IERC1155MetadataURI.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {Arrays} from \"../../utils/Arrays.sol\";\nimport {IERC1155Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n */\nabstract contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI, IERC1155Errors {\n    using Arrays for uint256[];\n    using Arrays for address[];\n\n    mapping(uint256 id => mapping(address account => uint256)) private _balances;\n\n    mapping(address account => mapping(address operator => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 /* id */) public view virtual returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     */\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual returns (uint256[] memory) {\n        if (accounts.length != ids.length) {\n            revert ERC1155InvalidArrayLength(ids.length, accounts.length);\n        }\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i));\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeTransferFrom(from, to, id, value, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeBatchTransferFrom(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n     * (or `to`) is the zero address.\n     *\n     * Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n     *   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     *\n     * NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead.\n     */\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {\n        if (ids.length != values.length) {\n            revert ERC1155InvalidArrayLength(ids.length, values.length);\n        }\n\n        address operator = _msgSender();\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids.unsafeMemoryAccess(i);\n            uint256 value = values.unsafeMemoryAccess(i);\n\n            if (from != address(0)) {\n                uint256 fromBalance = _balances[id][from];\n                if (fromBalance < value) {\n                    revert ERC1155InsufficientBalance(from, fromBalance, value, id);\n                }\n                unchecked {\n                    // Overflow not possible: value <= fromBalance\n                    _balances[id][from] = fromBalance - value;\n                }\n            }\n\n            if (to != address(0)) {\n                _balances[id][to] += value;\n            }\n        }\n\n        if (ids.length == 1) {\n            uint256 id = ids.unsafeMemoryAccess(0);\n            uint256 value = values.unsafeMemoryAccess(0);\n            emit TransferSingle(operator, from, to, id, value);\n        } else {\n            emit TransferBatch(operator, from, to, ids, values);\n        }\n    }\n\n    /**\n     * @dev Version of {_update} that performs the token acceptance check by calling\n     * {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n     * contains code (eg. is a smart contract at the moment of execution).\n     *\n     * IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n     * update to the contract state after this function would break the check-effect-interaction pattern. Consider\n     * overriding {_update} instead.\n     */\n    function _updateWithAcceptanceCheck(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal virtual {\n        _update(from, to, ids, values);\n        if (to != address(0)) {\n            address operator = _msgSender();\n            if (ids.length == 1) {\n                uint256 id = ids.unsafeMemoryAccess(0);\n                uint256 value = values.unsafeMemoryAccess(0);\n                _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data);\n            } else {\n                _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data);\n            }\n        }\n    }\n\n    /**\n     * @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the values in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens of type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     * - `ids` and `values` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC1155InvalidOperator(address(0));\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Performs an acceptance check by calling {IERC1155-onERC1155Received} on the `to` address\n     * if it contains code at the moment of execution.\n     */\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 value,\n        bytes memory data\n    ) private {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    // Tokens rejected\n                    revert ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-ERC1155Receiver implementer\n                    revert ERC1155InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Performs a batch acceptance check by calling {IERC1155-onERC1155BatchReceived} on the `to` address\n     * if it contains code at the moment of execution.\n     */\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) private {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    // Tokens rejected\n                    revert ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-ERC1155Receiver implementer\n                    revert ERC1155InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Creates an array in memory with only one value for each of the elements provided.\n     */\n    function _asSingletonArrays(\n        uint256 element1,\n        uint256 element2\n    ) private pure returns (uint256[] memory array1, uint256[] memory array2) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Load the free memory pointer\n            array1 := mload(0x40)\n            // Set array length to 1\n            mstore(array1, 1)\n            // Store the single element at the next word after the length (where content starts)\n            mstore(add(array1, 0x20), element1)\n\n            // Repeat for next array locating it right after the first array\n            array2 := add(array1, 0x40)\n            mstore(array2, 1)\n            mstore(add(array2, 0x20), element2)\n\n            // Update the free memory pointer by pointing after the second array\n            mstore(0x40, add(array2, 0x40))\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Arrays.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Arrays.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\nimport {Math} from \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * `array` is expected to be sorted in ascending order, and to contain no\n     * repeated elements.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"evmVersion": "shanghai"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd9b0b8ee1ac6dfee14eb1ad4383a4739dbaa0f2036594bb3a16f0408085dadde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6309805132e519162d1134c67df22dd963323a9208b4f41344a4c13ed63c1026\",\"dweb:/ipfs/QmTBPHnf6qbtAD4NVnKVFmubUHRqMDPLkseR6apxTUpsQo\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xe64b3445a3f638890af7ad92464cd18f1f202a2f5a7ed42dabf74317bae43303\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6620b77b8dcd786149534b1c664f94ff1f8bb1ad141e8da7d9ec64b9624c73f0\",\"dweb:/ipfs/QmVWHh5UvQ7PxRUtUNfd94mSxxxStuzV1NBZtLiKqKpBrQ\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 326,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 332,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 334,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP].",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferBatch} event. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferBatch} event. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xe64b3445a3f638890af7ad92464cd18f1f202a2f5a7ed42dabf74317bae43303\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6620b77b8dcd786149534b1c664f94ff1f8bb1ad141e8da7d9ec64b9624c73f0\",\"dweb:/ipfs/QmVWHh5UvQ7PxRUtUNfd94mSxxxStuzV1NBZtLiKqKpBrQ\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferBatch} event. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferBatch} event. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xe64b3445a3f638890af7ad92464cd18f1f202a2f5a7ed42dabf74317bae43303\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6620b77b8dcd786149534b1c664f94ff1f8bb1ad141e8da7d9ec64b9624c73f0\",\"dweb:/ipfs/QmVWHh5UvQ7PxRUtUNfd94mSxxxStuzV1NBZtLiKqKpBrQ\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Arrays.sol": {
				"Arrays": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to array types.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Arrays.sol\":276:4802  library Arrays {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":276:4802  library Arrays {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c7e21d14eb857c6d0af6c1085f7db1ecf78b3b89bb989ea6cd7d1592129b499f64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c7e21d14eb857c6d0af6c1085f7db1ecf78b3b89bb989ea6cd7d1592129b499f64736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0xE2 SAR EQ 0xEB DUP6 PUSH29 0x6D0AF6C1085F7DB1ECF78B3B89BB989EA6CD7D1592129B499F64736F6C PUSH4 0x43000815 STOP CALLER ",
							"sourceMap": "276:4526:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c7e21d14eb857c6d0af6c1085f7db1ecf78b3b89bb989ea6cd7d1592129b499f64736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0xE2 SAR EQ 0xEB DUP6 PUSH29 0x6D0AF6C1085F7DB1ECF78B3B89BB989EA6CD7D1592129B499F64736F6C PUSH4 0x43000815 STOP CALLER ",
							"sourceMap": "276:4526:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"findUpperBound(uint256[] storage pointer,uint256)": "infinite",
								"unsafeAccess(address[] storage pointer,uint256)": "infinite",
								"unsafeAccess(bytes32[] storage pointer,uint256)": "infinite",
								"unsafeAccess(uint256[] storage pointer,uint256)": "infinite",
								"unsafeMemoryAccess(address[] memory,uint256)": "infinite",
								"unsafeMemoryAccess(uint256[] memory,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c7e21d14eb857c6d0af6c1085f7db1ecf78b3b89bb989ea6cd7d1592129b499f64736f6c63430008150033",
									".code": [
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/MultiNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a620337292f0bb5feb484dd266e51e0e52c5d8f56d6eb98d961d6b066c245c8d64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a620337292f0bb5feb484dd266e51e0e52c5d8f56d6eb98d961d6b066c245c8d64736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 KECCAK256 CALLER PUSH19 0x92F0BB5FEB484DD266E51E0E52C5D8F56D6EB9 DUP14 SWAP7 SAR PUSH12 0x66C245C8D64736F6C634300 ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "1245:2685:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a620337292f0bb5feb484dd266e51e0e52c5d8f56d6eb98d961d6b066c245c8d64736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 KECCAK256 CALLER PUSH19 0x92F0BB5FEB484DD266E51E0E52C5D8F56D6EB9 DUP14 SWAP7 SAR PUSH12 0x66C245C8D64736F6C634300 ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "1245:2685:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a620337292f0bb5feb484dd266e51e0e52c5d8f56d6eb98d961d6b066c245c8d64736f6c63430008150033",
									".code": [
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/MultiNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204b0e20d73e8bec30b08f2c701141d20be1b8e46e019334a391b9d392710131d164736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204b0e20d73e8bec30b08f2c701141d20be1b8e46e019334a391b9d392710131d164736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B 0xE KECCAK256 0xD7 RETURNDATACOPY DUP12 0xEC ADDRESS 0xB0 DUP16 0x2C PUSH17 0x1141D20BE1B8E46E019334A391B9D39271 ADD BALANCE 0xD1 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "203:14914:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204b0e20d73e8bec30b08f2c701141d20be1b8e46e019334a391b9d392710131d164736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B 0xE KECCAK256 0xD7 RETURNDATACOPY DUP12 0xEC ADDRESS 0xB0 DUP16 0x2C PUSH17 0x1141D20BE1B8E46E019334A391B9D39271 ADD BALANCE 0xD1 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "203:14914:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204b0e20d73e8bec30b08f2c701141d20be1b8e46e019334a391b9d392710131d164736f6c63430008150033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/MultiNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/MultiNFT.sol": {
				"MultiNFT": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mintToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "tokenSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MultiNFT.sol\":171:913  contract MultiNFT is ERC1155, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/MultiNFT.sol\":307:492  constructor() ERC1155(\"https://myapi.com/api/token/{id}.json\") Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/MultiNFT.sol\":378:388  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1251:1313  constructor(string memory uri_) {... */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  0x25\n  dup2\n  mstore\n  0x20\n  add\n  data_be7838470a3c26528d43bae23565234ed295a39bde7b6c68ac16c023b38bf94f\n  0x25\n  swap2\n  codecopy\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1293:1306  _setURI(uri_) */\n  tag_6\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1301:1305  uri_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1293:1300  _setURI */\n  shl(0x20, tag_7)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1293:1306  _setURI(uri_) */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1251:1313  constructor(string memory uri_) {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_9\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/MultiNFT.sol\":441:458  mintToken(1, 100) */\n  tag_15\n    /* \"contracts/MultiNFT.sol\":451:452  1 */\n  0x01\n    /* \"contracts/MultiNFT.sol\":454:457  100 */\n  0x64\n    /* \"contracts/MultiNFT.sol\":441:450  mintToken */\n  shl(0x20, tag_16)\n    /* \"contracts/MultiNFT.sol\":441:458  mintToken(1, 100) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"contracts/MultiNFT.sol\":468:485  mintToken(2, 200) */\n  tag_17\n    /* \"contracts/MultiNFT.sol\":478:479  2 */\n  0x02\n    /* \"contracts/MultiNFT.sol\":481:484  200 */\n  0xc8\n    /* \"contracts/MultiNFT.sol\":468:477  mintToken */\n  shl(0x20, tag_16)\n    /* \"contracts/MultiNFT.sol\":468:485  mintToken(2, 200) */\n  0x20\n  shr\n  jump\t// in\ntag_17:\n    /* \"contracts/MultiNFT.sol\":171:913  contract MultiNFT is ERC1155, Ownable {... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10282:10368  function _setURI(string memory newuri) internal virtual {... */\ntag_7:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10355:10361  newuri */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10348:10352  _uri */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10348:10361  _uri = newuri */\n  swap1\n  dup2\n  tag_20\n  swap2\n  swap1\n  tag_21\n  jump\t// in\ntag_20:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10282:10368  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x03\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x03\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/MultiNFT.sol\":498:662  function mintToken(uint256 tokenId, uint256 amount) public onlyOwner {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n  tag_24\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n  shl(0x20, tag_25)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n  0x20\n  shr\n  jump\t// in\ntag_24:\n    /* \"contracts/MultiNFT.sol\":577:615  _mint(msg.sender, tokenId, amount, \"\") */\n  tag_27\n    /* \"contracts/MultiNFT.sol\":583:593  msg.sender */\n  caller\n    /* \"contracts/MultiNFT.sol\":595:602  tokenId */\n  dup4\n    /* \"contracts/MultiNFT.sol\":604:610  amount */\n  dup4\n    /* \"contracts/MultiNFT.sol\":577:615  _mint(msg.sender, tokenId, amount, \"\") */\n  mload(0x40)\n  dup1\n  0x20\n  add\n  0x40\n  mstore\n  dup1\n  0x00\n  dup2\n  mstore\n  pop\n    /* \"contracts/MultiNFT.sol\":577:582  _mint */\n  shl(0x20, tag_28)\n    /* \"contracts/MultiNFT.sol\":577:615  _mint(msg.sender, tokenId, amount, \"\") */\n  0x20\n  shr\n  jump\t// in\ntag_27:\n    /* \"contracts/MultiNFT.sol\":649:655  amount */\n  dup1\n    /* \"contracts/MultiNFT.sol\":625:636  tokenSupply */\n  0x04\n    /* \"contracts/MultiNFT.sol\":625:645  tokenSupply[tokenId] */\n  0x00\n    /* \"contracts/MultiNFT.sol\":637:644  tokenId */\n  dup5\n    /* \"contracts/MultiNFT.sol\":625:645  tokenSupply[tokenId] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/MultiNFT.sol\":625:655  tokenSupply[tokenId] += amount */\n  dup3\n  dup3\n  sload\n  tag_29\n  swap2\n  swap1\n  tag_30\n  jump\t// in\ntag_29:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/MultiNFT.sol\":498:662  function mintToken(uint256 tokenId, uint256 amount) public onlyOwner {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\ntag_25:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n  tag_32\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n  shl(0x20, tag_33)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_32:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n  tag_34\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n  shl(0x20, tag_35)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n  0x20\n  shr\n  jump\t// in\ntag_34:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n  tag_36\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n  tag_37\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n  shl(0x20, tag_33)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_37:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n  mload(0x40)\n  0x118cdaa700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_38\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_38:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\ntag_36:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10746:11092  function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {... */\ntag_28:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10856:10857  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10842:10858  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10842:10844  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10842:10858  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10838:10926  if (to == address(0)) {... */\n  tag_40\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10912:10913  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10881:10915  ERC1155InvalidReceiver(address(0)) */\n  mload(0x40)\n  0x57f447ce00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_41\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_41:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10838:10926  if (to == address(0)) {... */\ntag_40:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10936:10956  uint256[] memory ids */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10958:10981  uint256[] memory values */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10985:11014  _asSingletonArrays(id, value) */\n  tag_42\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11004:11006  id */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11008:11013  value */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10985:11003  _asSingletonArrays */\n  shl(0x20, tag_43)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10985:11014  _asSingletonArrays(id, value) */\n  0x20\n  shr\n  jump\t// in\ntag_42:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10935:11014  (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value) */\n  swap2\n  pop\n  swap2\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11024:11085  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n  tag_44\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11059:11060  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11063:11065  to */\n  dup8\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11067:11070  ids */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11072:11078  values */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11080:11084  data */\n  dup8\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11024:11050  _updateWithAcceptanceCheck */\n  shl(0x20, tag_45)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11024:11085  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n  0x20\n  shr\n  jump\t// in\ntag_44:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10828:11092  {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10746:11092  function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {... */\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_33:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\ntag_35:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n  0x03\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16080:16929  function _asSingletonArrays(... */\ntag_43:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16188:16211  uint256[] memory array1 */\n  0x60\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16213:16236  uint256[] memory array2 */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16374:16378  0x40 */\n  0x40\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16368:16379  mload(0x40) */\n  mload\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16358:16379  array1 := mload(0x40) */\n  swap2\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16444:16445  1 */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16436:16442  array1 */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16429:16446  mstore(array1, 1) */\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16582:16590  element1 */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16575:16579  0x20 */\n  0x20\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16567:16573  array1 */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16563:16580  add(array1, 0x20) */\n  add\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16556:16591  mstore(add(array1, 0x20), element1) */\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16704:16708  0x40 */\n  0x40\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16696:16702  array1 */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16692:16709  add(array1, 0x40) */\n  add\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16682:16709  array2 := add(array1, 0x40) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16737:16738  1 */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16729:16735  array2 */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16722:16739  mstore(array2, 1) */\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16778:16786  element2 */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16771:16775  0x20 */\n  0x20\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16763:16769  array2 */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16759:16776  add(array2, 0x20) */\n  add\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16752:16787  mstore(add(array2, 0x20), element2) */\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16907:16911  0x40 */\n  0x40\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16899:16905  array2 */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16895:16912  add(array2, 0x40) */\n  add\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16889:16893  0x40 */\n  0x40\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16882:16913  mstore(0x40, add(array2, 0x40)) */\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16080:16929  function _asSingletonArrays(... */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7004:7694  function _updateWithAcceptanceCheck(... */\ntag_45:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7205:7235  _update(from, to, ids, values) */\n  tag_50\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7213:7217  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7219:7221  to */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7223:7226  ids */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7228:7234  values */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7205:7212  _update */\n  shl(0x20, tag_51)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7205:7235  _update(from, to, ids, values) */\n  0x20\n  shr\n  jump\t// in\ntag_50:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7263:7264  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7249:7265  to != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7249:7251  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7249:7265  to != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7245:7688  if (to != address(0)) {... */\n  tag_52\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7281:7297  address operator */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7300:7312  _msgSender() */\n  tag_53\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7300:7310  _msgSender */\n  shl(0x20, tag_33)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7300:7312  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_53:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7281:7312  address operator = _msgSender() */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7344:7345  1 */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7330:7333  ids */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7330:7340  ids.length */\n  mload\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7330:7345  ids.length == 1 */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\n  tag_54\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7365:7375  uint256 id */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7378:7403  ids.unsafeMemoryAccess(0) */\n  tag_55\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7401:7402  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7378:7381  ids */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7378:7400  ids.unsafeMemoryAccess */\n  shl(0x20, tag_56)\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7378:7403  ids.unsafeMemoryAccess(0) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_55:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7365:7403  uint256 id = ids.unsafeMemoryAccess(0) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7421:7434  uint256 value */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7437:7465  values.unsafeMemoryAccess(0) */\n  tag_57\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7463:7464  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7437:7443  values */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7437:7462  values.unsafeMemoryAccess */\n  shl(0x20, tag_56)\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7437:7465  values.unsafeMemoryAccess(0) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_57:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7421:7465  uint256 value = values.unsafeMemoryAccess(0) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7483:7550  _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data) */\n  tag_58\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7514:7522  operator */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7524:7528  from */\n  dup10\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7530:7532  to */\n  dup10\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7534:7536  id */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7538:7543  value */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7545:7549  data */\n  dup10\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7483:7513  _doSafeTransferAcceptanceCheck */\n  shl(0x20, tag_59)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7483:7550  _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data) */\n  0x20\n  shr\n  jump\t// in\ntag_58:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7347:7565  {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\n  jump(tag_60)\ntag_54:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7589:7663  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data) */\n  tag_61\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7625:7633  operator */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7635:7639  from */\n  dup8\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7641:7643  to */\n  dup8\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7645:7648  ids */\n  dup8\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7650:7656  values */\n  dup8\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7658:7662  data */\n  dup8\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7589:7624  _doSafeBatchTransferAcceptanceCheck */\n  shl(0x20, tag_62)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7589:7663  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data) */\n  0x20\n  shr\n  jump\t// in\ntag_61:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\ntag_60:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7267:7688  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7245:7688  if (to != address(0)) {... */\ntag_52:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7004:7694  function _updateWithAcceptanceCheck(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5144:6425  function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {... */\ntag_51:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5279:5285  values */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5279:5292  values.length */\n  mload\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5265:5268  ids */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5265:5275  ids.length */\n  mload\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5265:5292  ids.length != values.length */\n  eq\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5261:5378  if (ids.length != values.length) {... */\n  tag_64\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5341:5344  ids */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5341:5351  ids.length */\n  mload\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5353:5359  values */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5353:5366  values.length */\n  mload\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5315:5367  ERC1155InvalidArrayLength(ids.length, values.length) */\n  mload(0x40)\n  0x5b05999100000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_65\n  swap3\n  swap2\n  swap1\n  tag_66\n  jump\t// in\ntag_65:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5261:5378  if (ids.length != values.length) {... */\ntag_64:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5388:5404  address operator */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5407:5419  _msgSender() */\n  tag_67\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5407:5417  _msgSender */\n  shl(0x20, tag_33)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5407:5419  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_67:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5388:5419  address operator = _msgSender() */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5435:5444  uint256 i */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\ntag_68:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5454:5457  ids */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5454:5464  ids.length */\n  mload\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5450:5451  i */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5450:5464  i < ids.length */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n  iszero\n  tag_69\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5495  uint256 id */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5498:5523  ids.unsafeMemoryAccess(i) */\n  tag_71\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5521:5522  i */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5498:5501  ids */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5498:5520  ids.unsafeMemoryAccess */\n  shl(0x20, tag_56)\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5498:5523  ids.unsafeMemoryAccess(i) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_71:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5523  uint256 id = ids.unsafeMemoryAccess(i) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5537:5550  uint256 value */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5553:5581  values.unsafeMemoryAccess(i) */\n  tag_72\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5579:5580  i */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5553:5559  values */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5553:5578  values.unsafeMemoryAccess */\n  shl(0x20, tag_56)\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5553:5581  values.unsafeMemoryAccess(i) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_72:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5537:5581  uint256 value = values.unsafeMemoryAccess(i) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5616:5617  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5600:5618  from != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5600:5604  from */\n  dup9\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5600:5618  from != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5596:6016  if (from != address(0)) {... */\n  tag_73\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5638:5657  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5669  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5673  _balances[id] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5670:5672  id */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5673  _balances[id] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5679  _balances[id][from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5674:5678  from */\n  dup11\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5679  _balances[id][from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5638:5679  uint256 fromBalance = _balances[id][from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5715:5720  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5701:5712  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5701:5720  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5697:5826  if (fromBalance < value) {... */\n  iszero\n  tag_74\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5778:5782  from */\n  dup9\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5784:5795  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5797:5802  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5804:5806  id */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5751:5807  ERC1155InsufficientBalance(from, fromBalance, value, id) */\n  mload(0x40)\n  0x03dee4c500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_75\n  swap5\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_76\n  jump\t// in\ntag_75:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5697:5826  if (fromBalance < value) {... */\ntag_74:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5978:5983  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5964:5975  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5964:5983  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5951  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5955  _balances[id] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5952:5954  id */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5955  _balances[id] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5961  _balances[id][from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5956:5960  from */\n  dup12\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5961  _balances[id][from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5983  _balances[id][from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5620:6016  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5596:6016  if (from != address(0)) {... */\ntag_73:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6048:6049  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6034:6050  to != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6034:6036  to */\n  dup8\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6034:6050  to != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6030:6111  if (to != address(0)) {... */\n  tag_77\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6091:6096  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6079  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6083  _balances[id] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6080:6082  id */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6083  _balances[id] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6087  _balances[id][to] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6084:6086  to */\n  dup10\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6087  _balances[id][to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6096  _balances[id][to] += value */\n  dup3\n  dup3\n  sload\n  tag_78\n  swap2\n  swap1\n  tag_30\n  jump\t// in\ntag_78:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6030:6111  if (to != address(0)) {... */\ntag_77:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5471:6121  {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5466:5469  ++i */\n  dup1\n  tag_79\n  swap1\n  tag_80\n  jump\t// in\ntag_79:\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n  jump(tag_68)\ntag_69:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6149:6150  1 */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6135:6138  ids */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6135:6145  ids.length */\n  mload\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6135:6150  ids.length == 1 */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\n  tag_81\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6166:6176  uint256 id */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6179:6204  ids.unsafeMemoryAccess(0) */\n  tag_82\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6202:6203  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6179:6182  ids */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6179:6201  ids.unsafeMemoryAccess */\n  shl(0x20, tag_56)\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6179:6204  ids.unsafeMemoryAccess(0) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_82:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6166:6204  uint256 id = ids.unsafeMemoryAccess(0) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6218:6231  uint256 value */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6234:6262  values.unsafeMemoryAccess(0) */\n  tag_83\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6260:6261  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6234:6240  values */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6234:6259  values.unsafeMemoryAccess */\n  shl(0x20, tag_56)\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6234:6262  values.unsafeMemoryAccess(0) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_83:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6218:6262  uint256 value = values.unsafeMemoryAccess(0) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6312:6314  to */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6306:6310  from */\n  dup8\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6296:6304  operator */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6316:6318  id */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6320:6325  value */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n  mload(0x40)\n  tag_84\n  swap3\n  swap2\n  swap1\n  tag_66\n  jump\t// in\ntag_84:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6152:6337  {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\n  jump(tag_85)\ntag_81:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6392:6394  to */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6386:6390  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6376:6384  operator */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6396:6399  ids */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6401:6407  values */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n  mload(0x40)\n  tag_86\n  swap3\n  swap2\n  swap1\n  tag_87\n  jump\t// in\ntag_86:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\ntag_85:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5251:6425  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5144:6425  function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {... */\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Arrays.sol\":4204:4401  function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {... */\ntag_56:\n    /* \"@openzeppelin/contracts/utils/Arrays.sol\":4290:4301  uint256 res */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Arrays.sol\":4378:4382  0x20 */\n  0x20\n    /* \"@openzeppelin/contracts/utils/Arrays.sol\":4373:4376  pos */\n  dup3\n    /* \"@openzeppelin/contracts/utils/Arrays.sol\":4369:4383  mul(pos, 0x20) */\n  mul\n    /* \"@openzeppelin/contracts/utils/Arrays.sol\":4362:4366  0x20 */\n  0x20\n    /* \"@openzeppelin/contracts/utils/Arrays.sol\":4357:4360  arr */\n  dup5\n    /* \"@openzeppelin/contracts/utils/Arrays.sol\":4353:4367  add(arr, 0x20) */\n  add\n    /* \"@openzeppelin/contracts/utils/Arrays.sol\":4349:4384  add(add(arr, 0x20), mul(pos, 0x20)) */\n  add\n    /* \"@openzeppelin/contracts/utils/Arrays.sol\":4343:4385  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n  mload\n    /* \"@openzeppelin/contracts/utils/Arrays.sol\":4336:4385  res := mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Arrays.sol\":4204:4401  function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13761:14735  function _doSafeTransferAcceptanceCheck(... */\ntag_59:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13984:13985  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13967:13969  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13967:13981  to.code.length */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  extcodesize\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13967:13985  to.code.length > 0 */\n  gt\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13963:14729  if (to.code.length > 0) {... */\n  iszero\n  tag_90\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14022:14024  to */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14005:14043  IERC1155Receiver(to).onERC1155Received */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xf23a6e61\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14044:14052  operator */\n  dup8\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14054:14058  from */\n  dup8\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14060:14062  id */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14064:14069  value */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14071:14075  data */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14005:14076  IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) */\n  mload(0x40)\n  dup7\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  tag_91\n  swap6\n  swap5\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_92\n  jump\t// in\ntag_91:\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  gas\n  call\n  swap3\n  pop\n  pop\n  pop\n  dup1\n  iszero\n  tag_93\n  jumpi\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_94\n  swap2\n  swap1\n  tag_95\n  jump\t// in\ntag_94:\n  0x01\ntag_93:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14001:14719  try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {... */\n  tag_96\n  jumpi\n  returndatasize\n  dup1\n  0x00\n  dup2\n  eq\n  tag_101\n  jumpi\n  mload(0x40)\n  swap2\n  pop\n  and(add(returndatasize, 0x3f), not(0x1f))\n  dup3\n  add\n  0x40\n  mstore\n  returndatasize\n  dup3\n  mstore\n  returndatasize\n  0x00\n  0x20\n  dup5\n  add\n  returndatacopy\n  jump(tag_100)\ntag_101:\n  0x60\n  swap2\n  pop\ntag_100:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14377:14378  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14360:14366  reason */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14360:14373  reason.length */\n  mload\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14360:14378  reason.length == 0 */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14356:14705  if (reason.length == 0) {... */\n  tag_102\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14487:14489  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14464:14490  ERC1155InvalidReceiver(to) */\n  mload(0x40)\n  0x57f447ce00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_103\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_103:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14356:14705  if (reason.length == 0) {... */\ntag_102:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14657:14663  reason */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14651:14664  mload(reason) */\n  mload\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14642:14648  reason */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14638:14640  32 */\n  0x20\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14634:14649  add(32, reason) */\n  add\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14627:14665  revert(add(32, reason), mload(reason)) */\n  revert\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14001:14719  try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {... */\ntag_96:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14137:14180  IERC1155Receiver.onERC1155Received.selector */\n  shl(0xe0, 0xf23a6e61)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14125:14180  response != IERC1155Receiver.onERC1155Received.selector */\n  not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n  and\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14125:14133  response */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14125:14180  response != IERC1155Receiver.onERC1155Received.selector */\n  not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n  and\n  eq\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14121:14295  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n  tag_106\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14273:14275  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14250:14276  ERC1155InvalidReceiver(to) */\n  mload(0x40)\n  0x57f447ce00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_107\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_107:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14121:14295  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\ntag_106:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14077:14309  returns (bytes4 response) {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13963:14729  if (to.code.length > 0) {... */\ntag_90:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13761:14735  function _doSafeTransferAcceptanceCheck(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14923:15964  function _doSafeBatchTransferAcceptanceCheck(... */\ntag_62:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15171:15172  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15154:15156  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15154:15168  to.code.length */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  extcodesize\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15154:15172  to.code.length > 0 */\n  gt\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15150:15958  if (to.code.length > 0) {... */\n  iszero\n  tag_109\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15209:15211  to */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15192:15235  IERC1155Receiver(to).onERC1155BatchReceived */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xbc197c81\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15236:15244  operator */\n  dup8\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15246:15250  from */\n  dup8\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15252:15255  ids */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15257:15263  values */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15265:15269  data */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15192:15270  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) */\n  mload(0x40)\n  dup7\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  tag_110\n  swap6\n  swap5\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_111\n  jump\t// in\ntag_110:\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  gas\n  call\n  swap3\n  pop\n  pop\n  pop\n  dup1\n  iszero\n  tag_112\n  jumpi\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_113\n  swap2\n  swap1\n  tag_95\n  jump\t// in\ntag_113:\n  0x01\ntag_112:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15188:15948  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (... */\n  tag_114\n  jumpi\n  returndatasize\n  dup1\n  0x00\n  dup2\n  eq\n  tag_119\n  jumpi\n  mload(0x40)\n  swap2\n  pop\n  and(add(returndatasize, 0x3f), not(0x1f))\n  dup3\n  add\n  0x40\n  mstore\n  returndatasize\n  dup3\n  mstore\n  returndatasize\n  0x00\n  0x20\n  dup5\n  add\n  returndatacopy\n  jump(tag_118)\ntag_119:\n  0x60\n  swap2\n  pop\ntag_118:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15606:15607  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15589:15595  reason */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15589:15602  reason.length */\n  mload\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15589:15607  reason.length == 0 */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15585:15934  if (reason.length == 0) {... */\n  tag_120\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15716:15718  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15693:15719  ERC1155InvalidReceiver(to) */\n  mload(0x40)\n  0x57f447ce00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_121\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_121:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15585:15934  if (reason.length == 0) {... */\ntag_120:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15886:15892  reason */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15880:15893  mload(reason) */\n  mload\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15871:15877  reason */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15867:15869  32 */\n  0x20\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15863:15878  add(32, reason) */\n  add\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15856:15894  revert(add(32, reason), mload(reason)) */\n  revert\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15188:15948  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (... */\ntag_114:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15361:15409  IERC1155Receiver.onERC1155BatchReceived.selector */\n  shl(0xe0, 0xbc197c81)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15349:15409  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n  not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n  and\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15349:15357  response */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15349:15409  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n  not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n  and\n  eq\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15345:15524  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n  tag_124\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15502:15504  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15479:15505  ERC1155InvalidReceiver(to) */\n  mload(0x40)\n  0x57f447ce00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_125\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_125:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15345:15524  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\ntag_124:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15271:15538  returns (... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15150:15958  if (to.code.length > 0) {... */\ntag_109:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14923:15964  function _doSafeBatchTransferAcceptanceCheck(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:133   */\ntag_126:\n    /* \"#utility.yul\":44:51   */\n  0x00\n    /* \"#utility.yul\":84:126   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":77:82   */\n  dup3\n    /* \"#utility.yul\":73:127   */\n  and\n    /* \"#utility.yul\":62:127   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:133   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":139:235   */\ntag_127:\n    /* \"#utility.yul\":176:183   */\n  0x00\n    /* \"#utility.yul\":205:229   */\n  tag_172\n    /* \"#utility.yul\":223:228   */\n  dup3\n    /* \"#utility.yul\":205:229   */\n  tag_126\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":194:229   */\n  swap1\n  pop\n    /* \"#utility.yul\":139:235   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":241:359   */\ntag_128:\n    /* \"#utility.yul\":328:352   */\n  tag_174\n    /* \"#utility.yul\":346:351   */\n  dup2\n    /* \"#utility.yul\":328:352   */\n  tag_127\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":323:326   */\n  dup3\n    /* \"#utility.yul\":316:353   */\n  mstore\n    /* \"#utility.yul\":241:359   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":365:587   */\ntag_11:\n    /* \"#utility.yul\":458:462   */\n  0x00\n    /* \"#utility.yul\":496:498   */\n  0x20\n    /* \"#utility.yul\":485:494   */\n  dup3\n    /* \"#utility.yul\":481:499   */\n  add\n    /* \"#utility.yul\":473:499   */\n  swap1\n  pop\n    /* \"#utility.yul\":509:580   */\n  tag_176\n    /* \"#utility.yul\":577:578   */\n  0x00\n    /* \"#utility.yul\":566:575   */\n  dup4\n    /* \"#utility.yul\":562:579   */\n  add\n    /* \"#utility.yul\":553:559   */\n  dup5\n    /* \"#utility.yul\":509:580   */\n  tag_128\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":365:587   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":593:692   */\ntag_129:\n    /* \"#utility.yul\":645:651   */\n  0x00\n    /* \"#utility.yul\":679:684   */\n  dup2\n    /* \"#utility.yul\":673:685   */\n  mload\n    /* \"#utility.yul\":663:685   */\n  swap1\n  pop\n    /* \"#utility.yul\":593:692   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":698:878   */\ntag_130:\n    /* \"#utility.yul\":746:823   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":743:744   */\n  0x00\n    /* \"#utility.yul\":736:824   */\n  mstore\n    /* \"#utility.yul\":843:847   */\n  0x41\n    /* \"#utility.yul\":840:841   */\n  0x04\n    /* \"#utility.yul\":833:848   */\n  mstore\n    /* \"#utility.yul\":867:871   */\n  0x24\n    /* \"#utility.yul\":864:865   */\n  0x00\n    /* \"#utility.yul\":857:872   */\n  revert\n    /* \"#utility.yul\":884:1064   */\ntag_131:\n    /* \"#utility.yul\":932:1009   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":929:930   */\n  0x00\n    /* \"#utility.yul\":922:1010   */\n  mstore\n    /* \"#utility.yul\":1029:1033   */\n  0x22\n    /* \"#utility.yul\":1026:1027   */\n  0x04\n    /* \"#utility.yul\":1019:1034   */\n  mstore\n    /* \"#utility.yul\":1053:1057   */\n  0x24\n    /* \"#utility.yul\":1050:1051   */\n  0x00\n    /* \"#utility.yul\":1043:1058   */\n  revert\n    /* \"#utility.yul\":1070:1390   */\ntag_132:\n    /* \"#utility.yul\":1114:1120   */\n  0x00\n    /* \"#utility.yul\":1151:1152   */\n  0x02\n    /* \"#utility.yul\":1145:1149   */\n  dup3\n    /* \"#utility.yul\":1141:1153   */\n  div\n    /* \"#utility.yul\":1131:1153   */\n  swap1\n  pop\n    /* \"#utility.yul\":1198:1199   */\n  0x01\n    /* \"#utility.yul\":1192:1196   */\n  dup3\n    /* \"#utility.yul\":1188:1200   */\n  and\n    /* \"#utility.yul\":1219:1237   */\n  dup1\n    /* \"#utility.yul\":1209:1290   */\n  tag_181\n  jumpi\n    /* \"#utility.yul\":1275:1279   */\n  0x7f\n    /* \"#utility.yul\":1267:1273   */\n  dup3\n    /* \"#utility.yul\":1263:1280   */\n  and\n    /* \"#utility.yul\":1253:1280   */\n  swap2\n  pop\n    /* \"#utility.yul\":1209:1290   */\ntag_181:\n    /* \"#utility.yul\":1337:1339   */\n  0x20\n    /* \"#utility.yul\":1329:1335   */\n  dup3\n    /* \"#utility.yul\":1326:1340   */\n  lt\n    /* \"#utility.yul\":1306:1324   */\n  dup2\n    /* \"#utility.yul\":1303:1341   */\n  sub\n    /* \"#utility.yul\":1300:1384   */\n  tag_182\n  jumpi\n    /* \"#utility.yul\":1356:1374   */\n  tag_183\n  tag_131\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":1300:1384   */\ntag_182:\n    /* \"#utility.yul\":1121:1390   */\n  pop\n    /* \"#utility.yul\":1070:1390   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1396:1537   */\ntag_133:\n    /* \"#utility.yul\":1445:1449   */\n  0x00\n    /* \"#utility.yul\":1468:1471   */\n  dup2\n    /* \"#utility.yul\":1460:1471   */\n  swap1\n  pop\n    /* \"#utility.yul\":1491:1494   */\n  dup2\n    /* \"#utility.yul\":1488:1489   */\n  0x00\n    /* \"#utility.yul\":1481:1495   */\n  mstore\n    /* \"#utility.yul\":1525:1529   */\n  0x20\n    /* \"#utility.yul\":1522:1523   */\n  0x00\n    /* \"#utility.yul\":1512:1530   */\n  keccak256\n    /* \"#utility.yul\":1504:1530   */\n  swap1\n  pop\n    /* \"#utility.yul\":1396:1537   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1543:1636   */\ntag_134:\n    /* \"#utility.yul\":1580:1586   */\n  0x00\n    /* \"#utility.yul\":1627:1629   */\n  0x20\n    /* \"#utility.yul\":1622:1624   */\n  0x1f\n    /* \"#utility.yul\":1615:1620   */\n  dup4\n    /* \"#utility.yul\":1611:1625   */\n  add\n    /* \"#utility.yul\":1607:1630   */\n  div\n    /* \"#utility.yul\":1597:1630   */\n  swap1\n  pop\n    /* \"#utility.yul\":1543:1636   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1642:1749   */\ntag_135:\n    /* \"#utility.yul\":1686:1694   */\n  0x00\n    /* \"#utility.yul\":1736:1741   */\n  dup3\n    /* \"#utility.yul\":1730:1734   */\n  dup3\n    /* \"#utility.yul\":1726:1742   */\n  shl\n    /* \"#utility.yul\":1705:1742   */\n  swap1\n  pop\n    /* \"#utility.yul\":1642:1749   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1755:2148   */\ntag_136:\n    /* \"#utility.yul\":1824:1830   */\n  0x00\n    /* \"#utility.yul\":1874:1875   */\n  0x08\n    /* \"#utility.yul\":1862:1872   */\n  dup4\n    /* \"#utility.yul\":1858:1876   */\n  mul\n    /* \"#utility.yul\":1897:1994   */\n  tag_188\n    /* \"#utility.yul\":1927:1993   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1916:1925   */\n  dup3\n    /* \"#utility.yul\":1897:1994   */\n  tag_135\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":2015:2054   */\n  tag_189\n    /* \"#utility.yul\":2045:2053   */\n  dup7\n    /* \"#utility.yul\":2034:2043   */\n  dup4\n    /* \"#utility.yul\":2015:2054   */\n  tag_135\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":2003:2054   */\n  swap6\n  pop\n    /* \"#utility.yul\":2087:2091   */\n  dup1\n    /* \"#utility.yul\":2083:2092   */\n  not\n    /* \"#utility.yul\":2076:2081   */\n  dup5\n    /* \"#utility.yul\":2072:2093   */\n  and\n    /* \"#utility.yul\":2063:2093   */\n  swap4\n  pop\n    /* \"#utility.yul\":2136:2140   */\n  dup1\n    /* \"#utility.yul\":2126:2134   */\n  dup7\n    /* \"#utility.yul\":2122:2141   */\n  and\n    /* \"#utility.yul\":2115:2120   */\n  dup5\n    /* \"#utility.yul\":2112:2142   */\n  or\n    /* \"#utility.yul\":2102:2142   */\n  swap3\n  pop\n    /* \"#utility.yul\":1831:2148   */\n  pop\n  pop\n    /* \"#utility.yul\":1755:2148   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2154:2231   */\ntag_137:\n    /* \"#utility.yul\":2191:2198   */\n  0x00\n    /* \"#utility.yul\":2220:2225   */\n  dup2\n    /* \"#utility.yul\":2209:2225   */\n  swap1\n  pop\n    /* \"#utility.yul\":2154:2231   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2237:2297   */\ntag_138:\n    /* \"#utility.yul\":2265:2268   */\n  0x00\n    /* \"#utility.yul\":2286:2291   */\n  dup2\n    /* \"#utility.yul\":2279:2291   */\n  swap1\n  pop\n    /* \"#utility.yul\":2237:2297   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2303:2445   */\ntag_139:\n    /* \"#utility.yul\":2353:2362   */\n  0x00\n    /* \"#utility.yul\":2386:2439   */\n  tag_193\n    /* \"#utility.yul\":2404:2438   */\n  tag_194\n    /* \"#utility.yul\":2413:2437   */\n  tag_195\n    /* \"#utility.yul\":2431:2436   */\n  dup5\n    /* \"#utility.yul\":2413:2437   */\n  tag_137\n  jump\t// in\ntag_195:\n    /* \"#utility.yul\":2404:2438   */\n  tag_138\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":2386:2439   */\n  tag_137\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":2373:2439   */\n  swap1\n  pop\n    /* \"#utility.yul\":2303:2445   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2451:2526   */\ntag_140:\n    /* \"#utility.yul\":2494:2497   */\n  0x00\n    /* \"#utility.yul\":2515:2520   */\n  dup2\n    /* \"#utility.yul\":2508:2520   */\n  swap1\n  pop\n    /* \"#utility.yul\":2451:2526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2532:2801   */\ntag_141:\n    /* \"#utility.yul\":2642:2681   */\n  tag_198\n    /* \"#utility.yul\":2673:2680   */\n  dup4\n    /* \"#utility.yul\":2642:2681   */\n  tag_139\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":2703:2794   */\n  tag_199\n    /* \"#utility.yul\":2752:2793   */\n  tag_200\n    /* \"#utility.yul\":2776:2792   */\n  dup3\n    /* \"#utility.yul\":2752:2793   */\n  tag_140\n  jump\t// in\ntag_200:\n    /* \"#utility.yul\":2744:2750   */\n  dup5\n    /* \"#utility.yul\":2737:2741   */\n  dup5\n    /* \"#utility.yul\":2731:2742   */\n  sload\n    /* \"#utility.yul\":2703:2794   */\n  tag_136\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":2697:2701   */\n  dup3\n    /* \"#utility.yul\":2690:2795   */\n  sstore\n    /* \"#utility.yul\":2608:2801   */\n  pop\n    /* \"#utility.yul\":2532:2801   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2807:2880   */\ntag_142:\n    /* \"#utility.yul\":2852:2855   */\n  0x00\n    /* \"#utility.yul\":2807:2880   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2886:3075   */\ntag_143:\n    /* \"#utility.yul\":2963:2995   */\n  tag_203\n  tag_142\n  jump\t// in\ntag_203:\n    /* \"#utility.yul\":3004:3069   */\n  tag_204\n    /* \"#utility.yul\":3062:3068   */\n  dup2\n    /* \"#utility.yul\":3054:3060   */\n  dup5\n    /* \"#utility.yul\":3048:3052   */\n  dup5\n    /* \"#utility.yul\":3004:3069   */\n  tag_141\n  jump\t// in\ntag_204:\n    /* \"#utility.yul\":2939:3075   */\n  pop\n    /* \"#utility.yul\":2886:3075   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3081:3267   */\ntag_144:\n    /* \"#utility.yul\":3141:3261   */\ntag_206:\n    /* \"#utility.yul\":3158:3161   */\n  dup2\n    /* \"#utility.yul\":3151:3156   */\n  dup2\n    /* \"#utility.yul\":3148:3162   */\n  lt\n    /* \"#utility.yul\":3141:3261   */\n  iszero\n  tag_208\n  jumpi\n    /* \"#utility.yul\":3212:3251   */\n  tag_209\n    /* \"#utility.yul\":3249:3250   */\n  0x00\n    /* \"#utility.yul\":3242:3247   */\n  dup3\n    /* \"#utility.yul\":3212:3251   */\n  tag_143\n  jump\t// in\ntag_209:\n    /* \"#utility.yul\":3185:3186   */\n  0x01\n    /* \"#utility.yul\":3178:3183   */\n  dup2\n    /* \"#utility.yul\":3174:3187   */\n  add\n    /* \"#utility.yul\":3165:3187   */\n  swap1\n  pop\n    /* \"#utility.yul\":3141:3261   */\n  jump(tag_206)\ntag_208:\n    /* \"#utility.yul\":3081:3267   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3273:3816   */\ntag_145:\n    /* \"#utility.yul\":3374:3376   */\n  0x1f\n    /* \"#utility.yul\":3369:3372   */\n  dup3\n    /* \"#utility.yul\":3366:3377   */\n  gt\n    /* \"#utility.yul\":3363:3809   */\n  iszero\n  tag_211\n  jumpi\n    /* \"#utility.yul\":3408:3446   */\n  tag_212\n    /* \"#utility.yul\":3440:3445   */\n  dup2\n    /* \"#utility.yul\":3408:3446   */\n  tag_133\n  jump\t// in\ntag_212:\n    /* \"#utility.yul\":3492:3521   */\n  tag_213\n    /* \"#utility.yul\":3510:3520   */\n  dup5\n    /* \"#utility.yul\":3492:3521   */\n  tag_134\n  jump\t// in\ntag_213:\n    /* \"#utility.yul\":3482:3490   */\n  dup2\n    /* \"#utility.yul\":3478:3522   */\n  add\n    /* \"#utility.yul\":3675:3677   */\n  0x20\n    /* \"#utility.yul\":3663:3673   */\n  dup6\n    /* \"#utility.yul\":3660:3678   */\n  lt\n    /* \"#utility.yul\":3657:3706   */\n  iszero\n  tag_214\n  jumpi\n    /* \"#utility.yul\":3696:3704   */\n  dup2\n    /* \"#utility.yul\":3681:3704   */\n  swap1\n  pop\n    /* \"#utility.yul\":3657:3706   */\ntag_214:\n    /* \"#utility.yul\":3719:3799   */\n  tag_215\n    /* \"#utility.yul\":3775:3797   */\n  tag_216\n    /* \"#utility.yul\":3793:3796   */\n  dup6\n    /* \"#utility.yul\":3775:3797   */\n  tag_134\n  jump\t// in\ntag_216:\n    /* \"#utility.yul\":3765:3773   */\n  dup4\n    /* \"#utility.yul\":3761:3798   */\n  add\n    /* \"#utility.yul\":3748:3759   */\n  dup3\n    /* \"#utility.yul\":3719:3799   */\n  tag_144\n  jump\t// in\ntag_215:\n    /* \"#utility.yul\":3378:3809   */\n  pop\n  pop\n    /* \"#utility.yul\":3363:3809   */\ntag_211:\n    /* \"#utility.yul\":3273:3816   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3822:3939   */\ntag_146:\n    /* \"#utility.yul\":3876:3884   */\n  0x00\n    /* \"#utility.yul\":3926:3931   */\n  dup3\n    /* \"#utility.yul\":3920:3924   */\n  dup3\n    /* \"#utility.yul\":3916:3932   */\n  shr\n    /* \"#utility.yul\":3895:3932   */\n  swap1\n  pop\n    /* \"#utility.yul\":3822:3939   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3945:4114   */\ntag_147:\n    /* \"#utility.yul\":3989:3995   */\n  0x00\n    /* \"#utility.yul\":4022:4073   */\n  tag_219\n    /* \"#utility.yul\":4070:4071   */\n  0x00\n    /* \"#utility.yul\":4066:4072   */\n  not\n    /* \"#utility.yul\":4058:4063   */\n  dup5\n    /* \"#utility.yul\":4055:4056   */\n  0x08\n    /* \"#utility.yul\":4051:4064   */\n  mul\n    /* \"#utility.yul\":4022:4073   */\n  tag_146\n  jump\t// in\ntag_219:\n    /* \"#utility.yul\":4018:4074   */\n  not\n    /* \"#utility.yul\":4103:4107   */\n  dup1\n    /* \"#utility.yul\":4097:4101   */\n  dup4\n    /* \"#utility.yul\":4093:4108   */\n  and\n    /* \"#utility.yul\":4083:4108   */\n  swap2\n  pop\n    /* \"#utility.yul\":3996:4114   */\n  pop\n    /* \"#utility.yul\":3945:4114   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4119:4414   */\ntag_148:\n    /* \"#utility.yul\":4195:4199   */\n  0x00\n    /* \"#utility.yul\":4341:4370   */\n  tag_221\n    /* \"#utility.yul\":4366:4369   */\n  dup4\n    /* \"#utility.yul\":4360:4364   */\n  dup4\n    /* \"#utility.yul\":4341:4370   */\n  tag_147\n  jump\t// in\ntag_221:\n    /* \"#utility.yul\":4333:4370   */\n  swap2\n  pop\n    /* \"#utility.yul\":4403:4406   */\n  dup3\n    /* \"#utility.yul\":4400:4401   */\n  0x02\n    /* \"#utility.yul\":4396:4407   */\n  mul\n    /* \"#utility.yul\":4390:4394   */\n  dup3\n    /* \"#utility.yul\":4387:4408   */\n  or\n    /* \"#utility.yul\":4379:4408   */\n  swap1\n  pop\n    /* \"#utility.yul\":4119:4414   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4419:5814   */\ntag_21:\n    /* \"#utility.yul\":4536:4573   */\n  tag_223\n    /* \"#utility.yul\":4569:4572   */\n  dup3\n    /* \"#utility.yul\":4536:4573   */\n  tag_129\n  jump\t// in\ntag_223:\n    /* \"#utility.yul\":4638:4656   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4630:4636   */\n  dup2\n    /* \"#utility.yul\":4627:4657   */\n  gt\n    /* \"#utility.yul\":4624:4680   */\n  iszero\n  tag_224\n  jumpi\n    /* \"#utility.yul\":4660:4678   */\n  tag_225\n  tag_130\n  jump\t// in\ntag_225:\n    /* \"#utility.yul\":4624:4680   */\ntag_224:\n    /* \"#utility.yul\":4704:4742   */\n  tag_226\n    /* \"#utility.yul\":4736:4740   */\n  dup3\n    /* \"#utility.yul\":4730:4741   */\n  sload\n    /* \"#utility.yul\":4704:4742   */\n  tag_132\n  jump\t// in\ntag_226:\n    /* \"#utility.yul\":4789:4856   */\n  tag_227\n    /* \"#utility.yul\":4849:4855   */\n  dup3\n    /* \"#utility.yul\":4841:4847   */\n  dup3\n    /* \"#utility.yul\":4835:4839   */\n  dup6\n    /* \"#utility.yul\":4789:4856   */\n  tag_145\n  jump\t// in\ntag_227:\n    /* \"#utility.yul\":4883:4884   */\n  0x00\n    /* \"#utility.yul\":4907:4911   */\n  0x20\n    /* \"#utility.yul\":4894:4911   */\n  swap1\n  pop\n    /* \"#utility.yul\":4939:4941   */\n  0x1f\n    /* \"#utility.yul\":4931:4937   */\n  dup4\n    /* \"#utility.yul\":4928:4942   */\n  gt\n    /* \"#utility.yul\":4956:4957   */\n  0x01\n    /* \"#utility.yul\":4951:5569   */\n  dup2\n  eq\n  tag_229\n  jumpi\n    /* \"#utility.yul\":5613:5614   */\n  0x00\n    /* \"#utility.yul\":5630:5636   */\n  dup5\n    /* \"#utility.yul\":5627:5704   */\n  iszero\n  tag_230\n  jumpi\n    /* \"#utility.yul\":5679:5688   */\n  dup3\n    /* \"#utility.yul\":5674:5677   */\n  dup8\n    /* \"#utility.yul\":5670:5689   */\n  add\n    /* \"#utility.yul\":5664:5690   */\n  mload\n    /* \"#utility.yul\":5655:5690   */\n  swap1\n  pop\n    /* \"#utility.yul\":5627:5704   */\ntag_230:\n    /* \"#utility.yul\":5730:5797   */\n  tag_231\n    /* \"#utility.yul\":5790:5796   */\n  dup6\n    /* \"#utility.yul\":5783:5788   */\n  dup3\n    /* \"#utility.yul\":5730:5797   */\n  tag_148\n  jump\t// in\ntag_231:\n    /* \"#utility.yul\":5724:5728   */\n  dup7\n    /* \"#utility.yul\":5717:5798   */\n  sstore\n    /* \"#utility.yul\":5586:5808   */\n  pop\n    /* \"#utility.yul\":4921:5808   */\n  jump(tag_228)\n    /* \"#utility.yul\":4951:5569   */\ntag_229:\n    /* \"#utility.yul\":5003:5007   */\n  0x1f\n    /* \"#utility.yul\":4999:5008   */\n  not\n    /* \"#utility.yul\":4991:4997   */\n  dup5\n    /* \"#utility.yul\":4987:5009   */\n  and\n    /* \"#utility.yul\":5037:5074   */\n  tag_232\n    /* \"#utility.yul\":5069:5073   */\n  dup7\n    /* \"#utility.yul\":5037:5074   */\n  tag_133\n  jump\t// in\ntag_232:\n    /* \"#utility.yul\":5096:5097   */\n  0x00\n    /* \"#utility.yul\":5110:5318   */\ntag_233:\n    /* \"#utility.yul\":5124:5131   */\n  dup3\n    /* \"#utility.yul\":5121:5122   */\n  dup2\n    /* \"#utility.yul\":5118:5132   */\n  lt\n    /* \"#utility.yul\":5110:5318   */\n  iszero\n  tag_235\n  jumpi\n    /* \"#utility.yul\":5203:5212   */\n  dup5\n    /* \"#utility.yul\":5198:5201   */\n  dup10\n    /* \"#utility.yul\":5194:5213   */\n  add\n    /* \"#utility.yul\":5188:5214   */\n  mload\n    /* \"#utility.yul\":5180:5186   */\n  dup3\n    /* \"#utility.yul\":5173:5215   */\n  sstore\n    /* \"#utility.yul\":5254:5255   */\n  0x01\n    /* \"#utility.yul\":5246:5252   */\n  dup3\n    /* \"#utility.yul\":5242:5256   */\n  add\n    /* \"#utility.yul\":5232:5256   */\n  swap2\n  pop\n    /* \"#utility.yul\":5301:5303   */\n  0x20\n    /* \"#utility.yul\":5290:5299   */\n  dup6\n    /* \"#utility.yul\":5286:5304   */\n  add\n    /* \"#utility.yul\":5273:5304   */\n  swap5\n  pop\n    /* \"#utility.yul\":5147:5151   */\n  0x20\n    /* \"#utility.yul\":5144:5145   */\n  dup2\n    /* \"#utility.yul\":5140:5152   */\n  add\n    /* \"#utility.yul\":5135:5152   */\n  swap1\n  pop\n    /* \"#utility.yul\":5110:5318   */\n  jump(tag_233)\ntag_235:\n    /* \"#utility.yul\":5346:5352   */\n  dup7\n    /* \"#utility.yul\":5337:5344   */\n  dup4\n    /* \"#utility.yul\":5334:5353   */\n  lt\n    /* \"#utility.yul\":5331:5510   */\n  iszero\n  tag_236\n  jumpi\n    /* \"#utility.yul\":5404:5413   */\n  dup5\n    /* \"#utility.yul\":5399:5402   */\n  dup10\n    /* \"#utility.yul\":5395:5414   */\n  add\n    /* \"#utility.yul\":5389:5415   */\n  mload\n    /* \"#utility.yul\":5447:5495   */\n  tag_237\n    /* \"#utility.yul\":5489:5493   */\n  0x1f\n    /* \"#utility.yul\":5481:5487   */\n  dup10\n    /* \"#utility.yul\":5477:5494   */\n  and\n    /* \"#utility.yul\":5466:5475   */\n  dup3\n    /* \"#utility.yul\":5447:5495   */\n  tag_147\n  jump\t// in\ntag_237:\n    /* \"#utility.yul\":5439:5445   */\n  dup4\n    /* \"#utility.yul\":5432:5496   */\n  sstore\n    /* \"#utility.yul\":5354:5510   */\n  pop\n    /* \"#utility.yul\":5331:5510   */\ntag_236:\n    /* \"#utility.yul\":5556:5557   */\n  0x01\n    /* \"#utility.yul\":5552:5553   */\n  0x02\n    /* \"#utility.yul\":5544:5550   */\n  dup9\n    /* \"#utility.yul\":5540:5554   */\n  mul\n    /* \"#utility.yul\":5536:5558   */\n  add\n    /* \"#utility.yul\":5530:5534   */\n  dup9\n    /* \"#utility.yul\":5523:5559   */\n  sstore\n    /* \"#utility.yul\":4958:5569   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4921:5808   */\ntag_228:\n  pop\n    /* \"#utility.yul\":4511:5814   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4419:5814   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5820:6000   */\ntag_149:\n    /* \"#utility.yul\":5868:5945   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":5865:5866   */\n  0x00\n    /* \"#utility.yul\":5858:5946   */\n  mstore\n    /* \"#utility.yul\":5965:5969   */\n  0x11\n    /* \"#utility.yul\":5962:5963   */\n  0x04\n    /* \"#utility.yul\":5955:5970   */\n  mstore\n    /* \"#utility.yul\":5989:5993   */\n  0x24\n    /* \"#utility.yul\":5986:5987   */\n  0x00\n    /* \"#utility.yul\":5979:5994   */\n  revert\n    /* \"#utility.yul\":6006:6197   */\ntag_30:\n    /* \"#utility.yul\":6046:6049   */\n  0x00\n    /* \"#utility.yul\":6065:6085   */\n  tag_240\n    /* \"#utility.yul\":6083:6084   */\n  dup3\n    /* \"#utility.yul\":6065:6085   */\n  tag_137\n  jump\t// in\ntag_240:\n    /* \"#utility.yul\":6060:6085   */\n  swap2\n  pop\n    /* \"#utility.yul\":6099:6119   */\n  tag_241\n    /* \"#utility.yul\":6117:6118   */\n  dup4\n    /* \"#utility.yul\":6099:6119   */\n  tag_137\n  jump\t// in\ntag_241:\n    /* \"#utility.yul\":6094:6119   */\n  swap3\n  pop\n    /* \"#utility.yul\":6142:6143   */\n  dup3\n    /* \"#utility.yul\":6139:6140   */\n  dup3\n    /* \"#utility.yul\":6135:6144   */\n  add\n    /* \"#utility.yul\":6128:6144   */\n  swap1\n  pop\n    /* \"#utility.yul\":6163:6166   */\n  dup1\n    /* \"#utility.yul\":6160:6161   */\n  dup3\n    /* \"#utility.yul\":6157:6167   */\n  gt\n    /* \"#utility.yul\":6154:6190   */\n  iszero\n  tag_242\n  jumpi\n    /* \"#utility.yul\":6170:6188   */\n  tag_243\n  tag_149\n  jump\t// in\ntag_243:\n    /* \"#utility.yul\":6154:6190   */\ntag_242:\n    /* \"#utility.yul\":6006:6197   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6203:6321   */\ntag_150:\n    /* \"#utility.yul\":6290:6314   */\n  tag_245\n    /* \"#utility.yul\":6308:6313   */\n  dup2\n    /* \"#utility.yul\":6290:6314   */\n  tag_137\n  jump\t// in\ntag_245:\n    /* \"#utility.yul\":6285:6288   */\n  dup3\n    /* \"#utility.yul\":6278:6315   */\n  mstore\n    /* \"#utility.yul\":6203:6321   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6327:6659   */\ntag_66:\n    /* \"#utility.yul\":6448:6452   */\n  0x00\n    /* \"#utility.yul\":6486:6488   */\n  0x40\n    /* \"#utility.yul\":6475:6484   */\n  dup3\n    /* \"#utility.yul\":6471:6489   */\n  add\n    /* \"#utility.yul\":6463:6489   */\n  swap1\n  pop\n    /* \"#utility.yul\":6499:6570   */\n  tag_247\n    /* \"#utility.yul\":6567:6568   */\n  0x00\n    /* \"#utility.yul\":6556:6565   */\n  dup4\n    /* \"#utility.yul\":6552:6569   */\n  add\n    /* \"#utility.yul\":6543:6549   */\n  dup6\n    /* \"#utility.yul\":6499:6570   */\n  tag_150\n  jump\t// in\ntag_247:\n    /* \"#utility.yul\":6580:6652   */\n  tag_248\n    /* \"#utility.yul\":6648:6650   */\n  0x20\n    /* \"#utility.yul\":6637:6646   */\n  dup4\n    /* \"#utility.yul\":6633:6651   */\n  add\n    /* \"#utility.yul\":6624:6630   */\n  dup5\n    /* \"#utility.yul\":6580:6652   */\n  tag_150\n  jump\t// in\ntag_248:\n    /* \"#utility.yul\":6327:6659   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6665:7218   */\ntag_76:\n    /* \"#utility.yul\":6842:6846   */\n  0x00\n    /* \"#utility.yul\":6880:6883   */\n  0x80\n    /* \"#utility.yul\":6869:6878   */\n  dup3\n    /* \"#utility.yul\":6865:6884   */\n  add\n    /* \"#utility.yul\":6857:6884   */\n  swap1\n  pop\n    /* \"#utility.yul\":6894:6965   */\n  tag_250\n    /* \"#utility.yul\":6962:6963   */\n  0x00\n    /* \"#utility.yul\":6951:6960   */\n  dup4\n    /* \"#utility.yul\":6947:6964   */\n  add\n    /* \"#utility.yul\":6938:6944   */\n  dup8\n    /* \"#utility.yul\":6894:6965   */\n  tag_128\n  jump\t// in\ntag_250:\n    /* \"#utility.yul\":6975:7047   */\n  tag_251\n    /* \"#utility.yul\":7043:7045   */\n  0x20\n    /* \"#utility.yul\":7032:7041   */\n  dup4\n    /* \"#utility.yul\":7028:7046   */\n  add\n    /* \"#utility.yul\":7019:7025   */\n  dup7\n    /* \"#utility.yul\":6975:7047   */\n  tag_150\n  jump\t// in\ntag_251:\n    /* \"#utility.yul\":7057:7129   */\n  tag_252\n    /* \"#utility.yul\":7125:7127   */\n  0x40\n    /* \"#utility.yul\":7114:7123   */\n  dup4\n    /* \"#utility.yul\":7110:7128   */\n  add\n    /* \"#utility.yul\":7101:7107   */\n  dup6\n    /* \"#utility.yul\":7057:7129   */\n  tag_150\n  jump\t// in\ntag_252:\n    /* \"#utility.yul\":7139:7211   */\n  tag_253\n    /* \"#utility.yul\":7207:7209   */\n  0x60\n    /* \"#utility.yul\":7196:7205   */\n  dup4\n    /* \"#utility.yul\":7192:7210   */\n  add\n    /* \"#utility.yul\":7183:7189   */\n  dup5\n    /* \"#utility.yul\":7139:7211   */\n  tag_150\n  jump\t// in\ntag_253:\n    /* \"#utility.yul\":6665:7218   */\n  swap6\n  swap5\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7224:7457   */\ntag_80:\n    /* \"#utility.yul\":7263:7266   */\n  0x00\n    /* \"#utility.yul\":7286:7310   */\n  tag_255\n    /* \"#utility.yul\":7304:7309   */\n  dup3\n    /* \"#utility.yul\":7286:7310   */\n  tag_137\n  jump\t// in\ntag_255:\n    /* \"#utility.yul\":7277:7310   */\n  swap2\n  pop\n    /* \"#utility.yul\":7332:7398   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":7325:7330   */\n  dup3\n    /* \"#utility.yul\":7322:7399   */\n  sub\n    /* \"#utility.yul\":7319:7422   */\n  tag_256\n  jumpi\n    /* \"#utility.yul\":7402:7420   */\n  tag_257\n  tag_149\n  jump\t// in\ntag_257:\n    /* \"#utility.yul\":7319:7422   */\ntag_256:\n    /* \"#utility.yul\":7449:7450   */\n  0x01\n    /* \"#utility.yul\":7442:7447   */\n  dup3\n    /* \"#utility.yul\":7438:7451   */\n  add\n    /* \"#utility.yul\":7431:7451   */\n  swap1\n  pop\n    /* \"#utility.yul\":7224:7457   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7463:7577   */\ntag_151:\n    /* \"#utility.yul\":7530:7536   */\n  0x00\n    /* \"#utility.yul\":7564:7569   */\n  dup2\n    /* \"#utility.yul\":7558:7570   */\n  mload\n    /* \"#utility.yul\":7548:7570   */\n  swap1\n  pop\n    /* \"#utility.yul\":7463:7577   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7583:7767   */\ntag_152:\n    /* \"#utility.yul\":7682:7693   */\n  0x00\n    /* \"#utility.yul\":7716:7722   */\n  dup3\n    /* \"#utility.yul\":7711:7714   */\n  dup3\n    /* \"#utility.yul\":7704:7723   */\n  mstore\n    /* \"#utility.yul\":7756:7760   */\n  0x20\n    /* \"#utility.yul\":7751:7754   */\n  dup3\n    /* \"#utility.yul\":7747:7761   */\n  add\n    /* \"#utility.yul\":7732:7761   */\n  swap1\n  pop\n    /* \"#utility.yul\":7583:7767   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7773:7905   */\ntag_153:\n    /* \"#utility.yul\":7840:7844   */\n  0x00\n    /* \"#utility.yul\":7863:7866   */\n  dup2\n    /* \"#utility.yul\":7855:7866   */\n  swap1\n  pop\n    /* \"#utility.yul\":7893:7897   */\n  0x20\n    /* \"#utility.yul\":7888:7891   */\n  dup3\n    /* \"#utility.yul\":7884:7898   */\n  add\n    /* \"#utility.yul\":7876:7898   */\n  swap1\n  pop\n    /* \"#utility.yul\":7773:7905   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7911:8019   */\ntag_154:\n    /* \"#utility.yul\":7988:8012   */\n  tag_262\n    /* \"#utility.yul\":8006:8011   */\n  dup2\n    /* \"#utility.yul\":7988:8012   */\n  tag_137\n  jump\t// in\ntag_262:\n    /* \"#utility.yul\":7983:7986   */\n  dup3\n    /* \"#utility.yul\":7976:8013   */\n  mstore\n    /* \"#utility.yul\":7911:8019   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8025:8204   */\ntag_155:\n    /* \"#utility.yul\":8094:8104   */\n  0x00\n    /* \"#utility.yul\":8115:8161   */\n  tag_264\n    /* \"#utility.yul\":8157:8160   */\n  dup4\n    /* \"#utility.yul\":8149:8155   */\n  dup4\n    /* \"#utility.yul\":8115:8161   */\n  tag_154\n  jump\t// in\ntag_264:\n    /* \"#utility.yul\":8193:8197   */\n  0x20\n    /* \"#utility.yul\":8188:8191   */\n  dup4\n    /* \"#utility.yul\":8184:8198   */\n  add\n    /* \"#utility.yul\":8170:8198   */\n  swap1\n  pop\n    /* \"#utility.yul\":8025:8204   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8210:8323   */\ntag_156:\n    /* \"#utility.yul\":8280:8284   */\n  0x00\n    /* \"#utility.yul\":8312:8316   */\n  0x20\n    /* \"#utility.yul\":8307:8310   */\n  dup3\n    /* \"#utility.yul\":8303:8317   */\n  add\n    /* \"#utility.yul\":8295:8317   */\n  swap1\n  pop\n    /* \"#utility.yul\":8210:8323   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8359:9091   */\ntag_157:\n    /* \"#utility.yul\":8478:8481   */\n  0x00\n    /* \"#utility.yul\":8507:8561   */\n  tag_267\n    /* \"#utility.yul\":8555:8560   */\n  dup3\n    /* \"#utility.yul\":8507:8561   */\n  tag_151\n  jump\t// in\ntag_267:\n    /* \"#utility.yul\":8577:8663   */\n  tag_268\n    /* \"#utility.yul\":8656:8662   */\n  dup2\n    /* \"#utility.yul\":8651:8654   */\n  dup6\n    /* \"#utility.yul\":8577:8663   */\n  tag_152\n  jump\t// in\ntag_268:\n    /* \"#utility.yul\":8570:8663   */\n  swap4\n  pop\n    /* \"#utility.yul\":8687:8743   */\n  tag_269\n    /* \"#utility.yul\":8737:8742   */\n  dup4\n    /* \"#utility.yul\":8687:8743   */\n  tag_153\n  jump\t// in\ntag_269:\n    /* \"#utility.yul\":8766:8773   */\n  dup1\n    /* \"#utility.yul\":8797:8798   */\n  0x00\n    /* \"#utility.yul\":8782:9066   */\ntag_270:\n    /* \"#utility.yul\":8807:8813   */\n  dup4\n    /* \"#utility.yul\":8804:8805   */\n  dup2\n    /* \"#utility.yul\":8801:8814   */\n  lt\n    /* \"#utility.yul\":8782:9066   */\n  iszero\n  tag_272\n  jumpi\n    /* \"#utility.yul\":8883:8889   */\n  dup2\n    /* \"#utility.yul\":8877:8890   */\n  mload\n    /* \"#utility.yul\":8910:8973   */\n  tag_273\n    /* \"#utility.yul\":8969:8972   */\n  dup9\n    /* \"#utility.yul\":8954:8967   */\n  dup3\n    /* \"#utility.yul\":8910:8973   */\n  tag_155\n  jump\t// in\ntag_273:\n    /* \"#utility.yul\":8903:8973   */\n  swap8\n  pop\n    /* \"#utility.yul\":8996:9056   */\n  tag_274\n    /* \"#utility.yul\":9049:9055   */\n  dup4\n    /* \"#utility.yul\":8996:9056   */\n  tag_156\n  jump\t// in\ntag_274:\n    /* \"#utility.yul\":8986:9056   */\n  swap3\n  pop\n    /* \"#utility.yul\":8842:9066   */\n  pop\n    /* \"#utility.yul\":8829:8830   */\n  0x01\n    /* \"#utility.yul\":8826:8827   */\n  dup2\n    /* \"#utility.yul\":8822:8831   */\n  add\n    /* \"#utility.yul\":8817:8831   */\n  swap1\n  pop\n    /* \"#utility.yul\":8782:9066   */\n  jump(tag_270)\ntag_272:\n    /* \"#utility.yul\":8786:8800   */\n  pop\n    /* \"#utility.yul\":9082:9085   */\n  dup6\n    /* \"#utility.yul\":9075:9085   */\n  swap4\n  pop\n    /* \"#utility.yul\":8483:9091   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8359:9091   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9097:9731   */\ntag_87:\n    /* \"#utility.yul\":9318:9322   */\n  0x00\n    /* \"#utility.yul\":9356:9358   */\n  0x40\n    /* \"#utility.yul\":9345:9354   */\n  dup3\n    /* \"#utility.yul\":9341:9359   */\n  add\n    /* \"#utility.yul\":9333:9359   */\n  swap1\n  pop\n    /* \"#utility.yul\":9405:9414   */\n  dup2\n    /* \"#utility.yul\":9399:9403   */\n  dup2\n    /* \"#utility.yul\":9395:9415   */\n  sub\n    /* \"#utility.yul\":9391:9392   */\n  0x00\n    /* \"#utility.yul\":9380:9389   */\n  dup4\n    /* \"#utility.yul\":9376:9393   */\n  add\n    /* \"#utility.yul\":9369:9416   */\n  mstore\n    /* \"#utility.yul\":9433:9541   */\n  tag_276\n    /* \"#utility.yul\":9536:9540   */\n  dup2\n    /* \"#utility.yul\":9527:9533   */\n  dup6\n    /* \"#utility.yul\":9433:9541   */\n  tag_157\n  jump\t// in\ntag_276:\n    /* \"#utility.yul\":9425:9541   */\n  swap1\n  pop\n    /* \"#utility.yul\":9588:9597   */\n  dup2\n    /* \"#utility.yul\":9582:9586   */\n  dup2\n    /* \"#utility.yul\":9578:9598   */\n  sub\n    /* \"#utility.yul\":9573:9575   */\n  0x20\n    /* \"#utility.yul\":9562:9571   */\n  dup4\n    /* \"#utility.yul\":9558:9576   */\n  add\n    /* \"#utility.yul\":9551:9599   */\n  mstore\n    /* \"#utility.yul\":9616:9724   */\n  tag_277\n    /* \"#utility.yul\":9719:9723   */\n  dup2\n    /* \"#utility.yul\":9710:9716   */\n  dup5\n    /* \"#utility.yul\":9616:9724   */\n  tag_157\n  jump\t// in\ntag_277:\n    /* \"#utility.yul\":9608:9724   */\n  swap1\n  pop\n    /* \"#utility.yul\":9097:9731   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9737:9835   */\ntag_158:\n    /* \"#utility.yul\":9788:9794   */\n  0x00\n    /* \"#utility.yul\":9822:9827   */\n  dup2\n    /* \"#utility.yul\":9816:9828   */\n  mload\n    /* \"#utility.yul\":9806:9828   */\n  swap1\n  pop\n    /* \"#utility.yul\":9737:9835   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9841:10009   */\ntag_159:\n    /* \"#utility.yul\":9924:9935   */\n  0x00\n    /* \"#utility.yul\":9958:9964   */\n  dup3\n    /* \"#utility.yul\":9953:9956   */\n  dup3\n    /* \"#utility.yul\":9946:9965   */\n  mstore\n    /* \"#utility.yul\":9998:10002   */\n  0x20\n    /* \"#utility.yul\":9993:9996   */\n  dup3\n    /* \"#utility.yul\":9989:10003   */\n  add\n    /* \"#utility.yul\":9974:10003   */\n  swap1\n  pop\n    /* \"#utility.yul\":9841:10009   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10015:10261   */\ntag_160:\n    /* \"#utility.yul\":10096:10097   */\n  0x00\n    /* \"#utility.yul\":10106:10219   */\ntag_281:\n    /* \"#utility.yul\":10120:10126   */\n  dup4\n    /* \"#utility.yul\":10117:10118   */\n  dup2\n    /* \"#utility.yul\":10114:10127   */\n  lt\n    /* \"#utility.yul\":10106:10219   */\n  iszero\n  tag_283\n  jumpi\n    /* \"#utility.yul\":10205:10206   */\n  dup1\n    /* \"#utility.yul\":10200:10203   */\n  dup3\n    /* \"#utility.yul\":10196:10207   */\n  add\n    /* \"#utility.yul\":10190:10208   */\n  mload\n    /* \"#utility.yul\":10186:10187   */\n  dup2\n    /* \"#utility.yul\":10181:10184   */\n  dup5\n    /* \"#utility.yul\":10177:10188   */\n  add\n    /* \"#utility.yul\":10170:10209   */\n  mstore\n    /* \"#utility.yul\":10142:10144   */\n  0x20\n    /* \"#utility.yul\":10139:10140   */\n  dup2\n    /* \"#utility.yul\":10135:10145   */\n  add\n    /* \"#utility.yul\":10130:10145   */\n  swap1\n  pop\n    /* \"#utility.yul\":10106:10219   */\n  jump(tag_281)\ntag_283:\n    /* \"#utility.yul\":10253:10254   */\n  0x00\n    /* \"#utility.yul\":10244:10250   */\n  dup5\n    /* \"#utility.yul\":10239:10242   */\n  dup5\n    /* \"#utility.yul\":10235:10251   */\n  add\n    /* \"#utility.yul\":10228:10255   */\n  mstore\n    /* \"#utility.yul\":10077:10261   */\n  pop\n    /* \"#utility.yul\":10015:10261   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10267:10369   */\ntag_161:\n    /* \"#utility.yul\":10308:10314   */\n  0x00\n    /* \"#utility.yul\":10359:10361   */\n  0x1f\n    /* \"#utility.yul\":10355:10362   */\n  not\n    /* \"#utility.yul\":10350:10352   */\n  0x1f\n    /* \"#utility.yul\":10343:10348   */\n  dup4\n    /* \"#utility.yul\":10339:10353   */\n  add\n    /* \"#utility.yul\":10335:10363   */\n  and\n    /* \"#utility.yul\":10325:10363   */\n  swap1\n  pop\n    /* \"#utility.yul\":10267:10369   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10375:10748   */\ntag_162:\n    /* \"#utility.yul\":10461:10464   */\n  0x00\n    /* \"#utility.yul\":10489:10527   */\n  tag_286\n    /* \"#utility.yul\":10521:10526   */\n  dup3\n    /* \"#utility.yul\":10489:10527   */\n  tag_158\n  jump\t// in\ntag_286:\n    /* \"#utility.yul\":10543:10613   */\n  tag_287\n    /* \"#utility.yul\":10606:10612   */\n  dup2\n    /* \"#utility.yul\":10601:10604   */\n  dup6\n    /* \"#utility.yul\":10543:10613   */\n  tag_159\n  jump\t// in\ntag_287:\n    /* \"#utility.yul\":10536:10613   */\n  swap4\n  pop\n    /* \"#utility.yul\":10622:10687   */\n  tag_288\n    /* \"#utility.yul\":10680:10686   */\n  dup2\n    /* \"#utility.yul\":10675:10678   */\n  dup6\n    /* \"#utility.yul\":10668:10672   */\n  0x20\n    /* \"#utility.yul\":10661:10666   */\n  dup7\n    /* \"#utility.yul\":10657:10673   */\n  add\n    /* \"#utility.yul\":10622:10687   */\n  tag_160\n  jump\t// in\ntag_288:\n    /* \"#utility.yul\":10712:10741   */\n  tag_289\n    /* \"#utility.yul\":10734:10740   */\n  dup2\n    /* \"#utility.yul\":10712:10741   */\n  tag_161\n  jump\t// in\ntag_289:\n    /* \"#utility.yul\":10707:10710   */\n  dup5\n    /* \"#utility.yul\":10703:10742   */\n  add\n    /* \"#utility.yul\":10696:10742   */\n  swap2\n  pop\n    /* \"#utility.yul\":10465:10748   */\n  pop\n    /* \"#utility.yul\":10375:10748   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10754:11505   */\ntag_92:\n    /* \"#utility.yul\":10977:10981   */\n  0x00\n    /* \"#utility.yul\":11015:11018   */\n  0xa0\n    /* \"#utility.yul\":11004:11013   */\n  dup3\n    /* \"#utility.yul\":11000:11019   */\n  add\n    /* \"#utility.yul\":10992:11019   */\n  swap1\n  pop\n    /* \"#utility.yul\":11029:11100   */\n  tag_291\n    /* \"#utility.yul\":11097:11098   */\n  0x00\n    /* \"#utility.yul\":11086:11095   */\n  dup4\n    /* \"#utility.yul\":11082:11099   */\n  add\n    /* \"#utility.yul\":11073:11079   */\n  dup9\n    /* \"#utility.yul\":11029:11100   */\n  tag_128\n  jump\t// in\ntag_291:\n    /* \"#utility.yul\":11110:11182   */\n  tag_292\n    /* \"#utility.yul\":11178:11180   */\n  0x20\n    /* \"#utility.yul\":11167:11176   */\n  dup4\n    /* \"#utility.yul\":11163:11181   */\n  add\n    /* \"#utility.yul\":11154:11160   */\n  dup8\n    /* \"#utility.yul\":11110:11182   */\n  tag_128\n  jump\t// in\ntag_292:\n    /* \"#utility.yul\":11192:11264   */\n  tag_293\n    /* \"#utility.yul\":11260:11262   */\n  0x40\n    /* \"#utility.yul\":11249:11258   */\n  dup4\n    /* \"#utility.yul\":11245:11263   */\n  add\n    /* \"#utility.yul\":11236:11242   */\n  dup7\n    /* \"#utility.yul\":11192:11264   */\n  tag_150\n  jump\t// in\ntag_293:\n    /* \"#utility.yul\":11274:11346   */\n  tag_294\n    /* \"#utility.yul\":11342:11344   */\n  0x60\n    /* \"#utility.yul\":11331:11340   */\n  dup4\n    /* \"#utility.yul\":11327:11345   */\n  add\n    /* \"#utility.yul\":11318:11324   */\n  dup6\n    /* \"#utility.yul\":11274:11346   */\n  tag_150\n  jump\t// in\ntag_294:\n    /* \"#utility.yul\":11394:11403   */\n  dup2\n    /* \"#utility.yul\":11388:11392   */\n  dup2\n    /* \"#utility.yul\":11384:11404   */\n  sub\n    /* \"#utility.yul\":11378:11381   */\n  0x80\n    /* \"#utility.yul\":11367:11376   */\n  dup4\n    /* \"#utility.yul\":11363:11382   */\n  add\n    /* \"#utility.yul\":11356:11405   */\n  mstore\n    /* \"#utility.yul\":11422:11498   */\n  tag_295\n    /* \"#utility.yul\":11493:11497   */\n  dup2\n    /* \"#utility.yul\":11484:11490   */\n  dup5\n    /* \"#utility.yul\":11422:11498   */\n  tag_162\n  jump\t// in\ntag_295:\n    /* \"#utility.yul\":11414:11498   */\n  swap1\n  pop\n    /* \"#utility.yul\":10754:11505   */\n  swap7\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11592:11709   */\ntag_164:\n    /* \"#utility.yul\":11701:11702   */\n  0x00\n    /* \"#utility.yul\":11698:11699   */\n  dup1\n    /* \"#utility.yul\":11691:11703   */\n  revert\n    /* \"#utility.yul\":11838:11987   */\ntag_166:\n    /* \"#utility.yul\":11874:11881   */\n  0x00\n    /* \"#utility.yul\":11914:11980   */\n  0xffffffff00000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":11907:11912   */\n  dup3\n    /* \"#utility.yul\":11903:11981   */\n  and\n    /* \"#utility.yul\":11892:11981   */\n  swap1\n  pop\n    /* \"#utility.yul\":11838:11987   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11993:12113   */\ntag_167:\n    /* \"#utility.yul\":12065:12088   */\n  tag_301\n    /* \"#utility.yul\":12082:12087   */\n  dup2\n    /* \"#utility.yul\":12065:12088   */\n  tag_166\n  jump\t// in\ntag_301:\n    /* \"#utility.yul\":12058:12063   */\n  dup2\n    /* \"#utility.yul\":12055:12089   */\n  eq\n    /* \"#utility.yul\":12045:12107   */\n  tag_302\n  jumpi\n    /* \"#utility.yul\":12103:12104   */\n  0x00\n    /* \"#utility.yul\":12100:12101   */\n  dup1\n    /* \"#utility.yul\":12093:12105   */\n  revert\n    /* \"#utility.yul\":12045:12107   */\ntag_302:\n    /* \"#utility.yul\":11993:12113   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12119:12260   */\ntag_168:\n    /* \"#utility.yul\":12175:12180   */\n  0x00\n    /* \"#utility.yul\":12206:12212   */\n  dup2\n    /* \"#utility.yul\":12200:12213   */\n  mload\n    /* \"#utility.yul\":12191:12213   */\n  swap1\n  pop\n    /* \"#utility.yul\":12222:12254   */\n  tag_304\n    /* \"#utility.yul\":12248:12253   */\n  dup2\n    /* \"#utility.yul\":12222:12254   */\n  tag_167\n  jump\t// in\ntag_304:\n    /* \"#utility.yul\":12119:12260   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12266:12615   */\ntag_95:\n    /* \"#utility.yul\":12335:12341   */\n  0x00\n    /* \"#utility.yul\":12384:12386   */\n  0x20\n    /* \"#utility.yul\":12372:12381   */\n  dup3\n    /* \"#utility.yul\":12363:12370   */\n  dup5\n    /* \"#utility.yul\":12359:12382   */\n  sub\n    /* \"#utility.yul\":12355:12387   */\n  slt\n    /* \"#utility.yul\":12352:12471   */\n  iszero\n  tag_306\n  jumpi\n    /* \"#utility.yul\":12390:12469   */\n  tag_307\n  tag_164\n  jump\t// in\ntag_307:\n    /* \"#utility.yul\":12352:12471   */\ntag_306:\n    /* \"#utility.yul\":12510:12511   */\n  0x00\n    /* \"#utility.yul\":12535:12598   */\n  tag_308\n    /* \"#utility.yul\":12590:12597   */\n  dup5\n    /* \"#utility.yul\":12581:12587   */\n  dup3\n    /* \"#utility.yul\":12570:12579   */\n  dup6\n    /* \"#utility.yul\":12566:12588   */\n  add\n    /* \"#utility.yul\":12535:12598   */\n  tag_168\n  jump\t// in\ntag_308:\n    /* \"#utility.yul\":12525:12598   */\n  swap2\n  pop\n    /* \"#utility.yul\":12481:12608   */\n  pop\n    /* \"#utility.yul\":12266:12615   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12621:13674   */\ntag_111:\n    /* \"#utility.yul\":12944:12948   */\n  0x00\n    /* \"#utility.yul\":12982:12985   */\n  0xa0\n    /* \"#utility.yul\":12971:12980   */\n  dup3\n    /* \"#utility.yul\":12967:12986   */\n  add\n    /* \"#utility.yul\":12959:12986   */\n  swap1\n  pop\n    /* \"#utility.yul\":12996:13067   */\n  tag_310\n    /* \"#utility.yul\":13064:13065   */\n  0x00\n    /* \"#utility.yul\":13053:13062   */\n  dup4\n    /* \"#utility.yul\":13049:13066   */\n  add\n    /* \"#utility.yul\":13040:13046   */\n  dup9\n    /* \"#utility.yul\":12996:13067   */\n  tag_128\n  jump\t// in\ntag_310:\n    /* \"#utility.yul\":13077:13149   */\n  tag_311\n    /* \"#utility.yul\":13145:13147   */\n  0x20\n    /* \"#utility.yul\":13134:13143   */\n  dup4\n    /* \"#utility.yul\":13130:13148   */\n  add\n    /* \"#utility.yul\":13121:13127   */\n  dup8\n    /* \"#utility.yul\":13077:13149   */\n  tag_128\n  jump\t// in\ntag_311:\n    /* \"#utility.yul\":13196:13205   */\n  dup2\n    /* \"#utility.yul\":13190:13194   */\n  dup2\n    /* \"#utility.yul\":13186:13206   */\n  sub\n    /* \"#utility.yul\":13181:13183   */\n  0x40\n    /* \"#utility.yul\":13170:13179   */\n  dup4\n    /* \"#utility.yul\":13166:13184   */\n  add\n    /* \"#utility.yul\":13159:13207   */\n  mstore\n    /* \"#utility.yul\":13224:13332   */\n  tag_312\n    /* \"#utility.yul\":13327:13331   */\n  dup2\n    /* \"#utility.yul\":13318:13324   */\n  dup7\n    /* \"#utility.yul\":13224:13332   */\n  tag_157\n  jump\t// in\ntag_312:\n    /* \"#utility.yul\":13216:13332   */\n  swap1\n  pop\n    /* \"#utility.yul\":13379:13388   */\n  dup2\n    /* \"#utility.yul\":13373:13377   */\n  dup2\n    /* \"#utility.yul\":13369:13389   */\n  sub\n    /* \"#utility.yul\":13364:13366   */\n  0x60\n    /* \"#utility.yul\":13353:13362   */\n  dup4\n    /* \"#utility.yul\":13349:13367   */\n  add\n    /* \"#utility.yul\":13342:13390   */\n  mstore\n    /* \"#utility.yul\":13407:13515   */\n  tag_313\n    /* \"#utility.yul\":13510:13514   */\n  dup2\n    /* \"#utility.yul\":13501:13507   */\n  dup6\n    /* \"#utility.yul\":13407:13515   */\n  tag_157\n  jump\t// in\ntag_313:\n    /* \"#utility.yul\":13399:13515   */\n  swap1\n  pop\n    /* \"#utility.yul\":13563:13572   */\n  dup2\n    /* \"#utility.yul\":13557:13561   */\n  dup2\n    /* \"#utility.yul\":13553:13573   */\n  sub\n    /* \"#utility.yul\":13547:13550   */\n  0x80\n    /* \"#utility.yul\":13536:13545   */\n  dup4\n    /* \"#utility.yul\":13532:13551   */\n  add\n    /* \"#utility.yul\":13525:13574   */\n  mstore\n    /* \"#utility.yul\":13591:13667   */\n  tag_314\n    /* \"#utility.yul\":13662:13666   */\n  dup2\n    /* \"#utility.yul\":13653:13659   */\n  dup5\n    /* \"#utility.yul\":13591:13667   */\n  tag_162\n  jump\t// in\ntag_314:\n    /* \"#utility.yul\":13583:13667   */\n  swap1\n  pop\n    /* \"#utility.yul\":12621:13674   */\n  swap7\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/MultiNFT.sol\":171:913  contract MultiNFT is ERC1155, Ownable {... */\ntag_18:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_be7838470a3c26528d43bae23565234ed295a39bde7b6c68ac16c023b38bf94f 68747470733a2f2f6d796170692e636f6d2f6170692f746f6b656e2f7b69647d2e6a736f6e\n\nsub_0: assembly {\n        /* \"contracts/MultiNFT.sol\":171:913  contract MultiNFT is ERC1155, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8225b247\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x20cbf5f9\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x20cbf5f9\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2693ebf2\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n    tag_3:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1380:1685  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2084:2187  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n    tag_5:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MultiNFT.sol\":498:662  function mintToken(uint256 tokenId, uint256 amount) public onlyOwner {... */\n    tag_6:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      stop\n        /* \"contracts/MultiNFT.sol\":254:300  mapping(uint256 => uint256) public tokenSupply */\n    tag_7:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4014:4443  function safeBatchTransferFrom(... */\n    tag_8:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2536:3088  function balanceOfBatch(... */\n    tag_9:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      stop\n        /* \"contracts/MultiNFT.sol\":668:911  function burnToken(uint256 tokenId, uint256 amount) public onlyOwner {... */\n    tag_11:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_12:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3156:3300  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_13:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n    tag_65:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3367:3524  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n    tag_14:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3591:3942  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n    tag_15:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n    tag_74:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_16:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n    tag_78:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2324:2331  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2359  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2363  _balances[id] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2360:2362  id */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2363  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2372  _balances[id][account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2364:2371  account */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2372  _balances[id][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2343:2372  return _balances[id][account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1380:1685  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1482:1486  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1532:1558  type(IERC1155).interfaceId */\n      0xd9b67a2600000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1558  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1528  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1558  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1626  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_84\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1589:1626  type(IERC1155MetadataURI).interfaceId */\n      0x0e89341c00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1574:1626  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1574:1585  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1574:1626  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1626  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_84:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1678  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_85\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1642:1678  super.supportsInterface(interfaceId) */\n      tag_86\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1666:1677  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1642:1665  super.supportsInterface */\n      tag_87\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1642:1678  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1678  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1498:1678  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1380:1685  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2084:2187  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2144:2157  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2176:2180  _uri */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2169:2180  return _uri */\n      dup1\n      sload\n      tag_89\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_91\n      swap1\n      tag_90\n      jump\t// in\n    tag_91:\n      dup1\n      iszero\n      tag_92\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_93\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_92)\n    tag_93:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_94:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_94\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_92:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2084:2187  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/MultiNFT.sol\":498:662  function mintToken(uint256 tokenId, uint256 amount) public onlyOwner {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_96\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_97\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_96:\n        /* \"contracts/MultiNFT.sol\":577:615  _mint(msg.sender, tokenId, amount, \"\") */\n      tag_99\n        /* \"contracts/MultiNFT.sol\":583:593  msg.sender */\n      caller\n        /* \"contracts/MultiNFT.sol\":595:602  tokenId */\n      dup4\n        /* \"contracts/MultiNFT.sol\":604:610  amount */\n      dup4\n        /* \"contracts/MultiNFT.sol\":577:615  _mint(msg.sender, tokenId, amount, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/MultiNFT.sol\":577:582  _mint */\n      tag_100\n        /* \"contracts/MultiNFT.sol\":577:615  _mint(msg.sender, tokenId, amount, \"\") */\n      jump\t// in\n    tag_99:\n        /* \"contracts/MultiNFT.sol\":649:655  amount */\n      dup1\n        /* \"contracts/MultiNFT.sol\":625:636  tokenSupply */\n      0x04\n        /* \"contracts/MultiNFT.sol\":625:645  tokenSupply[tokenId] */\n      0x00\n        /* \"contracts/MultiNFT.sol\":637:644  tokenId */\n      dup5\n        /* \"contracts/MultiNFT.sol\":625:645  tokenSupply[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/MultiNFT.sol\":625:655  tokenSupply[tokenId] += amount */\n      dup3\n      dup3\n      sload\n      tag_101\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MultiNFT.sol\":498:662  function mintToken(uint256 tokenId, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MultiNFT.sol\":254:300  mapping(uint256 => uint256) public tokenSupply */\n    tag_44:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4014:4443  function safeBatchTransferFrom(... */\n    tag_49:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4208:4222  address sender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4225:4237  _msgSender() */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4225:4235  _msgSender */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4225:4237  _msgSender() */\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4208:4237  address sender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4259:4265  sender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4265  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4255  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4265  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4300  from != sender && !isApprovedForAll(from, sender) */\n      dup1\n      iszero\n      tag_106\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4300  isApprovedForAll(from, sender) */\n      tag_107\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4287:4291  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4293:4299  sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4286  isApprovedForAll */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4300  isApprovedForAll(from, sender) */\n      jump\t// in\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4269:4300  !isApprovedForAll(from, sender) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4300  from != sender && !isApprovedForAll(from, sender) */\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4247:4376  if (from != sender && !isApprovedForAll(from, sender)) {... */\n      iszero\n      tag_108\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4352:4358  sender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4360:4364  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4323:4365  ERC1155MissingApprovalForAll(sender, from) */\n      mload(0x40)\n      0xe237d92200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap3\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4247:4376  if (from != sender && !isApprovedForAll(from, sender)) {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4385:4436  _safeBatchTransferFrom(from, to, ids, values, data) */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4408:4412  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4414:4416  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4418:4421  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4423:4429  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4431:4435  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4385:4407  _safeBatchTransferFrom */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4385:4436  _safeBatchTransferFrom(from, to, ids, values, data) */\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4198:4443  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4014:4443  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2536:3088  function balanceOfBatch(... */\n    tag_53:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2660:2676  uint256[] memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2711:2714  ids */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2711:2721  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2692:2700  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2692:2707  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2692:2721  accounts.length != ids.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2688:2809  if (accounts.length != ids.length) {... */\n      tag_114\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2770:2773  ids */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2770:2780  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2782:2790  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2782:2797  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2744:2798  ERC1155InvalidArrayLength(ids.length, accounts.length) */\n      mload(0x40)\n      0x5b05999100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap3\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2688:2809  if (accounts.length != ids.length) {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2819:2849  uint256[] memory batchBalances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2866:2874  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2866:2881  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2852:2882  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_117\n      jumpi\n      tag_118\n      tag_119\n      jump\t// in\n    tag_118:\n    tag_117:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_120\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_120:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2819:2882  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2898:2907  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2893:3051  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2917:2925  accounts */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2917:2932  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2913:2914  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2913:2932  i < accounts.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2893:3051  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_122\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2972:3040  balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2982:3012  accounts.unsafeMemoryAccess(i) */\n      tag_125\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3010:3011  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2982:2990  accounts */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2982:3009  accounts.unsafeMemoryAccess */\n      tag_126\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2982:3012  accounts.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3014:3039  ids.unsafeMemoryAccess(i) */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3037:3038  i */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3014:3017  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3014:3036  ids.unsafeMemoryAccess */\n      tag_128\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3014:3039  ids.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2972:2981  balanceOf */\n      tag_23\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2972:3040  balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      jump\t// in\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2953:2966  batchBalances */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2967:2968  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2953:2969  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_129\n      jumpi\n      tag_130\n      tag_131\n      jump\t// in\n    tag_130:\n    tag_129:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2953:3040  batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2934:2937  ++i */\n      dup1\n      tag_132\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2893:3051  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_121)\n    tag_122:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3068:3081  batchBalances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3061:3081  return batchBalances */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2536:3088  function balanceOfBatch(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_97\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_137\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_138\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/MultiNFT.sol\":668:911  function burnToken(uint256 tokenId, uint256 amount) public onlyOwner {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_140\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_97\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_140:\n        /* \"contracts/MultiNFT.sol\":789:795  amount */\n      dup1\n        /* \"contracts/MultiNFT.sol\":755:785  balanceOf(msg.sender, tokenId) */\n      tag_142\n        /* \"contracts/MultiNFT.sol\":765:775  msg.sender */\n      caller\n        /* \"contracts/MultiNFT.sol\":777:784  tokenId */\n      dup5\n        /* \"contracts/MultiNFT.sol\":755:764  balanceOf */\n      tag_23\n        /* \"contracts/MultiNFT.sol\":755:785  balanceOf(msg.sender, tokenId) */\n      jump\t// in\n    tag_142:\n        /* \"contracts/MultiNFT.sol\":755:795  balanceOf(msg.sender, tokenId) >= amount */\n      lt\n      iszero\n        /* \"contracts/MultiNFT.sol\":747:820  require(balanceOf(msg.sender, tokenId) >= amount, \"Insufficient balance\") */\n      tag_143\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_144\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_143:\n        /* \"contracts/MultiNFT.sol\":830:864  _burn(msg.sender, tokenId, amount) */\n      tag_146\n        /* \"contracts/MultiNFT.sol\":836:846  msg.sender */\n      caller\n        /* \"contracts/MultiNFT.sol\":848:855  tokenId */\n      dup4\n        /* \"contracts/MultiNFT.sol\":857:863  amount */\n      dup4\n        /* \"contracts/MultiNFT.sol\":830:835  _burn */\n      tag_147\n        /* \"contracts/MultiNFT.sol\":830:864  _burn(msg.sender, tokenId, amount) */\n      jump\t// in\n    tag_146:\n        /* \"contracts/MultiNFT.sol\":898:904  amount */\n      dup1\n        /* \"contracts/MultiNFT.sol\":874:885  tokenSupply */\n      0x04\n        /* \"contracts/MultiNFT.sol\":874:894  tokenSupply[tokenId] */\n      0x00\n        /* \"contracts/MultiNFT.sol\":886:893  tokenId */\n      dup5\n        /* \"contracts/MultiNFT.sol\":874:894  tokenSupply[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/MultiNFT.sol\":874:904  tokenSupply[tokenId] -= amount */\n      dup3\n      dup3\n      sload\n      tag_148\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MultiNFT.sol\":668:911  function burnToken(uint256 tokenId, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3156:3300  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3241:3293  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_152\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3260:3272  _msgSender() */\n      tag_153\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3260:3270  _msgSender */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3260:3272  _msgSender() */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3274:3282  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3284:3292  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3241:3259  _setApprovalForAll */\n      tag_154\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3241:3293  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_152:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3156:3300  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3367:3524  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3457:3461  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3498  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3507  _operatorApprovals[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3499:3506  account */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3507  _operatorApprovals[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3517  _operatorApprovals[account][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3508:3516  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3517  _operatorApprovals[account][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3517  return _operatorApprovals[account][operator] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3367:3524  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3591:3942  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3714:3728  address sender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3731:3743  _msgSender() */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3731:3741  _msgSender */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3731:3743  _msgSender() */\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3714:3743  address sender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3765:3771  sender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3771  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3761  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3771  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3806  from != sender && !isApprovedForAll(from, sender) */\n      dup1\n      iszero\n      tag_158\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3776:3806  isApprovedForAll(from, sender) */\n      tag_159\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3793:3797  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3799:3805  sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3776:3792  isApprovedForAll */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3776:3806  isApprovedForAll(from, sender) */\n      jump\t// in\n    tag_159:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3775:3806  !isApprovedForAll(from, sender) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3806  from != sender && !isApprovedForAll(from, sender) */\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3753:3882  if (from != sender && !isApprovedForAll(from, sender)) {... */\n      iszero\n      tag_160\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3858:3864  sender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3866:3870  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3829:3871  ERC1155MissingApprovalForAll(sender, from) */\n      mload(0x40)\n      0xe237d92200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap3\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3753:3882  if (from != sender && !isApprovedForAll(from, sender)) {... */\n    tag_160:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3891:3935  _safeTransferFrom(from, to, id, value, data) */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3909:3913  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3915:3917  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3919:3921  id */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3923:3928  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3930:3934  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3891:3908  _safeTransferFrom */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3891:3935  _safeTransferFrom(from, to, id, value, data) */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3704:3942  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3591:3942  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_165\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_97\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_167\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_138\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_169:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_172\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_105\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_62\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_174\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_175\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_105\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_174:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10746:11092  function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10856:10857  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10842:10858  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10842:10844  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10842:10858  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10838:10926  if (to == address(0)) {... */\n      tag_178\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10912:10913  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10881:10915  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10838:10926  if (to == address(0)) {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10936:10956  uint256[] memory ids */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10958:10981  uint256[] memory values */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10985:11014  _asSingletonArrays(id, value) */\n      tag_180\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11004:11006  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11008:11013  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10985:11003  _asSingletonArrays */\n      tag_181\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10985:11014  _asSingletonArrays(id, value) */\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10935:11014  (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11024:11085  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n      tag_182\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11059:11060  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11063:11065  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11067:11070  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11072:11078  values */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11080:11084  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11024:11050  _updateWithAcceptanceCheck */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11024:11085  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10828:11092  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10746:11092  function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9015:9460  function _safeBatchTransferFrom(... */\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9222:9223  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9208:9224  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9208:9210  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9208:9224  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9204:9292  if (to == address(0)) {... */\n      tag_186\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9278:9279  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9247:9281  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9204:9292  if (to == address(0)) {... */\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9321:9322  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9305:9323  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9305:9309  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9305:9323  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9301:9389  if (from == address(0)) {... */\n      tag_188\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9375:9376  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9346:9378  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      0x01a8351400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9301:9389  if (from == address(0)) {... */\n    tag_188:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9398:9453  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      tag_190\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9425:9429  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9431:9433  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9435:9438  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9440:9446  values */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9448:9452  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9398:9424  _updateWithAcceptanceCheck */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9398:9453  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9015:9460  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4603:4800  function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4689:4700  address res */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4777:4781  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4772:4775  pos */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4768:4782  mul(pos, 0x20) */\n      mul\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4761:4765  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4756:4759  arr */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4752:4766  add(arr, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4748:4783  add(add(arr, 0x20), mul(pos, 0x20)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4742:4784  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4735:4784  res := mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4603:4800  function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4204:4401  function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4290:4301  uint256 res */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4378:4382  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4373:4376  pos */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4369:4383  mul(pos, 0x20) */\n      mul\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4362:4366  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4357:4360  arr */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4353:4367  add(arr, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4349:4384  add(add(arr, 0x20), mul(pos, 0x20)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4343:4385  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4336:4385  res := mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4204:4401  function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x03\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12099:12428  function _burn(address from, uint256 id, uint256 value) internal {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12194:12195  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12178:12196  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12178:12182  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12178:12196  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12174:12262  if (from == address(0)) {... */\n      tag_195\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12248:12249  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12219:12251  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      0x01a8351400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12174:12262  if (from == address(0)) {... */\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12272:12292  uint256[] memory ids */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12294:12317  uint256[] memory values */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12321:12350  _asSingletonArrays(id, value) */\n      tag_197\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12340:12342  id */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12344:12349  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12321:12339  _asSingletonArrays */\n      tag_181\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12321:12350  _asSingletonArrays(id, value) */\n      jump\t// in\n    tag_197:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12271:12350  (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12360:12421  _updateWithAcceptanceCheck(from, address(0), ids, values, \"\") */\n      tag_198\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12387:12391  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12401:12402  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12405:12408  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12410:12416  values */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12360:12421  _updateWithAcceptanceCheck(from, address(0), ids, values, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12360:12386  _updateWithAcceptanceCheck */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12360:12421  _updateWithAcceptanceCheck(from, address(0), ids, values, \"\") */\n      jump\t// in\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12164:12428  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12099:12428  function _burn(address from, uint256 id, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13268:13583  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13395:13396  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13375:13397  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13375:13383  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13375:13397  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13371:13465  if (operator == address(0)) {... */\n      tag_200\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13451:13452  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13420:13454  ERC1155InvalidOperator(address(0)) */\n      mload(0x40)\n      0xced3e10000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13371:13465  if (operator == address(0)) {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13512:13520  approved */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13492  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13499  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13493:13498  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13499  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13509  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13500:13508  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13509  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13520  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13557:13565  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13535:13576  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13550:13555  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13535:13576  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13567:13575  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13535:13576  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_202\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13268:13583  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8151:8614  function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8287:8288  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8273:8289  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8273:8275  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8273:8289  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8269:8357  if (to == address(0)) {... */\n      tag_204\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8343:8344  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8312:8346  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8269:8357  if (to == address(0)) {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8386:8387  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8370:8388  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8370:8374  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8370:8388  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8366:8454  if (from == address(0)) {... */\n      tag_206\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8440:8441  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8411:8443  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      0x01a8351400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_207\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8366:8454  if (from == address(0)) {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8464:8484  uint256[] memory ids */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8486:8509  uint256[] memory values */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8513:8542  _asSingletonArrays(id, value) */\n      tag_208\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8532:8534  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8536:8541  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8513:8531  _asSingletonArrays */\n      tag_181\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8513:8542  _asSingletonArrays(id, value) */\n      jump\t// in\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8463:8542  (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8552:8607  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      tag_209\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8579:8583  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8585:8587  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8589:8592  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8594:8600  values */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8602:8606  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8552:8578  _updateWithAcceptanceCheck */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8552:8607  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      jump\t// in\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8259:8614  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8151:8614  function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16080:16929  function _asSingletonArrays(... */\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16188:16211  uint256[] memory array1 */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16213:16236  uint256[] memory array2 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16374:16378  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16368:16379  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16358:16379  array1 := mload(0x40) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16444:16445  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16436:16442  array1 */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16429:16446  mstore(array1, 1) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16582:16590  element1 */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16575:16579  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16567:16573  array1 */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16563:16580  add(array1, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16556:16591  mstore(add(array1, 0x20), element1) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16704:16708  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16696:16702  array1 */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16692:16709  add(array1, 0x40) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16682:16709  array2 := add(array1, 0x40) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16737:16738  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16729:16735  array2 */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16722:16739  mstore(array2, 1) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16778:16786  element2 */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16771:16775  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16763:16769  array2 */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16759:16776  add(array2, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16752:16787  mstore(add(array2, 0x20), element2) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16907:16911  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16899:16905  array2 */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16895:16912  add(array2, 0x40) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16889:16893  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16882:16913  mstore(0x40, add(array2, 0x40)) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16080:16929  function _asSingletonArrays(... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7004:7694  function _updateWithAcceptanceCheck(... */\n    tag_183:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7205:7235  _update(from, to, ids, values) */\n      tag_212\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7213:7217  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7219:7221  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7223:7226  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7228:7234  values */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7205:7212  _update */\n      tag_213\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7205:7235  _update(from, to, ids, values) */\n      jump\t// in\n    tag_212:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7263:7264  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7249:7265  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7249:7251  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7249:7265  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7245:7688  if (to != address(0)) {... */\n      tag_214\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7281:7297  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7300:7312  _msgSender() */\n      tag_215\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7300:7310  _msgSender */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7300:7312  _msgSender() */\n      jump\t// in\n    tag_215:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7281:7312  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7344:7345  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7330:7333  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7330:7340  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7330:7345  ids.length == 1 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\n      tag_216\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7365:7375  uint256 id */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7378:7403  ids.unsafeMemoryAccess(0) */\n      tag_217\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7401:7402  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7378:7381  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7378:7400  ids.unsafeMemoryAccess */\n      tag_128\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7378:7403  ids.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_217:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7365:7403  uint256 id = ids.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7421:7434  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7437:7465  values.unsafeMemoryAccess(0) */\n      tag_218\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7463:7464  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7437:7443  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7437:7462  values.unsafeMemoryAccess */\n      tag_128\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7437:7465  values.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_218:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7421:7465  uint256 value = values.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7483:7550  _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data) */\n      tag_219\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7514:7522  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7524:7528  from */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7530:7532  to */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7534:7536  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7538:7543  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7545:7549  data */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7483:7513  _doSafeTransferAcceptanceCheck */\n      tag_220\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7483:7550  _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data) */\n      jump\t// in\n    tag_219:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7347:7565  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\n      jump(tag_221)\n    tag_216:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7589:7663  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data) */\n      tag_222\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7625:7633  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7635:7639  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7641:7643  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7645:7648  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7650:7656  values */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7658:7662  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7589:7624  _doSafeBatchTransferAcceptanceCheck */\n      tag_223\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7589:7663  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data) */\n      jump\t// in\n    tag_222:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\n    tag_221:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7267:7688  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7245:7688  if (to != address(0)) {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7004:7694  function _updateWithAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5144:6425  function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {... */\n    tag_213:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5279:5285  values */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5279:5292  values.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5265:5268  ids */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5265:5275  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5265:5292  ids.length != values.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5261:5378  if (ids.length != values.length) {... */\n      tag_225\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5341:5344  ids */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5341:5351  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5353:5359  values */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5353:5366  values.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5315:5367  ERC1155InvalidArrayLength(ids.length, values.length) */\n      mload(0x40)\n      0x5b05999100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_226\n      swap3\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_226:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5261:5378  if (ids.length != values.length) {... */\n    tag_225:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5388:5404  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5407:5419  _msgSender() */\n      tag_227\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5407:5417  _msgSender */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5407:5419  _msgSender() */\n      jump\t// in\n    tag_227:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5388:5419  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5435:5444  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_228:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5454:5457  ids */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5454:5464  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5450:5451  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5450:5464  i < ids.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_229\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5495  uint256 id */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5498:5523  ids.unsafeMemoryAccess(i) */\n      tag_231\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5521:5522  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5498:5501  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5498:5520  ids.unsafeMemoryAccess */\n      tag_128\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5498:5523  ids.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_231:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5523  uint256 id = ids.unsafeMemoryAccess(i) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5537:5550  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5553:5581  values.unsafeMemoryAccess(i) */\n      tag_232\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5579:5580  i */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5553:5559  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5553:5578  values.unsafeMemoryAccess */\n      tag_128\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5553:5581  values.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_232:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5537:5581  uint256 value = values.unsafeMemoryAccess(i) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5616:5617  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5600:5618  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5600:5604  from */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5600:5618  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5596:6016  if (from != address(0)) {... */\n      tag_233\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5638:5657  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5669  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5673  _balances[id] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5670:5672  id */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5673  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5679  _balances[id][from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5674:5678  from */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5679  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5638:5679  uint256 fromBalance = _balances[id][from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5715:5720  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5701:5712  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5701:5720  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5697:5826  if (fromBalance < value) {... */\n      iszero\n      tag_234\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5778:5782  from */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5784:5795  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5797:5802  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5804:5806  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5751:5807  ERC1155InsufficientBalance(from, fromBalance, value, id) */\n      mload(0x40)\n      0x03dee4c500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_235\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_236\n      jump\t// in\n    tag_235:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5697:5826  if (fromBalance < value) {... */\n    tag_234:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5978:5983  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5964:5975  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5964:5983  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5951  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5955  _balances[id] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5952:5954  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5955  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5961  _balances[id][from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5956:5960  from */\n      dup12\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5961  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5983  _balances[id][from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5620:6016  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5596:6016  if (from != address(0)) {... */\n    tag_233:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6048:6049  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6034:6050  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6034:6036  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6034:6050  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6030:6111  if (to != address(0)) {... */\n      tag_237\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6091:6096  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6079  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6083  _balances[id] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6080:6082  id */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6083  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6087  _balances[id][to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6084:6086  to */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6087  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6096  _balances[id][to] += value */\n      dup3\n      dup3\n      sload\n      tag_238\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_238:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6030:6111  if (to != address(0)) {... */\n    tag_237:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5471:6121  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5466:5469  ++i */\n      dup1\n      tag_239\n      swap1\n      tag_133\n      jump\t// in\n    tag_239:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_228)\n    tag_229:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6149:6150  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6135:6138  ids */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6135:6145  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6135:6150  ids.length == 1 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\n      tag_240\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6166:6176  uint256 id */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6179:6204  ids.unsafeMemoryAccess(0) */\n      tag_241\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6202:6203  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6179:6182  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6179:6201  ids.unsafeMemoryAccess */\n      tag_128\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6179:6204  ids.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_241:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6166:6204  uint256 id = ids.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6218:6231  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6234:6262  values.unsafeMemoryAccess(0) */\n      tag_242\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6260:6261  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6234:6240  values */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6234:6259  values.unsafeMemoryAccess */\n      tag_128\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6234:6262  values.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6218:6262  uint256 value = values.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6312:6314  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6306:6310  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6296:6304  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6316:6318  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6320:6325  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      mload(0x40)\n      tag_243\n      swap3\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_243:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6152:6337  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\n      jump(tag_244)\n    tag_240:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6392:6394  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6386:6390  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6376:6384  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6396:6399  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6401:6407  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      mload(0x40)\n      tag_245\n      swap3\n      swap2\n      swap1\n      tag_246\n      jump\t// in\n    tag_245:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\n    tag_244:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5251:6425  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5144:6425  function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13761:14735  function _doSafeTransferAcceptanceCheck(... */\n    tag_220:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13984:13985  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13967:13969  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13967:13981  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13967:13985  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13963:14729  if (to.code.length > 0) {... */\n      iszero\n      tag_248\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14022:14024  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14005:14043  IERC1155Receiver(to).onERC1155Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf23a6e61\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14044:14052  operator */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14054:14058  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14060:14062  id */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14064:14069  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14071:14075  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14005:14076  IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_249\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_250\n      jump\t// in\n    tag_249:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_251\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_252\n      swap2\n      swap1\n      tag_253\n      jump\t// in\n    tag_252:\n      0x01\n    tag_251:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14001:14719  try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {... */\n      tag_254\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_259\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_258)\n    tag_259:\n      0x60\n      swap2\n      pop\n    tag_258:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14377:14378  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14360:14366  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14360:14373  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14360:14378  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14356:14705  if (reason.length == 0) {... */\n      tag_260\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14487:14489  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14464:14490  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_261\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_261:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14356:14705  if (reason.length == 0) {... */\n    tag_260:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14657:14663  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14651:14664  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14642:14648  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14638:14640  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14634:14649  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14627:14665  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14001:14719  try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {... */\n    tag_254:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14137:14180  IERC1155Receiver.onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14125:14180  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14125:14133  response */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14125:14180  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14121:14295  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_264\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14273:14275  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14250:14276  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_265\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_265:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14121:14295  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n    tag_264:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14077:14309  returns (bytes4 response) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13963:14729  if (to.code.length > 0) {... */\n    tag_248:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13761:14735  function _doSafeTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14923:15964  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_223:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15171:15172  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15154:15156  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15154:15168  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15154:15172  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15150:15958  if (to.code.length > 0) {... */\n      iszero\n      tag_267\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15209:15211  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15192:15235  IERC1155Receiver(to).onERC1155BatchReceived */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc197c81\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15236:15244  operator */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15246:15250  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15252:15255  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15257:15263  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15265:15269  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15192:15270  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_268\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_269\n      jump\t// in\n    tag_268:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_270\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_271\n      swap2\n      swap1\n      tag_253\n      jump\t// in\n    tag_271:\n      0x01\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15188:15948  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (... */\n      tag_272\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_277\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_276)\n    tag_277:\n      0x60\n      swap2\n      pop\n    tag_276:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15606:15607  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15589:15595  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15589:15602  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15589:15607  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15585:15934  if (reason.length == 0) {... */\n      tag_278\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15716:15718  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15693:15719  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_279\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_279:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15585:15934  if (reason.length == 0) {... */\n    tag_278:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15886:15892  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15880:15893  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15871:15877  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15867:15869  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15863:15878  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15856:15894  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15188:15948  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (... */\n    tag_272:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15361:15409  IERC1155Receiver.onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15349:15409  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15349:15357  response */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15349:15409  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15345:15524  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_282\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15502:15504  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15479:15505  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_283\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_283:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15345:15524  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n    tag_282:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15271:15538  returns (... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15150:15958  if (to.code.length > 0) {... */\n    tag_267:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14923:15964  function _doSafeBatchTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_284:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_285:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_286:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_287:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_288:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_344\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_287\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_289:\n        /* \"#utility.yul\":641:665   */\n      tag_346\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_288\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_347\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_347:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_290:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_349\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_289\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_291:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_292:\n        /* \"#utility.yul\":997:1021   */\n      tag_352\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_291\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_353\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_353:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_293:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_355\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_292\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_22:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_357\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_358\n      tag_285\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":1290:1409   */\n    tag_357:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_359\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_290\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_360\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_293\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1795   */\n    tag_294:\n        /* \"#utility.yul\":1764:1788   */\n      tag_362\n        /* \"#utility.yul\":1782:1787   */\n      dup2\n        /* \"#utility.yul\":1764:1788   */\n      tag_291\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":1759:1762   */\n      dup3\n        /* \"#utility.yul\":1752:1789   */\n      mstore\n        /* \"#utility.yul\":1677:1795   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1801:2023   */\n    tag_25:\n        /* \"#utility.yul\":1894:1898   */\n      0x00\n        /* \"#utility.yul\":1932:1934   */\n      0x20\n        /* \"#utility.yul\":1921:1930   */\n      dup3\n        /* \"#utility.yul\":1917:1935   */\n      add\n        /* \"#utility.yul\":1909:1935   */\n      swap1\n      pop\n        /* \"#utility.yul\":1945:2016   */\n      tag_364\n        /* \"#utility.yul\":2013:2014   */\n      0x00\n        /* \"#utility.yul\":2002:2011   */\n      dup4\n        /* \"#utility.yul\":1998:2015   */\n      add\n        /* \"#utility.yul\":1989:1995   */\n      dup5\n        /* \"#utility.yul\":1945:2016   */\n      tag_294\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":1801:2023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2178   */\n    tag_295:\n        /* \"#utility.yul\":2065:2072   */\n      0x00\n        /* \"#utility.yul\":2105:2171   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2098:2103   */\n      dup3\n        /* \"#utility.yul\":2094:2172   */\n      and\n        /* \"#utility.yul\":2083:2172   */\n      swap1\n      pop\n        /* \"#utility.yul\":2029:2178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2184:2304   */\n    tag_296:\n        /* \"#utility.yul\":2256:2279   */\n      tag_367\n        /* \"#utility.yul\":2273:2278   */\n      dup2\n        /* \"#utility.yul\":2256:2279   */\n      tag_295\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2246:2280   */\n      eq\n        /* \"#utility.yul\":2236:2298   */\n      tag_368\n      jumpi\n        /* \"#utility.yul\":2294:2295   */\n      0x00\n        /* \"#utility.yul\":2291:2292   */\n      dup1\n        /* \"#utility.yul\":2284:2296   */\n      revert\n        /* \"#utility.yul\":2236:2298   */\n    tag_368:\n        /* \"#utility.yul\":2184:2304   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2310:2447   */\n    tag_297:\n        /* \"#utility.yul\":2355:2360   */\n      0x00\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2380:2400   */\n      calldataload\n        /* \"#utility.yul\":2371:2400   */\n      swap1\n      pop\n        /* \"#utility.yul\":2409:2441   */\n      tag_370\n        /* \"#utility.yul\":2435:2440   */\n      dup2\n        /* \"#utility.yul\":2409:2441   */\n      tag_296\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":2310:2447   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2453:2780   */\n    tag_28:\n        /* \"#utility.yul\":2511:2517   */\n      0x00\n        /* \"#utility.yul\":2560:2562   */\n      0x20\n        /* \"#utility.yul\":2548:2557   */\n      dup3\n        /* \"#utility.yul\":2539:2546   */\n      dup5\n        /* \"#utility.yul\":2535:2558   */\n      sub\n        /* \"#utility.yul\":2531:2563   */\n      slt\n        /* \"#utility.yul\":2528:2647   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":2566:2645   */\n      tag_373\n      tag_285\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":2528:2647   */\n    tag_372:\n        /* \"#utility.yul\":2686:2687   */\n      0x00\n        /* \"#utility.yul\":2711:2763   */\n      tag_374\n        /* \"#utility.yul\":2755:2762   */\n      dup5\n        /* \"#utility.yul\":2746:2752   */\n      dup3\n        /* \"#utility.yul\":2735:2744   */\n      dup6\n        /* \"#utility.yul\":2731:2753   */\n      add\n        /* \"#utility.yul\":2711:2763   */\n      tag_297\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":2701:2763   */\n      swap2\n      pop\n        /* \"#utility.yul\":2657:2773   */\n      pop\n        /* \"#utility.yul\":2453:2780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2786:2876   */\n    tag_298:\n        /* \"#utility.yul\":2820:2827   */\n      0x00\n        /* \"#utility.yul\":2863:2868   */\n      dup2\n        /* \"#utility.yul\":2856:2869   */\n      iszero\n        /* \"#utility.yul\":2849:2870   */\n      iszero\n        /* \"#utility.yul\":2838:2870   */\n      swap1\n      pop\n        /* \"#utility.yul\":2786:2876   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2882:2991   */\n    tag_299:\n        /* \"#utility.yul\":2963:2984   */\n      tag_377\n        /* \"#utility.yul\":2978:2983   */\n      dup2\n        /* \"#utility.yul\":2963:2984   */\n      tag_298\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":2958:2961   */\n      dup3\n        /* \"#utility.yul\":2951:2985   */\n      mstore\n        /* \"#utility.yul\":2882:2991   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2997:3207   */\n    tag_31:\n        /* \"#utility.yul\":3084:3088   */\n      0x00\n        /* \"#utility.yul\":3122:3124   */\n      0x20\n        /* \"#utility.yul\":3111:3120   */\n      dup3\n        /* \"#utility.yul\":3107:3125   */\n      add\n        /* \"#utility.yul\":3099:3125   */\n      swap1\n      pop\n        /* \"#utility.yul\":3135:3200   */\n      tag_379\n        /* \"#utility.yul\":3197:3198   */\n      0x00\n        /* \"#utility.yul\":3186:3195   */\n      dup4\n        /* \"#utility.yul\":3182:3199   */\n      add\n        /* \"#utility.yul\":3173:3179   */\n      dup5\n        /* \"#utility.yul\":3135:3200   */\n      tag_299\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":2997:3207   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3213:3542   */\n    tag_34:\n        /* \"#utility.yul\":3272:3278   */\n      0x00\n        /* \"#utility.yul\":3321:3323   */\n      0x20\n        /* \"#utility.yul\":3309:3318   */\n      dup3\n        /* \"#utility.yul\":3300:3307   */\n      dup5\n        /* \"#utility.yul\":3296:3319   */\n      sub\n        /* \"#utility.yul\":3292:3324   */\n      slt\n        /* \"#utility.yul\":3289:3408   */\n      iszero\n      tag_381\n      jumpi\n        /* \"#utility.yul\":3327:3406   */\n      tag_382\n      tag_285\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":3289:3408   */\n    tag_381:\n        /* \"#utility.yul\":3447:3448   */\n      0x00\n        /* \"#utility.yul\":3472:3525   */\n      tag_383\n        /* \"#utility.yul\":3517:3524   */\n      dup5\n        /* \"#utility.yul\":3508:3514   */\n      dup3\n        /* \"#utility.yul\":3497:3506   */\n      dup6\n        /* \"#utility.yul\":3493:3515   */\n      add\n        /* \"#utility.yul\":3472:3525   */\n      tag_293\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":3462:3525   */\n      swap2\n      pop\n        /* \"#utility.yul\":3418:3535   */\n      pop\n        /* \"#utility.yul\":3213:3542   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3548:3647   */\n    tag_300:\n        /* \"#utility.yul\":3600:3606   */\n      0x00\n        /* \"#utility.yul\":3634:3639   */\n      dup2\n        /* \"#utility.yul\":3628:3640   */\n      mload\n        /* \"#utility.yul\":3618:3640   */\n      swap1\n      pop\n        /* \"#utility.yul\":3548:3647   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3653:3822   */\n    tag_301:\n        /* \"#utility.yul\":3737:3748   */\n      0x00\n        /* \"#utility.yul\":3771:3777   */\n      dup3\n        /* \"#utility.yul\":3766:3769   */\n      dup3\n        /* \"#utility.yul\":3759:3778   */\n      mstore\n        /* \"#utility.yul\":3811:3815   */\n      0x20\n        /* \"#utility.yul\":3806:3809   */\n      dup3\n        /* \"#utility.yul\":3802:3816   */\n      add\n        /* \"#utility.yul\":3787:3816   */\n      swap1\n      pop\n        /* \"#utility.yul\":3653:3822   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3828:4074   */\n    tag_302:\n        /* \"#utility.yul\":3909:3910   */\n      0x00\n        /* \"#utility.yul\":3919:4032   */\n    tag_387:\n        /* \"#utility.yul\":3933:3939   */\n      dup4\n        /* \"#utility.yul\":3930:3931   */\n      dup2\n        /* \"#utility.yul\":3927:3940   */\n      lt\n        /* \"#utility.yul\":3919:4032   */\n      iszero\n      tag_389\n      jumpi\n        /* \"#utility.yul\":4018:4019   */\n      dup1\n        /* \"#utility.yul\":4013:4016   */\n      dup3\n        /* \"#utility.yul\":4009:4020   */\n      add\n        /* \"#utility.yul\":4003:4021   */\n      mload\n        /* \"#utility.yul\":3999:4000   */\n      dup2\n        /* \"#utility.yul\":3994:3997   */\n      dup5\n        /* \"#utility.yul\":3990:4001   */\n      add\n        /* \"#utility.yul\":3983:4022   */\n      mstore\n        /* \"#utility.yul\":3955:3957   */\n      0x20\n        /* \"#utility.yul\":3952:3953   */\n      dup2\n        /* \"#utility.yul\":3948:3958   */\n      add\n        /* \"#utility.yul\":3943:3958   */\n      swap1\n      pop\n        /* \"#utility.yul\":3919:4032   */\n      jump(tag_387)\n    tag_389:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4057:4063   */\n      dup5\n        /* \"#utility.yul\":4052:4055   */\n      dup5\n        /* \"#utility.yul\":4048:4064   */\n      add\n        /* \"#utility.yul\":4041:4068   */\n      mstore\n        /* \"#utility.yul\":3890:4074   */\n      pop\n        /* \"#utility.yul\":3828:4074   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4080:4182   */\n    tag_303:\n        /* \"#utility.yul\":4121:4127   */\n      0x00\n        /* \"#utility.yul\":4172:4174   */\n      0x1f\n        /* \"#utility.yul\":4168:4175   */\n      not\n        /* \"#utility.yul\":4163:4165   */\n      0x1f\n        /* \"#utility.yul\":4156:4161   */\n      dup4\n        /* \"#utility.yul\":4152:4166   */\n      add\n        /* \"#utility.yul\":4148:4176   */\n      and\n        /* \"#utility.yul\":4138:4176   */\n      swap1\n      pop\n        /* \"#utility.yul\":4080:4182   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4188:4565   */\n    tag_304:\n        /* \"#utility.yul\":4276:4279   */\n      0x00\n        /* \"#utility.yul\":4304:4343   */\n      tag_392\n        /* \"#utility.yul\":4337:4342   */\n      dup3\n        /* \"#utility.yul\":4304:4343   */\n      tag_300\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":4359:4430   */\n      tag_393\n        /* \"#utility.yul\":4423:4429   */\n      dup2\n        /* \"#utility.yul\":4418:4421   */\n      dup6\n        /* \"#utility.yul\":4359:4430   */\n      tag_301\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":4352:4430   */\n      swap4\n      pop\n        /* \"#utility.yul\":4439:4504   */\n      tag_394\n        /* \"#utility.yul\":4497:4503   */\n      dup2\n        /* \"#utility.yul\":4492:4495   */\n      dup6\n        /* \"#utility.yul\":4485:4489   */\n      0x20\n        /* \"#utility.yul\":4478:4483   */\n      dup7\n        /* \"#utility.yul\":4474:4490   */\n      add\n        /* \"#utility.yul\":4439:4504   */\n      tag_302\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":4529:4558   */\n      tag_395\n        /* \"#utility.yul\":4551:4557   */\n      dup2\n        /* \"#utility.yul\":4529:4558   */\n      tag_303\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":4524:4527   */\n      dup5\n        /* \"#utility.yul\":4520:4559   */\n      add\n        /* \"#utility.yul\":4513:4559   */\n      swap2\n      pop\n        /* \"#utility.yul\":4280:4565   */\n      pop\n        /* \"#utility.yul\":4188:4565   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4571:4884   */\n    tag_37:\n        /* \"#utility.yul\":4684:4688   */\n      0x00\n        /* \"#utility.yul\":4722:4724   */\n      0x20\n        /* \"#utility.yul\":4711:4720   */\n      dup3\n        /* \"#utility.yul\":4707:4725   */\n      add\n        /* \"#utility.yul\":4699:4725   */\n      swap1\n      pop\n        /* \"#utility.yul\":4771:4780   */\n      dup2\n        /* \"#utility.yul\":4765:4769   */\n      dup2\n        /* \"#utility.yul\":4761:4781   */\n      sub\n        /* \"#utility.yul\":4757:4758   */\n      0x00\n        /* \"#utility.yul\":4746:4755   */\n      dup4\n        /* \"#utility.yul\":4742:4759   */\n      add\n        /* \"#utility.yul\":4735:4782   */\n      mstore\n        /* \"#utility.yul\":4799:4877   */\n      tag_397\n        /* \"#utility.yul\":4872:4876   */\n      dup2\n        /* \"#utility.yul\":4863:4869   */\n      dup5\n        /* \"#utility.yul\":4799:4877   */\n      tag_304\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":4791:4877   */\n      swap1\n      pop\n        /* \"#utility.yul\":4571:4884   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5364   */\n    tag_40:\n        /* \"#utility.yul\":4958:4964   */\n      0x00\n        /* \"#utility.yul\":4966:4972   */\n      dup1\n        /* \"#utility.yul\":5015:5017   */\n      0x40\n        /* \"#utility.yul\":5003:5012   */\n      dup4\n        /* \"#utility.yul\":4994:5001   */\n      dup6\n        /* \"#utility.yul\":4990:5013   */\n      sub\n        /* \"#utility.yul\":4986:5018   */\n      slt\n        /* \"#utility.yul\":4983:5102   */\n      iszero\n      tag_399\n      jumpi\n        /* \"#utility.yul\":5021:5100   */\n      tag_400\n      tag_285\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":4983:5102   */\n    tag_399:\n        /* \"#utility.yul\":5141:5142   */\n      0x00\n        /* \"#utility.yul\":5166:5219   */\n      tag_401\n        /* \"#utility.yul\":5211:5218   */\n      dup6\n        /* \"#utility.yul\":5202:5208   */\n      dup3\n        /* \"#utility.yul\":5191:5200   */\n      dup7\n        /* \"#utility.yul\":5187:5209   */\n      add\n        /* \"#utility.yul\":5166:5219   */\n      tag_293\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":5156:5219   */\n      swap3\n      pop\n        /* \"#utility.yul\":5112:5229   */\n      pop\n        /* \"#utility.yul\":5268:5270   */\n      0x20\n        /* \"#utility.yul\":5294:5347   */\n      tag_402\n        /* \"#utility.yul\":5339:5346   */\n      dup6\n        /* \"#utility.yul\":5330:5336   */\n      dup3\n        /* \"#utility.yul\":5319:5328   */\n      dup7\n        /* \"#utility.yul\":5315:5337   */\n      add\n        /* \"#utility.yul\":5294:5347   */\n      tag_293\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":5284:5347   */\n      swap2\n      pop\n        /* \"#utility.yul\":5239:5357   */\n      pop\n        /* \"#utility.yul\":4890:5364   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5370:5487   */\n    tag_305:\n        /* \"#utility.yul\":5479:5480   */\n      0x00\n        /* \"#utility.yul\":5476:5477   */\n      dup1\n        /* \"#utility.yul\":5469:5481   */\n      revert\n        /* \"#utility.yul\":5493:5673   */\n    tag_119:\n        /* \"#utility.yul\":5541:5618   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5538:5539   */\n      0x00\n        /* \"#utility.yul\":5531:5619   */\n      mstore\n        /* \"#utility.yul\":5638:5642   */\n      0x41\n        /* \"#utility.yul\":5635:5636   */\n      0x04\n        /* \"#utility.yul\":5628:5643   */\n      mstore\n        /* \"#utility.yul\":5662:5666   */\n      0x24\n        /* \"#utility.yul\":5659:5660   */\n      0x00\n        /* \"#utility.yul\":5652:5667   */\n      revert\n        /* \"#utility.yul\":5679:5960   */\n    tag_306:\n        /* \"#utility.yul\":5762:5789   */\n      tag_406\n        /* \"#utility.yul\":5784:5788   */\n      dup3\n        /* \"#utility.yul\":5762:5789   */\n      tag_303\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":5754:5760   */\n      dup2\n        /* \"#utility.yul\":5750:5790   */\n      add\n        /* \"#utility.yul\":5892:5898   */\n      dup2\n        /* \"#utility.yul\":5880:5890   */\n      dup2\n        /* \"#utility.yul\":5877:5899   */\n      lt\n        /* \"#utility.yul\":5856:5874   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5844:5854   */\n      dup3\n        /* \"#utility.yul\":5841:5875   */\n      gt\n        /* \"#utility.yul\":5838:5900   */\n      or\n        /* \"#utility.yul\":5835:5923   */\n      iszero\n      tag_407\n      jumpi\n        /* \"#utility.yul\":5903:5921   */\n      tag_408\n      tag_119\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":5835:5923   */\n    tag_407:\n        /* \"#utility.yul\":5943:5953   */\n      dup1\n        /* \"#utility.yul\":5939:5941   */\n      0x40\n        /* \"#utility.yul\":5932:5954   */\n      mstore\n        /* \"#utility.yul\":5722:5960   */\n      pop\n        /* \"#utility.yul\":5679:5960   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5966:6095   */\n    tag_307:\n        /* \"#utility.yul\":6000:6006   */\n      0x00\n        /* \"#utility.yul\":6027:6047   */\n      tag_410\n      tag_284\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":6017:6047   */\n      swap1\n      pop\n        /* \"#utility.yul\":6056:6089   */\n      tag_411\n        /* \"#utility.yul\":6084:6088   */\n      dup3\n        /* \"#utility.yul\":6076:6082   */\n      dup3\n        /* \"#utility.yul\":6056:6089   */\n      tag_306\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":5966:6095   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6101:6412   */\n    tag_308:\n        /* \"#utility.yul\":6178:6182   */\n      0x00\n        /* \"#utility.yul\":6268:6286   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6260:6266   */\n      dup3\n        /* \"#utility.yul\":6257:6287   */\n      gt\n        /* \"#utility.yul\":6254:6310   */\n      iszero\n      tag_413\n      jumpi\n        /* \"#utility.yul\":6290:6308   */\n      tag_414\n      tag_119\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":6254:6310   */\n    tag_413:\n        /* \"#utility.yul\":6340:6344   */\n      0x20\n        /* \"#utility.yul\":6332:6338   */\n      dup3\n        /* \"#utility.yul\":6328:6345   */\n      mul\n        /* \"#utility.yul\":6320:6345   */\n      swap1\n      pop\n        /* \"#utility.yul\":6400:6404   */\n      0x20\n        /* \"#utility.yul\":6394:6398   */\n      dup2\n        /* \"#utility.yul\":6390:6405   */\n      add\n        /* \"#utility.yul\":6382:6405   */\n      swap1\n      pop\n        /* \"#utility.yul\":6101:6412   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6418:6535   */\n    tag_309:\n        /* \"#utility.yul\":6527:6528   */\n      0x00\n        /* \"#utility.yul\":6524:6525   */\n      dup1\n        /* \"#utility.yul\":6517:6529   */\n      revert\n        /* \"#utility.yul\":6558:7268   */\n    tag_310:\n        /* \"#utility.yul\":6654:6659   */\n      0x00\n        /* \"#utility.yul\":6679:6760   */\n      tag_417\n        /* \"#utility.yul\":6695:6759   */\n      tag_418\n        /* \"#utility.yul\":6752:6758   */\n      dup5\n        /* \"#utility.yul\":6695:6759   */\n      tag_308\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":6679:6760   */\n      tag_307\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":6670:6760   */\n      swap1\n      pop\n        /* \"#utility.yul\":6780:6785   */\n      dup1\n        /* \"#utility.yul\":6809:6815   */\n      dup4\n        /* \"#utility.yul\":6802:6807   */\n      dup3\n        /* \"#utility.yul\":6795:6816   */\n      mstore\n        /* \"#utility.yul\":6843:6847   */\n      0x20\n        /* \"#utility.yul\":6836:6841   */\n      dup3\n        /* \"#utility.yul\":6832:6848   */\n      add\n        /* \"#utility.yul\":6825:6848   */\n      swap1\n      pop\n        /* \"#utility.yul\":6896:6900   */\n      0x20\n        /* \"#utility.yul\":6888:6894   */\n      dup5\n        /* \"#utility.yul\":6884:6901   */\n      mul\n        /* \"#utility.yul\":6876:6882   */\n      dup4\n        /* \"#utility.yul\":6872:6902   */\n      add\n        /* \"#utility.yul\":6925:6928   */\n      dup6\n        /* \"#utility.yul\":6917:6923   */\n      dup2\n        /* \"#utility.yul\":6914:6929   */\n      gt\n        /* \"#utility.yul\":6911:7033   */\n      iszero\n      tag_419\n      jumpi\n        /* \"#utility.yul\":6944:7023   */\n      tag_420\n      tag_309\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":6911:7033   */\n    tag_419:\n        /* \"#utility.yul\":7059:7065   */\n      dup4\n        /* \"#utility.yul\":7042:7262   */\n    tag_421:\n        /* \"#utility.yul\":7076:7082   */\n      dup2\n        /* \"#utility.yul\":7071:7074   */\n      dup2\n        /* \"#utility.yul\":7068:7083   */\n      lt\n        /* \"#utility.yul\":7042:7262   */\n      iszero\n      tag_423\n      jumpi\n        /* \"#utility.yul\":7151:7154   */\n      dup1\n        /* \"#utility.yul\":7180:7217   */\n      tag_424\n        /* \"#utility.yul\":7213:7216   */\n      dup9\n        /* \"#utility.yul\":7201:7211   */\n      dup3\n        /* \"#utility.yul\":7180:7217   */\n      tag_293\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":7175:7178   */\n      dup5\n        /* \"#utility.yul\":7168:7218   */\n      mstore\n        /* \"#utility.yul\":7247:7251   */\n      0x20\n        /* \"#utility.yul\":7242:7245   */\n      dup5\n        /* \"#utility.yul\":7238:7252   */\n      add\n        /* \"#utility.yul\":7231:7252   */\n      swap4\n      pop\n        /* \"#utility.yul\":7118:7262   */\n      pop\n        /* \"#utility.yul\":7102:7106   */\n      0x20\n        /* \"#utility.yul\":7097:7100   */\n      dup2\n        /* \"#utility.yul\":7093:7107   */\n      add\n        /* \"#utility.yul\":7086:7107   */\n      swap1\n      pop\n        /* \"#utility.yul\":7042:7262   */\n      jump(tag_421)\n    tag_423:\n        /* \"#utility.yul\":7046:7067   */\n      pop\n        /* \"#utility.yul\":6660:7268   */\n      pop\n      pop\n        /* \"#utility.yul\":6558:7268   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7291:7661   */\n    tag_311:\n        /* \"#utility.yul\":7362:7367   */\n      0x00\n        /* \"#utility.yul\":7411:7414   */\n      dup3\n        /* \"#utility.yul\":7404:7408   */\n      0x1f\n        /* \"#utility.yul\":7396:7402   */\n      dup4\n        /* \"#utility.yul\":7392:7409   */\n      add\n        /* \"#utility.yul\":7388:7415   */\n      slt\n        /* \"#utility.yul\":7378:7500   */\n      tag_426\n      jumpi\n        /* \"#utility.yul\":7419:7498   */\n      tag_427\n      tag_305\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":7378:7500   */\n    tag_426:\n        /* \"#utility.yul\":7536:7542   */\n      dup2\n        /* \"#utility.yul\":7523:7543   */\n      calldataload\n        /* \"#utility.yul\":7561:7655   */\n      tag_428\n        /* \"#utility.yul\":7651:7654   */\n      dup5\n        /* \"#utility.yul\":7643:7649   */\n      dup3\n        /* \"#utility.yul\":7636:7640   */\n      0x20\n        /* \"#utility.yul\":7628:7634   */\n      dup7\n        /* \"#utility.yul\":7624:7641   */\n      add\n        /* \"#utility.yul\":7561:7655   */\n      tag_310\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":7552:7655   */\n      swap2\n      pop\n        /* \"#utility.yul\":7368:7661   */\n      pop\n        /* \"#utility.yul\":7291:7661   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7667:7784   */\n    tag_312:\n        /* \"#utility.yul\":7776:7777   */\n      0x00\n        /* \"#utility.yul\":7773:7774   */\n      dup1\n        /* \"#utility.yul\":7766:7778   */\n      revert\n        /* \"#utility.yul\":7790:8097   */\n    tag_313:\n        /* \"#utility.yul\":7851:7855   */\n      0x00\n        /* \"#utility.yul\":7941:7959   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7933:7939   */\n      dup3\n        /* \"#utility.yul\":7930:7960   */\n      gt\n        /* \"#utility.yul\":7927:7983   */\n      iszero\n      tag_431\n      jumpi\n        /* \"#utility.yul\":7963:7981   */\n      tag_432\n      tag_119\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":7927:7983   */\n    tag_431:\n        /* \"#utility.yul\":8001:8030   */\n      tag_433\n        /* \"#utility.yul\":8023:8029   */\n      dup3\n        /* \"#utility.yul\":8001:8030   */\n      tag_303\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":7993:8030   */\n      swap1\n      pop\n        /* \"#utility.yul\":8085:8089   */\n      0x20\n        /* \"#utility.yul\":8079:8083   */\n      dup2\n        /* \"#utility.yul\":8075:8090   */\n      add\n        /* \"#utility.yul\":8067:8090   */\n      swap1\n      pop\n        /* \"#utility.yul\":7790:8097   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8103:8249   */\n    tag_314:\n        /* \"#utility.yul\":8200:8206   */\n      dup3\n        /* \"#utility.yul\":8195:8198   */\n      dup2\n        /* \"#utility.yul\":8190:8193   */\n      dup4\n        /* \"#utility.yul\":8177:8207   */\n      calldatacopy\n        /* \"#utility.yul\":8241:8242   */\n      0x00\n        /* \"#utility.yul\":8232:8238   */\n      dup4\n        /* \"#utility.yul\":8227:8230   */\n      dup4\n        /* \"#utility.yul\":8223:8239   */\n      add\n        /* \"#utility.yul\":8216:8243   */\n      mstore\n        /* \"#utility.yul\":8103:8249   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8255:8678   */\n    tag_315:\n        /* \"#utility.yul\":8332:8337   */\n      0x00\n        /* \"#utility.yul\":8357:8422   */\n      tag_436\n        /* \"#utility.yul\":8373:8421   */\n      tag_437\n        /* \"#utility.yul\":8414:8420   */\n      dup5\n        /* \"#utility.yul\":8373:8421   */\n      tag_313\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":8357:8422   */\n      tag_307\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":8348:8422   */\n      swap1\n      pop\n        /* \"#utility.yul\":8445:8451   */\n      dup3\n        /* \"#utility.yul\":8438:8443   */\n      dup2\n        /* \"#utility.yul\":8431:8452   */\n      mstore\n        /* \"#utility.yul\":8483:8487   */\n      0x20\n        /* \"#utility.yul\":8476:8481   */\n      dup2\n        /* \"#utility.yul\":8472:8488   */\n      add\n        /* \"#utility.yul\":8521:8524   */\n      dup5\n        /* \"#utility.yul\":8512:8518   */\n      dup5\n        /* \"#utility.yul\":8507:8510   */\n      dup5\n        /* \"#utility.yul\":8503:8519   */\n      add\n        /* \"#utility.yul\":8500:8525   */\n      gt\n        /* \"#utility.yul\":8497:8609   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":8528:8607   */\n      tag_439\n      tag_312\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":8497:8609   */\n    tag_438:\n        /* \"#utility.yul\":8618:8672   */\n      tag_440\n        /* \"#utility.yul\":8665:8671   */\n      dup5\n        /* \"#utility.yul\":8660:8663   */\n      dup3\n        /* \"#utility.yul\":8655:8658   */\n      dup6\n        /* \"#utility.yul\":8618:8672   */\n      tag_314\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":8338:8678   */\n      pop\n        /* \"#utility.yul\":8255:8678   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8697:9035   */\n    tag_316:\n        /* \"#utility.yul\":8752:8757   */\n      0x00\n        /* \"#utility.yul\":8801:8804   */\n      dup3\n        /* \"#utility.yul\":8794:8798   */\n      0x1f\n        /* \"#utility.yul\":8786:8792   */\n      dup4\n        /* \"#utility.yul\":8782:8799   */\n      add\n        /* \"#utility.yul\":8778:8805   */\n      slt\n        /* \"#utility.yul\":8768:8890   */\n      tag_442\n      jumpi\n        /* \"#utility.yul\":8809:8888   */\n      tag_443\n      tag_305\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":8768:8890   */\n    tag_442:\n        /* \"#utility.yul\":8926:8932   */\n      dup2\n        /* \"#utility.yul\":8913:8933   */\n      calldataload\n        /* \"#utility.yul\":8951:9029   */\n      tag_444\n        /* \"#utility.yul\":9025:9028   */\n      dup5\n        /* \"#utility.yul\":9017:9023   */\n      dup3\n        /* \"#utility.yul\":9010:9014   */\n      0x20\n        /* \"#utility.yul\":9002:9008   */\n      dup7\n        /* \"#utility.yul\":8998:9015   */\n      add\n        /* \"#utility.yul\":8951:9029   */\n      tag_315\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":8942:9029   */\n      swap2\n      pop\n        /* \"#utility.yul\":8758:9035   */\n      pop\n        /* \"#utility.yul\":8697:9035   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9041:10550   */\n    tag_48:\n        /* \"#utility.yul\":9195:9201   */\n      0x00\n        /* \"#utility.yul\":9203:9209   */\n      dup1\n        /* \"#utility.yul\":9211:9217   */\n      0x00\n        /* \"#utility.yul\":9219:9225   */\n      dup1\n        /* \"#utility.yul\":9227:9233   */\n      0x00\n        /* \"#utility.yul\":9276:9279   */\n      0xa0\n        /* \"#utility.yul\":9264:9273   */\n      dup7\n        /* \"#utility.yul\":9255:9262   */\n      dup9\n        /* \"#utility.yul\":9251:9274   */\n      sub\n        /* \"#utility.yul\":9247:9280   */\n      slt\n        /* \"#utility.yul\":9244:9364   */\n      iszero\n      tag_446\n      jumpi\n        /* \"#utility.yul\":9283:9362   */\n      tag_447\n      tag_285\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":9244:9364   */\n    tag_446:\n        /* \"#utility.yul\":9403:9404   */\n      0x00\n        /* \"#utility.yul\":9428:9481   */\n      tag_448\n        /* \"#utility.yul\":9473:9480   */\n      dup9\n        /* \"#utility.yul\":9464:9470   */\n      dup3\n        /* \"#utility.yul\":9453:9462   */\n      dup10\n        /* \"#utility.yul\":9449:9471   */\n      add\n        /* \"#utility.yul\":9428:9481   */\n      tag_290\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":9418:9481   */\n      swap6\n      pop\n        /* \"#utility.yul\":9374:9491   */\n      pop\n        /* \"#utility.yul\":9530:9532   */\n      0x20\n        /* \"#utility.yul\":9556:9609   */\n      tag_449\n        /* \"#utility.yul\":9601:9608   */\n      dup9\n        /* \"#utility.yul\":9592:9598   */\n      dup3\n        /* \"#utility.yul\":9581:9590   */\n      dup10\n        /* \"#utility.yul\":9577:9599   */\n      add\n        /* \"#utility.yul\":9556:9609   */\n      tag_290\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":9546:9609   */\n      swap5\n      pop\n        /* \"#utility.yul\":9501:9619   */\n      pop\n        /* \"#utility.yul\":9686:9688   */\n      0x40\n        /* \"#utility.yul\":9675:9684   */\n      dup7\n        /* \"#utility.yul\":9671:9689   */\n      add\n        /* \"#utility.yul\":9658:9690   */\n      calldataload\n        /* \"#utility.yul\":9717:9735   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9709:9715   */\n      dup2\n        /* \"#utility.yul\":9706:9736   */\n      gt\n        /* \"#utility.yul\":9703:9820   */\n      iszero\n      tag_450\n      jumpi\n        /* \"#utility.yul\":9739:9818   */\n      tag_451\n      tag_286\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":9703:9820   */\n    tag_450:\n        /* \"#utility.yul\":9844:9922   */\n      tag_452\n        /* \"#utility.yul\":9914:9921   */\n      dup9\n        /* \"#utility.yul\":9905:9911   */\n      dup3\n        /* \"#utility.yul\":9894:9903   */\n      dup10\n        /* \"#utility.yul\":9890:9912   */\n      add\n        /* \"#utility.yul\":9844:9922   */\n      tag_311\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":9834:9922   */\n      swap4\n      pop\n        /* \"#utility.yul\":9629:9932   */\n      pop\n        /* \"#utility.yul\":9999:10001   */\n      0x60\n        /* \"#utility.yul\":9988:9997   */\n      dup7\n        /* \"#utility.yul\":9984:10002   */\n      add\n        /* \"#utility.yul\":9971:10003   */\n      calldataload\n        /* \"#utility.yul\":10030:10048   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10022:10028   */\n      dup2\n        /* \"#utility.yul\":10019:10049   */\n      gt\n        /* \"#utility.yul\":10016:10133   */\n      iszero\n      tag_453\n      jumpi\n        /* \"#utility.yul\":10052:10131   */\n      tag_454\n      tag_286\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":10016:10133   */\n    tag_453:\n        /* \"#utility.yul\":10157:10235   */\n      tag_455\n        /* \"#utility.yul\":10227:10234   */\n      dup9\n        /* \"#utility.yul\":10218:10224   */\n      dup3\n        /* \"#utility.yul\":10207:10216   */\n      dup10\n        /* \"#utility.yul\":10203:10225   */\n      add\n        /* \"#utility.yul\":10157:10235   */\n      tag_311\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":10147:10235   */\n      swap3\n      pop\n        /* \"#utility.yul\":9942:10245   */\n      pop\n        /* \"#utility.yul\":10312:10315   */\n      0x80\n        /* \"#utility.yul\":10301:10310   */\n      dup7\n        /* \"#utility.yul\":10297:10316   */\n      add\n        /* \"#utility.yul\":10284:10317   */\n      calldataload\n        /* \"#utility.yul\":10344:10362   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10336:10342   */\n      dup2\n        /* \"#utility.yul\":10333:10363   */\n      gt\n        /* \"#utility.yul\":10330:10447   */\n      iszero\n      tag_456\n      jumpi\n        /* \"#utility.yul\":10366:10445   */\n      tag_457\n      tag_286\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":10330:10447   */\n    tag_456:\n        /* \"#utility.yul\":10471:10533   */\n      tag_458\n        /* \"#utility.yul\":10525:10532   */\n      dup9\n        /* \"#utility.yul\":10516:10522   */\n      dup3\n        /* \"#utility.yul\":10505:10514   */\n      dup10\n        /* \"#utility.yul\":10501:10523   */\n      add\n        /* \"#utility.yul\":10471:10533   */\n      tag_316\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":10461:10533   */\n      swap2\n      pop\n        /* \"#utility.yul\":10255:10543   */\n      pop\n        /* \"#utility.yul\":9041:10550   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10556:10867   */\n    tag_317:\n        /* \"#utility.yul\":10633:10637   */\n      0x00\n        /* \"#utility.yul\":10723:10741   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10715:10721   */\n      dup3\n        /* \"#utility.yul\":10712:10742   */\n      gt\n        /* \"#utility.yul\":10709:10765   */\n      iszero\n      tag_460\n      jumpi\n        /* \"#utility.yul\":10745:10763   */\n      tag_461\n      tag_119\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":10709:10765   */\n    tag_460:\n        /* \"#utility.yul\":10795:10799   */\n      0x20\n        /* \"#utility.yul\":10787:10793   */\n      dup3\n        /* \"#utility.yul\":10783:10800   */\n      mul\n        /* \"#utility.yul\":10775:10800   */\n      swap1\n      pop\n        /* \"#utility.yul\":10855:10859   */\n      0x20\n        /* \"#utility.yul\":10849:10853   */\n      dup2\n        /* \"#utility.yul\":10845:10860   */\n      add\n        /* \"#utility.yul\":10837:10860   */\n      swap1\n      pop\n        /* \"#utility.yul\":10556:10867   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10890:11600   */\n    tag_318:\n        /* \"#utility.yul\":10986:10991   */\n      0x00\n        /* \"#utility.yul\":11011:11092   */\n      tag_463\n        /* \"#utility.yul\":11027:11091   */\n      tag_464\n        /* \"#utility.yul\":11084:11090   */\n      dup5\n        /* \"#utility.yul\":11027:11091   */\n      tag_317\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":11011:11092   */\n      tag_307\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":11002:11092   */\n      swap1\n      pop\n        /* \"#utility.yul\":11112:11117   */\n      dup1\n        /* \"#utility.yul\":11141:11147   */\n      dup4\n        /* \"#utility.yul\":11134:11139   */\n      dup3\n        /* \"#utility.yul\":11127:11148   */\n      mstore\n        /* \"#utility.yul\":11175:11179   */\n      0x20\n        /* \"#utility.yul\":11168:11173   */\n      dup3\n        /* \"#utility.yul\":11164:11180   */\n      add\n        /* \"#utility.yul\":11157:11180   */\n      swap1\n      pop\n        /* \"#utility.yul\":11228:11232   */\n      0x20\n        /* \"#utility.yul\":11220:11226   */\n      dup5\n        /* \"#utility.yul\":11216:11233   */\n      mul\n        /* \"#utility.yul\":11208:11214   */\n      dup4\n        /* \"#utility.yul\":11204:11234   */\n      add\n        /* \"#utility.yul\":11257:11260   */\n      dup6\n        /* \"#utility.yul\":11249:11255   */\n      dup2\n        /* \"#utility.yul\":11246:11261   */\n      gt\n        /* \"#utility.yul\":11243:11365   */\n      iszero\n      tag_465\n      jumpi\n        /* \"#utility.yul\":11276:11355   */\n      tag_466\n      tag_309\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":11243:11365   */\n    tag_465:\n        /* \"#utility.yul\":11391:11397   */\n      dup4\n        /* \"#utility.yul\":11374:11594   */\n    tag_467:\n        /* \"#utility.yul\":11408:11414   */\n      dup2\n        /* \"#utility.yul\":11403:11406   */\n      dup2\n        /* \"#utility.yul\":11400:11415   */\n      lt\n        /* \"#utility.yul\":11374:11594   */\n      iszero\n      tag_469\n      jumpi\n        /* \"#utility.yul\":11483:11486   */\n      dup1\n        /* \"#utility.yul\":11512:11549   */\n      tag_470\n        /* \"#utility.yul\":11545:11548   */\n      dup9\n        /* \"#utility.yul\":11533:11543   */\n      dup3\n        /* \"#utility.yul\":11512:11549   */\n      tag_290\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":11507:11510   */\n      dup5\n        /* \"#utility.yul\":11500:11550   */\n      mstore\n        /* \"#utility.yul\":11579:11583   */\n      0x20\n        /* \"#utility.yul\":11574:11577   */\n      dup5\n        /* \"#utility.yul\":11570:11584   */\n      add\n        /* \"#utility.yul\":11563:11584   */\n      swap4\n      pop\n        /* \"#utility.yul\":11450:11594   */\n      pop\n        /* \"#utility.yul\":11434:11438   */\n      0x20\n        /* \"#utility.yul\":11429:11432   */\n      dup2\n        /* \"#utility.yul\":11425:11439   */\n      add\n        /* \"#utility.yul\":11418:11439   */\n      swap1\n      pop\n        /* \"#utility.yul\":11374:11594   */\n      jump(tag_467)\n    tag_469:\n        /* \"#utility.yul\":11378:11399   */\n      pop\n        /* \"#utility.yul\":10992:11600   */\n      pop\n      pop\n        /* \"#utility.yul\":10890:11600   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11623:11993   */\n    tag_319:\n        /* \"#utility.yul\":11694:11699   */\n      0x00\n        /* \"#utility.yul\":11743:11746   */\n      dup3\n        /* \"#utility.yul\":11736:11740   */\n      0x1f\n        /* \"#utility.yul\":11728:11734   */\n      dup4\n        /* \"#utility.yul\":11724:11741   */\n      add\n        /* \"#utility.yul\":11720:11747   */\n      slt\n        /* \"#utility.yul\":11710:11832   */\n      tag_472\n      jumpi\n        /* \"#utility.yul\":11751:11830   */\n      tag_473\n      tag_305\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":11710:11832   */\n    tag_472:\n        /* \"#utility.yul\":11868:11874   */\n      dup2\n        /* \"#utility.yul\":11855:11875   */\n      calldataload\n        /* \"#utility.yul\":11893:11987   */\n      tag_474\n        /* \"#utility.yul\":11983:11986   */\n      dup5\n        /* \"#utility.yul\":11975:11981   */\n      dup3\n        /* \"#utility.yul\":11968:11972   */\n      0x20\n        /* \"#utility.yul\":11960:11966   */\n      dup7\n        /* \"#utility.yul\":11956:11973   */\n      add\n        /* \"#utility.yul\":11893:11987   */\n      tag_318\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":11884:11987   */\n      swap2\n      pop\n        /* \"#utility.yul\":11700:11993   */\n      pop\n        /* \"#utility.yul\":11623:11993   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11999:12893   */\n    tag_52:\n        /* \"#utility.yul\":12117:12123   */\n      0x00\n        /* \"#utility.yul\":12125:12131   */\n      dup1\n        /* \"#utility.yul\":12174:12176   */\n      0x40\n        /* \"#utility.yul\":12162:12171   */\n      dup4\n        /* \"#utility.yul\":12153:12160   */\n      dup6\n        /* \"#utility.yul\":12149:12172   */\n      sub\n        /* \"#utility.yul\":12145:12177   */\n      slt\n        /* \"#utility.yul\":12142:12261   */\n      iszero\n      tag_476\n      jumpi\n        /* \"#utility.yul\":12180:12259   */\n      tag_477\n      tag_285\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":12142:12261   */\n    tag_476:\n        /* \"#utility.yul\":12328:12329   */\n      0x00\n        /* \"#utility.yul\":12317:12326   */\n      dup4\n        /* \"#utility.yul\":12313:12330   */\n      add\n        /* \"#utility.yul\":12300:12331   */\n      calldataload\n        /* \"#utility.yul\":12358:12376   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12350:12356   */\n      dup2\n        /* \"#utility.yul\":12347:12377   */\n      gt\n        /* \"#utility.yul\":12344:12461   */\n      iszero\n      tag_478\n      jumpi\n        /* \"#utility.yul\":12380:12459   */\n      tag_479\n      tag_286\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":12344:12461   */\n    tag_478:\n        /* \"#utility.yul\":12485:12563   */\n      tag_480\n        /* \"#utility.yul\":12555:12562   */\n      dup6\n        /* \"#utility.yul\":12546:12552   */\n      dup3\n        /* \"#utility.yul\":12535:12544   */\n      dup7\n        /* \"#utility.yul\":12531:12553   */\n      add\n        /* \"#utility.yul\":12485:12563   */\n      tag_319\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":12475:12563   */\n      swap3\n      pop\n        /* \"#utility.yul\":12271:12573   */\n      pop\n        /* \"#utility.yul\":12640:12642   */\n      0x20\n        /* \"#utility.yul\":12629:12638   */\n      dup4\n        /* \"#utility.yul\":12625:12643   */\n      add\n        /* \"#utility.yul\":12612:12644   */\n      calldataload\n        /* \"#utility.yul\":12671:12689   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12663:12669   */\n      dup2\n        /* \"#utility.yul\":12660:12690   */\n      gt\n        /* \"#utility.yul\":12657:12774   */\n      iszero\n      tag_481\n      jumpi\n        /* \"#utility.yul\":12693:12772   */\n      tag_482\n      tag_286\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":12657:12774   */\n    tag_481:\n        /* \"#utility.yul\":12798:12876   */\n      tag_483\n        /* \"#utility.yul\":12868:12875   */\n      dup6\n        /* \"#utility.yul\":12859:12865   */\n      dup3\n        /* \"#utility.yul\":12848:12857   */\n      dup7\n        /* \"#utility.yul\":12844:12866   */\n      add\n        /* \"#utility.yul\":12798:12876   */\n      tag_311\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":12788:12876   */\n      swap2\n      pop\n        /* \"#utility.yul\":12583:12886   */\n      pop\n        /* \"#utility.yul\":11999:12893   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12899:13013   */\n    tag_320:\n        /* \"#utility.yul\":12966:12972   */\n      0x00\n        /* \"#utility.yul\":13000:13005   */\n      dup2\n        /* \"#utility.yul\":12994:13006   */\n      mload\n        /* \"#utility.yul\":12984:13006   */\n      swap1\n      pop\n        /* \"#utility.yul\":12899:13013   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13019:13203   */\n    tag_321:\n        /* \"#utility.yul\":13118:13129   */\n      0x00\n        /* \"#utility.yul\":13152:13158   */\n      dup3\n        /* \"#utility.yul\":13147:13150   */\n      dup3\n        /* \"#utility.yul\":13140:13159   */\n      mstore\n        /* \"#utility.yul\":13192:13196   */\n      0x20\n        /* \"#utility.yul\":13187:13190   */\n      dup3\n        /* \"#utility.yul\":13183:13197   */\n      add\n        /* \"#utility.yul\":13168:13197   */\n      swap1\n      pop\n        /* \"#utility.yul\":13019:13203   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13209:13341   */\n    tag_322:\n        /* \"#utility.yul\":13276:13280   */\n      0x00\n        /* \"#utility.yul\":13299:13302   */\n      dup2\n        /* \"#utility.yul\":13291:13302   */\n      swap1\n      pop\n        /* \"#utility.yul\":13329:13333   */\n      0x20\n        /* \"#utility.yul\":13324:13327   */\n      dup3\n        /* \"#utility.yul\":13320:13334   */\n      add\n        /* \"#utility.yul\":13312:13334   */\n      swap1\n      pop\n        /* \"#utility.yul\":13209:13341   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13347:13455   */\n    tag_323:\n        /* \"#utility.yul\":13424:13448   */\n      tag_488\n        /* \"#utility.yul\":13442:13447   */\n      dup2\n        /* \"#utility.yul\":13424:13448   */\n      tag_291\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":13419:13422   */\n      dup3\n        /* \"#utility.yul\":13412:13449   */\n      mstore\n        /* \"#utility.yul\":13347:13455   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13461:13640   */\n    tag_324:\n        /* \"#utility.yul\":13530:13540   */\n      0x00\n        /* \"#utility.yul\":13551:13597   */\n      tag_490\n        /* \"#utility.yul\":13593:13596   */\n      dup4\n        /* \"#utility.yul\":13585:13591   */\n      dup4\n        /* \"#utility.yul\":13551:13597   */\n      tag_323\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":13629:13633   */\n      0x20\n        /* \"#utility.yul\":13624:13627   */\n      dup4\n        /* \"#utility.yul\":13620:13634   */\n      add\n        /* \"#utility.yul\":13606:13634   */\n      swap1\n      pop\n        /* \"#utility.yul\":13461:13640   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13646:13759   */\n    tag_325:\n        /* \"#utility.yul\":13716:13720   */\n      0x00\n        /* \"#utility.yul\":13748:13752   */\n      0x20\n        /* \"#utility.yul\":13743:13746   */\n      dup3\n        /* \"#utility.yul\":13739:13753   */\n      add\n        /* \"#utility.yul\":13731:13753   */\n      swap1\n      pop\n        /* \"#utility.yul\":13646:13759   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13795:14527   */\n    tag_326:\n        /* \"#utility.yul\":13914:13917   */\n      0x00\n        /* \"#utility.yul\":13943:13997   */\n      tag_493\n        /* \"#utility.yul\":13991:13996   */\n      dup3\n        /* \"#utility.yul\":13943:13997   */\n      tag_320\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":14013:14099   */\n      tag_494\n        /* \"#utility.yul\":14092:14098   */\n      dup2\n        /* \"#utility.yul\":14087:14090   */\n      dup6\n        /* \"#utility.yul\":14013:14099   */\n      tag_321\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":14006:14099   */\n      swap4\n      pop\n        /* \"#utility.yul\":14123:14179   */\n      tag_495\n        /* \"#utility.yul\":14173:14178   */\n      dup4\n        /* \"#utility.yul\":14123:14179   */\n      tag_322\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":14202:14209   */\n      dup1\n        /* \"#utility.yul\":14233:14234   */\n      0x00\n        /* \"#utility.yul\":14218:14502   */\n    tag_496:\n        /* \"#utility.yul\":14243:14249   */\n      dup4\n        /* \"#utility.yul\":14240:14241   */\n      dup2\n        /* \"#utility.yul\":14237:14250   */\n      lt\n        /* \"#utility.yul\":14218:14502   */\n      iszero\n      tag_498\n      jumpi\n        /* \"#utility.yul\":14319:14325   */\n      dup2\n        /* \"#utility.yul\":14313:14326   */\n      mload\n        /* \"#utility.yul\":14346:14409   */\n      tag_499\n        /* \"#utility.yul\":14405:14408   */\n      dup9\n        /* \"#utility.yul\":14390:14403   */\n      dup3\n        /* \"#utility.yul\":14346:14409   */\n      tag_324\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":14339:14409   */\n      swap8\n      pop\n        /* \"#utility.yul\":14432:14492   */\n      tag_500\n        /* \"#utility.yul\":14485:14491   */\n      dup4\n        /* \"#utility.yul\":14432:14492   */\n      tag_325\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":14422:14492   */\n      swap3\n      pop\n        /* \"#utility.yul\":14278:14502   */\n      pop\n        /* \"#utility.yul\":14265:14266   */\n      0x01\n        /* \"#utility.yul\":14262:14263   */\n      dup2\n        /* \"#utility.yul\":14258:14267   */\n      add\n        /* \"#utility.yul\":14253:14267   */\n      swap1\n      pop\n        /* \"#utility.yul\":14218:14502   */\n      jump(tag_496)\n    tag_498:\n        /* \"#utility.yul\":14222:14236   */\n      pop\n        /* \"#utility.yul\":14518:14521   */\n      dup6\n        /* \"#utility.yul\":14511:14521   */\n      swap4\n      pop\n        /* \"#utility.yul\":13919:14527   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":13795:14527   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14533:14906   */\n    tag_55:\n        /* \"#utility.yul\":14676:14680   */\n      0x00\n        /* \"#utility.yul\":14714:14716   */\n      0x20\n        /* \"#utility.yul\":14703:14712   */\n      dup3\n        /* \"#utility.yul\":14699:14717   */\n      add\n        /* \"#utility.yul\":14691:14717   */\n      swap1\n      pop\n        /* \"#utility.yul\":14763:14772   */\n      dup2\n        /* \"#utility.yul\":14757:14761   */\n      dup2\n        /* \"#utility.yul\":14753:14773   */\n      sub\n        /* \"#utility.yul\":14749:14750   */\n      0x00\n        /* \"#utility.yul\":14738:14747   */\n      dup4\n        /* \"#utility.yul\":14734:14751   */\n      add\n        /* \"#utility.yul\":14727:14774   */\n      mstore\n        /* \"#utility.yul\":14791:14899   */\n      tag_502\n        /* \"#utility.yul\":14894:14898   */\n      dup2\n        /* \"#utility.yul\":14885:14891   */\n      dup5\n        /* \"#utility.yul\":14791:14899   */\n      tag_326\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":14783:14899   */\n      swap1\n      pop\n        /* \"#utility.yul\":14533:14906   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14912:15030   */\n    tag_327:\n        /* \"#utility.yul\":14999:15023   */\n      tag_504\n        /* \"#utility.yul\":15017:15022   */\n      dup2\n        /* \"#utility.yul\":14999:15023   */\n      tag_288\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":14994:14997   */\n      dup3\n        /* \"#utility.yul\":14987:15024   */\n      mstore\n        /* \"#utility.yul\":14912:15030   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15036:15258   */\n    tag_64:\n        /* \"#utility.yul\":15129:15133   */\n      0x00\n        /* \"#utility.yul\":15167:15169   */\n      0x20\n        /* \"#utility.yul\":15156:15165   */\n      dup3\n        /* \"#utility.yul\":15152:15170   */\n      add\n        /* \"#utility.yul\":15144:15170   */\n      swap1\n      pop\n        /* \"#utility.yul\":15180:15251   */\n      tag_506\n        /* \"#utility.yul\":15248:15249   */\n      0x00\n        /* \"#utility.yul\":15237:15246   */\n      dup4\n        /* \"#utility.yul\":15233:15250   */\n      add\n        /* \"#utility.yul\":15224:15230   */\n      dup5\n        /* \"#utility.yul\":15180:15251   */\n      tag_327\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":15036:15258   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15264:15380   */\n    tag_328:\n        /* \"#utility.yul\":15334:15355   */\n      tag_508\n        /* \"#utility.yul\":15349:15354   */\n      dup2\n        /* \"#utility.yul\":15334:15355   */\n      tag_298\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":15327:15332   */\n      dup2\n        /* \"#utility.yul\":15324:15356   */\n      eq\n        /* \"#utility.yul\":15314:15374   */\n      tag_509\n      jumpi\n        /* \"#utility.yul\":15370:15371   */\n      0x00\n        /* \"#utility.yul\":15367:15368   */\n      dup1\n        /* \"#utility.yul\":15360:15372   */\n      revert\n        /* \"#utility.yul\":15314:15374   */\n    tag_509:\n        /* \"#utility.yul\":15264:15380   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15386:15519   */\n    tag_329:\n        /* \"#utility.yul\":15429:15434   */\n      0x00\n        /* \"#utility.yul\":15467:15473   */\n      dup2\n        /* \"#utility.yul\":15454:15474   */\n      calldataload\n        /* \"#utility.yul\":15445:15474   */\n      swap1\n      pop\n        /* \"#utility.yul\":15483:15513   */\n      tag_511\n        /* \"#utility.yul\":15507:15512   */\n      dup2\n        /* \"#utility.yul\":15483:15513   */\n      tag_328\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":15386:15519   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15525:15993   */\n    tag_67:\n        /* \"#utility.yul\":15590:15596   */\n      0x00\n        /* \"#utility.yul\":15598:15604   */\n      dup1\n        /* \"#utility.yul\":15647:15649   */\n      0x40\n        /* \"#utility.yul\":15635:15644   */\n      dup4\n        /* \"#utility.yul\":15626:15633   */\n      dup6\n        /* \"#utility.yul\":15622:15645   */\n      sub\n        /* \"#utility.yul\":15618:15650   */\n      slt\n        /* \"#utility.yul\":15615:15734   */\n      iszero\n      tag_513\n      jumpi\n        /* \"#utility.yul\":15653:15732   */\n      tag_514\n      tag_285\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":15615:15734   */\n    tag_513:\n        /* \"#utility.yul\":15773:15774   */\n      0x00\n        /* \"#utility.yul\":15798:15851   */\n      tag_515\n        /* \"#utility.yul\":15843:15850   */\n      dup6\n        /* \"#utility.yul\":15834:15840   */\n      dup3\n        /* \"#utility.yul\":15823:15832   */\n      dup7\n        /* \"#utility.yul\":15819:15841   */\n      add\n        /* \"#utility.yul\":15798:15851   */\n      tag_290\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":15788:15851   */\n      swap3\n      pop\n        /* \"#utility.yul\":15744:15861   */\n      pop\n        /* \"#utility.yul\":15900:15902   */\n      0x20\n        /* \"#utility.yul\":15926:15976   */\n      tag_516\n        /* \"#utility.yul\":15968:15975   */\n      dup6\n        /* \"#utility.yul\":15959:15965   */\n      dup3\n        /* \"#utility.yul\":15948:15957   */\n      dup7\n        /* \"#utility.yul\":15944:15966   */\n      add\n        /* \"#utility.yul\":15926:15976   */\n      tag_329\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":15916:15976   */\n      swap2\n      pop\n        /* \"#utility.yul\":15871:15986   */\n      pop\n        /* \"#utility.yul\":15525:15993   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15999:16473   */\n    tag_71:\n        /* \"#utility.yul\":16067:16073   */\n      0x00\n        /* \"#utility.yul\":16075:16081   */\n      dup1\n        /* \"#utility.yul\":16124:16126   */\n      0x40\n        /* \"#utility.yul\":16112:16121   */\n      dup4\n        /* \"#utility.yul\":16103:16110   */\n      dup6\n        /* \"#utility.yul\":16099:16122   */\n      sub\n        /* \"#utility.yul\":16095:16127   */\n      slt\n        /* \"#utility.yul\":16092:16211   */\n      iszero\n      tag_518\n      jumpi\n        /* \"#utility.yul\":16130:16209   */\n      tag_519\n      tag_285\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":16092:16211   */\n    tag_518:\n        /* \"#utility.yul\":16250:16251   */\n      0x00\n        /* \"#utility.yul\":16275:16328   */\n      tag_520\n        /* \"#utility.yul\":16320:16327   */\n      dup6\n        /* \"#utility.yul\":16311:16317   */\n      dup3\n        /* \"#utility.yul\":16300:16309   */\n      dup7\n        /* \"#utility.yul\":16296:16318   */\n      add\n        /* \"#utility.yul\":16275:16328   */\n      tag_290\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":16265:16328   */\n      swap3\n      pop\n        /* \"#utility.yul\":16221:16338   */\n      pop\n        /* \"#utility.yul\":16377:16379   */\n      0x20\n        /* \"#utility.yul\":16403:16456   */\n      tag_521\n        /* \"#utility.yul\":16448:16455   */\n      dup6\n        /* \"#utility.yul\":16439:16445   */\n      dup3\n        /* \"#utility.yul\":16428:16437   */\n      dup7\n        /* \"#utility.yul\":16424:16446   */\n      add\n        /* \"#utility.yul\":16403:16456   */\n      tag_290\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":16393:16456   */\n      swap2\n      pop\n        /* \"#utility.yul\":16348:16466   */\n      pop\n        /* \"#utility.yul\":15999:16473   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16479:17568   */\n    tag_76:\n        /* \"#utility.yul\":16583:16589   */\n      0x00\n        /* \"#utility.yul\":16591:16597   */\n      dup1\n        /* \"#utility.yul\":16599:16605   */\n      0x00\n        /* \"#utility.yul\":16607:16613   */\n      dup1\n        /* \"#utility.yul\":16615:16621   */\n      0x00\n        /* \"#utility.yul\":16664:16667   */\n      0xa0\n        /* \"#utility.yul\":16652:16661   */\n      dup7\n        /* \"#utility.yul\":16643:16650   */\n      dup9\n        /* \"#utility.yul\":16639:16662   */\n      sub\n        /* \"#utility.yul\":16635:16668   */\n      slt\n        /* \"#utility.yul\":16632:16752   */\n      iszero\n      tag_523\n      jumpi\n        /* \"#utility.yul\":16671:16750   */\n      tag_524\n      tag_285\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":16632:16752   */\n    tag_523:\n        /* \"#utility.yul\":16791:16792   */\n      0x00\n        /* \"#utility.yul\":16816:16869   */\n      tag_525\n        /* \"#utility.yul\":16861:16868   */\n      dup9\n        /* \"#utility.yul\":16852:16858   */\n      dup3\n        /* \"#utility.yul\":16841:16850   */\n      dup10\n        /* \"#utility.yul\":16837:16859   */\n      add\n        /* \"#utility.yul\":16816:16869   */\n      tag_290\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":16806:16869   */\n      swap6\n      pop\n        /* \"#utility.yul\":16762:16879   */\n      pop\n        /* \"#utility.yul\":16918:16920   */\n      0x20\n        /* \"#utility.yul\":16944:16997   */\n      tag_526\n        /* \"#utility.yul\":16989:16996   */\n      dup9\n        /* \"#utility.yul\":16980:16986   */\n      dup3\n        /* \"#utility.yul\":16969:16978   */\n      dup10\n        /* \"#utility.yul\":16965:16987   */\n      add\n        /* \"#utility.yul\":16944:16997   */\n      tag_290\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":16934:16997   */\n      swap5\n      pop\n        /* \"#utility.yul\":16889:17007   */\n      pop\n        /* \"#utility.yul\":17046:17048   */\n      0x40\n        /* \"#utility.yul\":17072:17125   */\n      tag_527\n        /* \"#utility.yul\":17117:17124   */\n      dup9\n        /* \"#utility.yul\":17108:17114   */\n      dup3\n        /* \"#utility.yul\":17097:17106   */\n      dup10\n        /* \"#utility.yul\":17093:17115   */\n      add\n        /* \"#utility.yul\":17072:17125   */\n      tag_293\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":17062:17125   */\n      swap4\n      pop\n        /* \"#utility.yul\":17017:17135   */\n      pop\n        /* \"#utility.yul\":17174:17176   */\n      0x60\n        /* \"#utility.yul\":17200:17253   */\n      tag_528\n        /* \"#utility.yul\":17245:17252   */\n      dup9\n        /* \"#utility.yul\":17236:17242   */\n      dup3\n        /* \"#utility.yul\":17225:17234   */\n      dup10\n        /* \"#utility.yul\":17221:17243   */\n      add\n        /* \"#utility.yul\":17200:17253   */\n      tag_293\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":17190:17253   */\n      swap3\n      pop\n        /* \"#utility.yul\":17145:17263   */\n      pop\n        /* \"#utility.yul\":17330:17333   */\n      0x80\n        /* \"#utility.yul\":17319:17328   */\n      dup7\n        /* \"#utility.yul\":17315:17334   */\n      add\n        /* \"#utility.yul\":17302:17335   */\n      calldataload\n        /* \"#utility.yul\":17362:17380   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":17354:17360   */\n      dup2\n        /* \"#utility.yul\":17351:17381   */\n      gt\n        /* \"#utility.yul\":17348:17465   */\n      iszero\n      tag_529\n      jumpi\n        /* \"#utility.yul\":17384:17463   */\n      tag_530\n      tag_286\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":17348:17465   */\n    tag_529:\n        /* \"#utility.yul\":17489:17551   */\n      tag_531\n        /* \"#utility.yul\":17543:17550   */\n      dup9\n        /* \"#utility.yul\":17534:17540   */\n      dup3\n        /* \"#utility.yul\":17523:17532   */\n      dup10\n        /* \"#utility.yul\":17519:17541   */\n      add\n        /* \"#utility.yul\":17489:17551   */\n      tag_316\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":17479:17551   */\n      swap2\n      pop\n        /* \"#utility.yul\":17273:17561   */\n      pop\n        /* \"#utility.yul\":16479:17568   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17574:17903   */\n    tag_80:\n        /* \"#utility.yul\":17633:17639   */\n      0x00\n        /* \"#utility.yul\":17682:17684   */\n      0x20\n        /* \"#utility.yul\":17670:17679   */\n      dup3\n        /* \"#utility.yul\":17661:17668   */\n      dup5\n        /* \"#utility.yul\":17657:17680   */\n      sub\n        /* \"#utility.yul\":17653:17685   */\n      slt\n        /* \"#utility.yul\":17650:17769   */\n      iszero\n      tag_533\n      jumpi\n        /* \"#utility.yul\":17688:17767   */\n      tag_534\n      tag_285\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":17650:17769   */\n    tag_533:\n        /* \"#utility.yul\":17808:17809   */\n      0x00\n        /* \"#utility.yul\":17833:17886   */\n      tag_535\n        /* \"#utility.yul\":17878:17885   */\n      dup5\n        /* \"#utility.yul\":17869:17875   */\n      dup3\n        /* \"#utility.yul\":17858:17867   */\n      dup6\n        /* \"#utility.yul\":17854:17876   */\n      add\n        /* \"#utility.yul\":17833:17886   */\n      tag_290\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":17823:17886   */\n      swap2\n      pop\n        /* \"#utility.yul\":17779:17896   */\n      pop\n        /* \"#utility.yul\":17574:17903   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17909:18089   */\n    tag_330:\n        /* \"#utility.yul\":17957:18034   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17954:17955   */\n      0x00\n        /* \"#utility.yul\":17947:18035   */\n      mstore\n        /* \"#utility.yul\":18054:18058   */\n      0x22\n        /* \"#utility.yul\":18051:18052   */\n      0x04\n        /* \"#utility.yul\":18044:18059   */\n      mstore\n        /* \"#utility.yul\":18078:18082   */\n      0x24\n        /* \"#utility.yul\":18075:18076   */\n      0x00\n        /* \"#utility.yul\":18068:18083   */\n      revert\n        /* \"#utility.yul\":18095:18415   */\n    tag_90:\n        /* \"#utility.yul\":18139:18145   */\n      0x00\n        /* \"#utility.yul\":18176:18177   */\n      0x02\n        /* \"#utility.yul\":18170:18174   */\n      dup3\n        /* \"#utility.yul\":18166:18178   */\n      div\n        /* \"#utility.yul\":18156:18178   */\n      swap1\n      pop\n        /* \"#utility.yul\":18223:18224   */\n      0x01\n        /* \"#utility.yul\":18217:18221   */\n      dup3\n        /* \"#utility.yul\":18213:18225   */\n      and\n        /* \"#utility.yul\":18244:18262   */\n      dup1\n        /* \"#utility.yul\":18234:18315   */\n      tag_538\n      jumpi\n        /* \"#utility.yul\":18300:18304   */\n      0x7f\n        /* \"#utility.yul\":18292:18298   */\n      dup3\n        /* \"#utility.yul\":18288:18305   */\n      and\n        /* \"#utility.yul\":18278:18305   */\n      swap2\n      pop\n        /* \"#utility.yul\":18234:18315   */\n    tag_538:\n        /* \"#utility.yul\":18362:18364   */\n      0x20\n        /* \"#utility.yul\":18354:18360   */\n      dup3\n        /* \"#utility.yul\":18351:18365   */\n      lt\n        /* \"#utility.yul\":18331:18349   */\n      dup2\n        /* \"#utility.yul\":18328:18366   */\n      sub\n        /* \"#utility.yul\":18325:18409   */\n      tag_539\n      jumpi\n        /* \"#utility.yul\":18381:18399   */\n      tag_540\n      tag_330\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":18325:18409   */\n    tag_539:\n        /* \"#utility.yul\":18146:18415   */\n      pop\n        /* \"#utility.yul\":18095:18415   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18421:18601   */\n    tag_331:\n        /* \"#utility.yul\":18469:18546   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18466:18467   */\n      0x00\n        /* \"#utility.yul\":18459:18547   */\n      mstore\n        /* \"#utility.yul\":18566:18570   */\n      0x11\n        /* \"#utility.yul\":18563:18564   */\n      0x04\n        /* \"#utility.yul\":18556:18571   */\n      mstore\n        /* \"#utility.yul\":18590:18594   */\n      0x24\n        /* \"#utility.yul\":18587:18588   */\n      0x00\n        /* \"#utility.yul\":18580:18595   */\n      revert\n        /* \"#utility.yul\":18607:18798   */\n    tag_102:\n        /* \"#utility.yul\":18647:18650   */\n      0x00\n        /* \"#utility.yul\":18666:18686   */\n      tag_543\n        /* \"#utility.yul\":18684:18685   */\n      dup3\n        /* \"#utility.yul\":18666:18686   */\n      tag_291\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":18661:18686   */\n      swap2\n      pop\n        /* \"#utility.yul\":18700:18720   */\n      tag_544\n        /* \"#utility.yul\":18718:18719   */\n      dup4\n        /* \"#utility.yul\":18700:18720   */\n      tag_291\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":18695:18720   */\n      swap3\n      pop\n        /* \"#utility.yul\":18743:18744   */\n      dup3\n        /* \"#utility.yul\":18740:18741   */\n      dup3\n        /* \"#utility.yul\":18736:18745   */\n      add\n        /* \"#utility.yul\":18729:18745   */\n      swap1\n      pop\n        /* \"#utility.yul\":18764:18767   */\n      dup1\n        /* \"#utility.yul\":18761:18762   */\n      dup3\n        /* \"#utility.yul\":18758:18768   */\n      gt\n        /* \"#utility.yul\":18755:18791   */\n      iszero\n      tag_545\n      jumpi\n        /* \"#utility.yul\":18771:18789   */\n      tag_546\n      tag_331\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":18755:18791   */\n    tag_545:\n        /* \"#utility.yul\":18607:18798   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18804:19136   */\n    tag_110:\n        /* \"#utility.yul\":18925:18929   */\n      0x00\n        /* \"#utility.yul\":18963:18965   */\n      0x40\n        /* \"#utility.yul\":18952:18961   */\n      dup3\n        /* \"#utility.yul\":18948:18966   */\n      add\n        /* \"#utility.yul\":18940:18966   */\n      swap1\n      pop\n        /* \"#utility.yul\":18976:19047   */\n      tag_548\n        /* \"#utility.yul\":19044:19045   */\n      0x00\n        /* \"#utility.yul\":19033:19042   */\n      dup4\n        /* \"#utility.yul\":19029:19046   */\n      add\n        /* \"#utility.yul\":19020:19026   */\n      dup6\n        /* \"#utility.yul\":18976:19047   */\n      tag_327\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":19057:19129   */\n      tag_549\n        /* \"#utility.yul\":19125:19127   */\n      0x20\n        /* \"#utility.yul\":19114:19123   */\n      dup4\n        /* \"#utility.yul\":19110:19128   */\n      add\n        /* \"#utility.yul\":19101:19107   */\n      dup5\n        /* \"#utility.yul\":19057:19129   */\n      tag_327\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":18804:19136   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19142:19474   */\n    tag_116:\n        /* \"#utility.yul\":19263:19267   */\n      0x00\n        /* \"#utility.yul\":19301:19303   */\n      0x40\n        /* \"#utility.yul\":19290:19299   */\n      dup3\n        /* \"#utility.yul\":19286:19304   */\n      add\n        /* \"#utility.yul\":19278:19304   */\n      swap1\n      pop\n        /* \"#utility.yul\":19314:19385   */\n      tag_551\n        /* \"#utility.yul\":19382:19383   */\n      0x00\n        /* \"#utility.yul\":19371:19380   */\n      dup4\n        /* \"#utility.yul\":19367:19384   */\n      add\n        /* \"#utility.yul\":19358:19364   */\n      dup6\n        /* \"#utility.yul\":19314:19385   */\n      tag_294\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":19395:19467   */\n      tag_552\n        /* \"#utility.yul\":19463:19465   */\n      0x20\n        /* \"#utility.yul\":19452:19461   */\n      dup4\n        /* \"#utility.yul\":19448:19466   */\n      add\n        /* \"#utility.yul\":19439:19445   */\n      dup5\n        /* \"#utility.yul\":19395:19467   */\n      tag_294\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":19142:19474   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19480:19660   */\n    tag_131:\n        /* \"#utility.yul\":19528:19605   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19525:19526   */\n      0x00\n        /* \"#utility.yul\":19518:19606   */\n      mstore\n        /* \"#utility.yul\":19625:19629   */\n      0x32\n        /* \"#utility.yul\":19622:19623   */\n      0x04\n        /* \"#utility.yul\":19615:19630   */\n      mstore\n        /* \"#utility.yul\":19649:19653   */\n      0x24\n        /* \"#utility.yul\":19646:19647   */\n      0x00\n        /* \"#utility.yul\":19639:19654   */\n      revert\n        /* \"#utility.yul\":19666:19899   */\n    tag_133:\n        /* \"#utility.yul\":19705:19708   */\n      0x00\n        /* \"#utility.yul\":19728:19752   */\n      tag_555\n        /* \"#utility.yul\":19746:19751   */\n      dup3\n        /* \"#utility.yul\":19728:19752   */\n      tag_291\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":19719:19752   */\n      swap2\n      pop\n        /* \"#utility.yul\":19774:19840   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":19767:19772   */\n      dup3\n        /* \"#utility.yul\":19764:19841   */\n      sub\n        /* \"#utility.yul\":19761:19864   */\n      tag_556\n      jumpi\n        /* \"#utility.yul\":19844:19862   */\n      tag_557\n      tag_331\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":19761:19864   */\n    tag_556:\n        /* \"#utility.yul\":19891:19892   */\n      0x01\n        /* \"#utility.yul\":19884:19889   */\n      dup3\n        /* \"#utility.yul\":19880:19893   */\n      add\n        /* \"#utility.yul\":19873:19893   */\n      swap1\n      pop\n        /* \"#utility.yul\":19666:19899   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19905:20075   */\n    tag_332:\n        /* \"#utility.yul\":20045:20067   */\n      0x496e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":20041:20042   */\n      0x00\n        /* \"#utility.yul\":20033:20039   */\n      dup3\n        /* \"#utility.yul\":20029:20043   */\n      add\n        /* \"#utility.yul\":20022:20068   */\n      mstore\n        /* \"#utility.yul\":19905:20075   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20081:20447   */\n    tag_333:\n        /* \"#utility.yul\":20223:20226   */\n      0x00\n        /* \"#utility.yul\":20244:20311   */\n      tag_560\n        /* \"#utility.yul\":20308:20310   */\n      0x14\n        /* \"#utility.yul\":20303:20306   */\n      dup4\n        /* \"#utility.yul\":20244:20311   */\n      tag_301\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":20237:20311   */\n      swap2\n      pop\n        /* \"#utility.yul\":20320:20413   */\n      tag_561\n        /* \"#utility.yul\":20409:20412   */\n      dup3\n        /* \"#utility.yul\":20320:20413   */\n      tag_332\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":20438:20440   */\n      0x20\n        /* \"#utility.yul\":20433:20436   */\n      dup3\n        /* \"#utility.yul\":20429:20441   */\n      add\n        /* \"#utility.yul\":20422:20441   */\n      swap1\n      pop\n        /* \"#utility.yul\":20081:20447   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20453:20872   */\n    tag_145:\n        /* \"#utility.yul\":20619:20623   */\n      0x00\n        /* \"#utility.yul\":20657:20659   */\n      0x20\n        /* \"#utility.yul\":20646:20655   */\n      dup3\n        /* \"#utility.yul\":20642:20660   */\n      add\n        /* \"#utility.yul\":20634:20660   */\n      swap1\n      pop\n        /* \"#utility.yul\":20706:20715   */\n      dup2\n        /* \"#utility.yul\":20700:20704   */\n      dup2\n        /* \"#utility.yul\":20696:20716   */\n      sub\n        /* \"#utility.yul\":20692:20693   */\n      0x00\n        /* \"#utility.yul\":20681:20690   */\n      dup4\n        /* \"#utility.yul\":20677:20694   */\n      add\n        /* \"#utility.yul\":20670:20717   */\n      mstore\n        /* \"#utility.yul\":20734:20865   */\n      tag_563\n        /* \"#utility.yul\":20860:20864   */\n      dup2\n        /* \"#utility.yul\":20734:20865   */\n      tag_333\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":20726:20865   */\n      swap1\n      pop\n        /* \"#utility.yul\":20453:20872   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20878:21072   */\n    tag_149:\n        /* \"#utility.yul\":20918:20922   */\n      0x00\n        /* \"#utility.yul\":20938:20958   */\n      tag_565\n        /* \"#utility.yul\":20956:20957   */\n      dup3\n        /* \"#utility.yul\":20938:20958   */\n      tag_291\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":20933:20958   */\n      swap2\n      pop\n        /* \"#utility.yul\":20972:20992   */\n      tag_566\n        /* \"#utility.yul\":20990:20991   */\n      dup4\n        /* \"#utility.yul\":20972:20992   */\n      tag_291\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":20967:20992   */\n      swap3\n      pop\n        /* \"#utility.yul\":21016:21017   */\n      dup3\n        /* \"#utility.yul\":21013:21014   */\n      dup3\n        /* \"#utility.yul\":21009:21018   */\n      sub\n        /* \"#utility.yul\":21001:21018   */\n      swap1\n      pop\n        /* \"#utility.yul\":21040:21041   */\n      dup2\n        /* \"#utility.yul\":21034:21038   */\n      dup2\n        /* \"#utility.yul\":21031:21042   */\n      gt\n        /* \"#utility.yul\":21028:21065   */\n      iszero\n      tag_567\n      jumpi\n        /* \"#utility.yul\":21045:21063   */\n      tag_568\n      tag_331\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":21028:21065   */\n    tag_567:\n        /* \"#utility.yul\":20878:21072   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21078:21631   */\n    tag_236:\n        /* \"#utility.yul\":21255:21259   */\n      0x00\n        /* \"#utility.yul\":21293:21296   */\n      0x80\n        /* \"#utility.yul\":21282:21291   */\n      dup3\n        /* \"#utility.yul\":21278:21297   */\n      add\n        /* \"#utility.yul\":21270:21297   */\n      swap1\n      pop\n        /* \"#utility.yul\":21307:21378   */\n      tag_570\n        /* \"#utility.yul\":21375:21376   */\n      0x00\n        /* \"#utility.yul\":21364:21373   */\n      dup4\n        /* \"#utility.yul\":21360:21377   */\n      add\n        /* \"#utility.yul\":21351:21357   */\n      dup8\n        /* \"#utility.yul\":21307:21378   */\n      tag_327\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":21388:21460   */\n      tag_571\n        /* \"#utility.yul\":21456:21458   */\n      0x20\n        /* \"#utility.yul\":21445:21454   */\n      dup4\n        /* \"#utility.yul\":21441:21459   */\n      add\n        /* \"#utility.yul\":21432:21438   */\n      dup7\n        /* \"#utility.yul\":21388:21460   */\n      tag_294\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":21470:21542   */\n      tag_572\n        /* \"#utility.yul\":21538:21540   */\n      0x40\n        /* \"#utility.yul\":21527:21536   */\n      dup4\n        /* \"#utility.yul\":21523:21541   */\n      add\n        /* \"#utility.yul\":21514:21520   */\n      dup6\n        /* \"#utility.yul\":21470:21542   */\n      tag_294\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":21552:21624   */\n      tag_573\n        /* \"#utility.yul\":21620:21622   */\n      0x60\n        /* \"#utility.yul\":21609:21618   */\n      dup4\n        /* \"#utility.yul\":21605:21623   */\n      add\n        /* \"#utility.yul\":21596:21602   */\n      dup5\n        /* \"#utility.yul\":21552:21624   */\n      tag_294\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":21078:21631   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21637:22271   */\n    tag_246:\n        /* \"#utility.yul\":21858:21862   */\n      0x00\n        /* \"#utility.yul\":21896:21898   */\n      0x40\n        /* \"#utility.yul\":21885:21894   */\n      dup3\n        /* \"#utility.yul\":21881:21899   */\n      add\n        /* \"#utility.yul\":21873:21899   */\n      swap1\n      pop\n        /* \"#utility.yul\":21945:21954   */\n      dup2\n        /* \"#utility.yul\":21939:21943   */\n      dup2\n        /* \"#utility.yul\":21935:21955   */\n      sub\n        /* \"#utility.yul\":21931:21932   */\n      0x00\n        /* \"#utility.yul\":21920:21929   */\n      dup4\n        /* \"#utility.yul\":21916:21933   */\n      add\n        /* \"#utility.yul\":21909:21956   */\n      mstore\n        /* \"#utility.yul\":21973:22081   */\n      tag_575\n        /* \"#utility.yul\":22076:22080   */\n      dup2\n        /* \"#utility.yul\":22067:22073   */\n      dup6\n        /* \"#utility.yul\":21973:22081   */\n      tag_326\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":21965:22081   */\n      swap1\n      pop\n        /* \"#utility.yul\":22128:22137   */\n      dup2\n        /* \"#utility.yul\":22122:22126   */\n      dup2\n        /* \"#utility.yul\":22118:22138   */\n      sub\n        /* \"#utility.yul\":22113:22115   */\n      0x20\n        /* \"#utility.yul\":22102:22111   */\n      dup4\n        /* \"#utility.yul\":22098:22116   */\n      add\n        /* \"#utility.yul\":22091:22139   */\n      mstore\n        /* \"#utility.yul\":22156:22264   */\n      tag_576\n        /* \"#utility.yul\":22259:22263   */\n      dup2\n        /* \"#utility.yul\":22250:22256   */\n      dup5\n        /* \"#utility.yul\":22156:22264   */\n      tag_326\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":22148:22264   */\n      swap1\n      pop\n        /* \"#utility.yul\":21637:22271   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22277:22375   */\n    tag_334:\n        /* \"#utility.yul\":22328:22334   */\n      0x00\n        /* \"#utility.yul\":22362:22367   */\n      dup2\n        /* \"#utility.yul\":22356:22368   */\n      mload\n        /* \"#utility.yul\":22346:22368   */\n      swap1\n      pop\n        /* \"#utility.yul\":22277:22375   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22381:22549   */\n    tag_335:\n        /* \"#utility.yul\":22464:22475   */\n      0x00\n        /* \"#utility.yul\":22498:22504   */\n      dup3\n        /* \"#utility.yul\":22493:22496   */\n      dup3\n        /* \"#utility.yul\":22486:22505   */\n      mstore\n        /* \"#utility.yul\":22538:22542   */\n      0x20\n        /* \"#utility.yul\":22533:22536   */\n      dup3\n        /* \"#utility.yul\":22529:22543   */\n      add\n        /* \"#utility.yul\":22514:22543   */\n      swap1\n      pop\n        /* \"#utility.yul\":22381:22549   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22555:22928   */\n    tag_336:\n        /* \"#utility.yul\":22641:22644   */\n      0x00\n        /* \"#utility.yul\":22669:22707   */\n      tag_580\n        /* \"#utility.yul\":22701:22706   */\n      dup3\n        /* \"#utility.yul\":22669:22707   */\n      tag_334\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":22723:22793   */\n      tag_581\n        /* \"#utility.yul\":22786:22792   */\n      dup2\n        /* \"#utility.yul\":22781:22784   */\n      dup6\n        /* \"#utility.yul\":22723:22793   */\n      tag_335\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":22716:22793   */\n      swap4\n      pop\n        /* \"#utility.yul\":22802:22867   */\n      tag_582\n        /* \"#utility.yul\":22860:22866   */\n      dup2\n        /* \"#utility.yul\":22855:22858   */\n      dup6\n        /* \"#utility.yul\":22848:22852   */\n      0x20\n        /* \"#utility.yul\":22841:22846   */\n      dup7\n        /* \"#utility.yul\":22837:22853   */\n      add\n        /* \"#utility.yul\":22802:22867   */\n      tag_302\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":22892:22921   */\n      tag_583\n        /* \"#utility.yul\":22914:22920   */\n      dup2\n        /* \"#utility.yul\":22892:22921   */\n      tag_303\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":22887:22890   */\n      dup5\n        /* \"#utility.yul\":22883:22922   */\n      add\n        /* \"#utility.yul\":22876:22922   */\n      swap2\n      pop\n        /* \"#utility.yul\":22645:22928   */\n      pop\n        /* \"#utility.yul\":22555:22928   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22934:23685   */\n    tag_250:\n        /* \"#utility.yul\":23157:23161   */\n      0x00\n        /* \"#utility.yul\":23195:23198   */\n      0xa0\n        /* \"#utility.yul\":23184:23193   */\n      dup3\n        /* \"#utility.yul\":23180:23199   */\n      add\n        /* \"#utility.yul\":23172:23199   */\n      swap1\n      pop\n        /* \"#utility.yul\":23209:23280   */\n      tag_585\n        /* \"#utility.yul\":23277:23278   */\n      0x00\n        /* \"#utility.yul\":23266:23275   */\n      dup4\n        /* \"#utility.yul\":23262:23279   */\n      add\n        /* \"#utility.yul\":23253:23259   */\n      dup9\n        /* \"#utility.yul\":23209:23280   */\n      tag_327\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":23290:23362   */\n      tag_586\n        /* \"#utility.yul\":23358:23360   */\n      0x20\n        /* \"#utility.yul\":23347:23356   */\n      dup4\n        /* \"#utility.yul\":23343:23361   */\n      add\n        /* \"#utility.yul\":23334:23340   */\n      dup8\n        /* \"#utility.yul\":23290:23362   */\n      tag_327\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":23372:23444   */\n      tag_587\n        /* \"#utility.yul\":23440:23442   */\n      0x40\n        /* \"#utility.yul\":23429:23438   */\n      dup4\n        /* \"#utility.yul\":23425:23443   */\n      add\n        /* \"#utility.yul\":23416:23422   */\n      dup7\n        /* \"#utility.yul\":23372:23444   */\n      tag_294\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":23454:23526   */\n      tag_588\n        /* \"#utility.yul\":23522:23524   */\n      0x60\n        /* \"#utility.yul\":23511:23520   */\n      dup4\n        /* \"#utility.yul\":23507:23525   */\n      add\n        /* \"#utility.yul\":23498:23504   */\n      dup6\n        /* \"#utility.yul\":23454:23526   */\n      tag_294\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":23574:23583   */\n      dup2\n        /* \"#utility.yul\":23568:23572   */\n      dup2\n        /* \"#utility.yul\":23564:23584   */\n      sub\n        /* \"#utility.yul\":23558:23561   */\n      0x80\n        /* \"#utility.yul\":23547:23556   */\n      dup4\n        /* \"#utility.yul\":23543:23562   */\n      add\n        /* \"#utility.yul\":23536:23585   */\n      mstore\n        /* \"#utility.yul\":23602:23678   */\n      tag_589\n        /* \"#utility.yul\":23673:23677   */\n      dup2\n        /* \"#utility.yul\":23664:23670   */\n      dup5\n        /* \"#utility.yul\":23602:23678   */\n      tag_336\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":23594:23678   */\n      swap1\n      pop\n        /* \"#utility.yul\":22934:23685   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23691:23832   */\n    tag_337:\n        /* \"#utility.yul\":23747:23752   */\n      0x00\n        /* \"#utility.yul\":23778:23784   */\n      dup2\n        /* \"#utility.yul\":23772:23785   */\n      mload\n        /* \"#utility.yul\":23763:23785   */\n      swap1\n      pop\n        /* \"#utility.yul\":23794:23826   */\n      tag_591\n        /* \"#utility.yul\":23820:23825   */\n      dup2\n        /* \"#utility.yul\":23794:23826   */\n      tag_296\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":23691:23832   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23838:24187   */\n    tag_253:\n        /* \"#utility.yul\":23907:23913   */\n      0x00\n        /* \"#utility.yul\":23956:23958   */\n      0x20\n        /* \"#utility.yul\":23944:23953   */\n      dup3\n        /* \"#utility.yul\":23935:23942   */\n      dup5\n        /* \"#utility.yul\":23931:23954   */\n      sub\n        /* \"#utility.yul\":23927:23959   */\n      slt\n        /* \"#utility.yul\":23924:24043   */\n      iszero\n      tag_593\n      jumpi\n        /* \"#utility.yul\":23962:24041   */\n      tag_594\n      tag_285\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":23924:24043   */\n    tag_593:\n        /* \"#utility.yul\":24082:24083   */\n      0x00\n        /* \"#utility.yul\":24107:24170   */\n      tag_595\n        /* \"#utility.yul\":24162:24169   */\n      dup5\n        /* \"#utility.yul\":24153:24159   */\n      dup3\n        /* \"#utility.yul\":24142:24151   */\n      dup6\n        /* \"#utility.yul\":24138:24160   */\n      add\n        /* \"#utility.yul\":24107:24170   */\n      tag_337\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":24097:24170   */\n      swap2\n      pop\n        /* \"#utility.yul\":24053:24180   */\n      pop\n        /* \"#utility.yul\":23838:24187   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24193:25246   */\n    tag_269:\n        /* \"#utility.yul\":24516:24520   */\n      0x00\n        /* \"#utility.yul\":24554:24557   */\n      0xa0\n        /* \"#utility.yul\":24543:24552   */\n      dup3\n        /* \"#utility.yul\":24539:24558   */\n      add\n        /* \"#utility.yul\":24531:24558   */\n      swap1\n      pop\n        /* \"#utility.yul\":24568:24639   */\n      tag_597\n        /* \"#utility.yul\":24636:24637   */\n      0x00\n        /* \"#utility.yul\":24625:24634   */\n      dup4\n        /* \"#utility.yul\":24621:24638   */\n      add\n        /* \"#utility.yul\":24612:24618   */\n      dup9\n        /* \"#utility.yul\":24568:24639   */\n      tag_327\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":24649:24721   */\n      tag_598\n        /* \"#utility.yul\":24717:24719   */\n      0x20\n        /* \"#utility.yul\":24706:24715   */\n      dup4\n        /* \"#utility.yul\":24702:24720   */\n      add\n        /* \"#utility.yul\":24693:24699   */\n      dup8\n        /* \"#utility.yul\":24649:24721   */\n      tag_327\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":24768:24777   */\n      dup2\n        /* \"#utility.yul\":24762:24766   */\n      dup2\n        /* \"#utility.yul\":24758:24778   */\n      sub\n        /* \"#utility.yul\":24753:24755   */\n      0x40\n        /* \"#utility.yul\":24742:24751   */\n      dup4\n        /* \"#utility.yul\":24738:24756   */\n      add\n        /* \"#utility.yul\":24731:24779   */\n      mstore\n        /* \"#utility.yul\":24796:24904   */\n      tag_599\n        /* \"#utility.yul\":24899:24903   */\n      dup2\n        /* \"#utility.yul\":24890:24896   */\n      dup7\n        /* \"#utility.yul\":24796:24904   */\n      tag_326\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":24788:24904   */\n      swap1\n      pop\n        /* \"#utility.yul\":24951:24960   */\n      dup2\n        /* \"#utility.yul\":24945:24949   */\n      dup2\n        /* \"#utility.yul\":24941:24961   */\n      sub\n        /* \"#utility.yul\":24936:24938   */\n      0x60\n        /* \"#utility.yul\":24925:24934   */\n      dup4\n        /* \"#utility.yul\":24921:24939   */\n      add\n        /* \"#utility.yul\":24914:24962   */\n      mstore\n        /* \"#utility.yul\":24979:25087   */\n      tag_600\n        /* \"#utility.yul\":25082:25086   */\n      dup2\n        /* \"#utility.yul\":25073:25079   */\n      dup6\n        /* \"#utility.yul\":24979:25087   */\n      tag_326\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":24971:25087   */\n      swap1\n      pop\n        /* \"#utility.yul\":25135:25144   */\n      dup2\n        /* \"#utility.yul\":25129:25133   */\n      dup2\n        /* \"#utility.yul\":25125:25145   */\n      sub\n        /* \"#utility.yul\":25119:25122   */\n      0x80\n        /* \"#utility.yul\":25108:25117   */\n      dup4\n        /* \"#utility.yul\":25104:25123   */\n      add\n        /* \"#utility.yul\":25097:25146   */\n      mstore\n        /* \"#utility.yul\":25163:25239   */\n      tag_601\n        /* \"#utility.yul\":25234:25238   */\n      dup2\n        /* \"#utility.yul\":25225:25231   */\n      dup5\n        /* \"#utility.yul\":25163:25239   */\n      tag_336\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":25155:25239   */\n      swap1\n      pop\n        /* \"#utility.yul\":24193:25246   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a7c3e62f98c941e17a4a16cce07e8f0152547b7fc9e5bfc3adb4357100520b5864736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2954": {
									"entryPoint": null,
									"id": 2954,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_345": {
									"entryPoint": null,
									"id": 345,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_asSingletonArrays_1334": {
									"entryPoint": 929,
									"id": 1334,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@_checkOwner_84": {
									"entryPoint": 552,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1318": {
									"entryPoint": 2607,
									"id": 1318,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1248": {
									"entryPoint": 2161,
									"id": 1248,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_mint_1010": {
									"entryPoint": 714,
									"id": 1010,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_1711": {
									"entryPoint": 882,
									"id": 1711,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setURI_958": {
									"entryPoint": 241,
									"id": 958,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 262,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_updateWithAcceptanceCheck_826": {
									"entryPoint": 977,
									"id": 826,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_update_750": {
									"entryPoint": 1188,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@mintToken_2978": {
									"entryPoint": 457,
									"id": 2978,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 889,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@unsafeMemoryAccess_1685": {
									"entryPoint": 2142,
									"id": 1685,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 4875,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 4897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 4359,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3103,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 4396,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 4641,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 4342,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4090,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3120,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4945,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4705,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4150,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4500,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4107,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 4327,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 3299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 4301,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 4557,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3147,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 4384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 4311,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 4567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4032,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 3608,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 3084,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 4807,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3053,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3429,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 3570,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 3447,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 3759,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4583,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 3317,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3247,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 3730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 3438,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 4225,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 3700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3987,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 3202,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3157,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 3486,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4803,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4625,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 3332,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 3688,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 3542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 3344,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 3495,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 4850,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 3538,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13677:13",
										"nodeType": "YulBlock",
										"src": "0:13677:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:13",
													"nodeType": "YulBlock",
													"src": "52:81:13",
													"statements": [
														{
															"nativeSrc": "62:65:13",
															"nodeType": "YulAssignment",
															"src": "62:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:13",
																		"nodeType": "YulLiteral",
																		"src": "84:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:13"
																},
																"nativeSrc": "73:54:13",
																"nodeType": "YulFunctionCall",
																"src": "73:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:13",
														"nodeType": "YulTypedName",
														"src": "34:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:13",
														"nodeType": "YulTypedName",
														"src": "44:7:13",
														"type": ""
													}
												],
												"src": "7:126:13"
											},
											{
												"body": {
													"nativeSrc": "184:51:13",
													"nodeType": "YulBlock",
													"src": "184:51:13",
													"statements": [
														{
															"nativeSrc": "194:35:13",
															"nodeType": "YulAssignment",
															"src": "194:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:13"
																},
																"nativeSrc": "205:24:13",
																"nodeType": "YulFunctionCall",
																"src": "205:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:13",
														"nodeType": "YulTypedName",
														"src": "166:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:13",
														"nodeType": "YulTypedName",
														"src": "176:7:13",
														"type": ""
													}
												],
												"src": "139:96:13"
											},
											{
												"body": {
													"nativeSrc": "306:53:13",
													"nodeType": "YulBlock",
													"src": "306:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:13"
																		},
																		"nativeSrc": "328:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:13"
																},
																"nativeSrc": "316:37:13",
																"nodeType": "YulFunctionCall",
																"src": "316:37:13"
															},
															"nativeSrc": "316:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:13",
														"nodeType": "YulTypedName",
														"src": "294:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:13",
														"nodeType": "YulTypedName",
														"src": "301:3:13",
														"type": ""
													}
												],
												"src": "241:118:13"
											},
											{
												"body": {
													"nativeSrc": "463:124:13",
													"nodeType": "YulBlock",
													"src": "463:124:13",
													"statements": [
														{
															"nativeSrc": "473:26:13",
															"nodeType": "YulAssignment",
															"src": "473:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:13",
																		"nodeType": "YulLiteral",
																		"src": "496:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:13"
																},
																"nativeSrc": "481:18:13",
																"nodeType": "YulFunctionCall",
																"src": "481:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:13",
																				"nodeType": "YulLiteral",
																				"src": "577:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:13"
																		},
																		"nativeSrc": "562:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:13"
																},
																"nativeSrc": "509:71:13",
																"nodeType": "YulFunctionCall",
																"src": "509:71:13"
															},
															"nativeSrc": "509:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:13",
														"nodeType": "YulTypedName",
														"src": "435:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:13",
														"nodeType": "YulTypedName",
														"src": "447:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:13",
														"nodeType": "YulTypedName",
														"src": "458:4:13",
														"type": ""
													}
												],
												"src": "365:222:13"
											},
											{
												"body": {
													"nativeSrc": "652:40:13",
													"nodeType": "YulBlock",
													"src": "652:40:13",
													"statements": [
														{
															"nativeSrc": "663:22:13",
															"nodeType": "YulAssignment",
															"src": "663:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "679:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "679:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "673:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "673:5:13"
																},
																"nativeSrc": "673:12:13",
																"nodeType": "YulFunctionCall",
																"src": "673:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "663:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "663:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "593:99:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "635:5:13",
														"nodeType": "YulTypedName",
														"src": "635:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "645:6:13",
														"nodeType": "YulTypedName",
														"src": "645:6:13",
														"type": ""
													}
												],
												"src": "593:99:13"
											},
											{
												"body": {
													"nativeSrc": "726:152:13",
													"nodeType": "YulBlock",
													"src": "726:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "743:1:13",
																		"nodeType": "YulLiteral",
																		"src": "743:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "746:77:13",
																		"nodeType": "YulLiteral",
																		"src": "746:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "736:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "736:6:13"
																},
																"nativeSrc": "736:88:13",
																"nodeType": "YulFunctionCall",
																"src": "736:88:13"
															},
															"nativeSrc": "736:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "736:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "840:1:13",
																		"nodeType": "YulLiteral",
																		"src": "840:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "843:4:13",
																		"nodeType": "YulLiteral",
																		"src": "843:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "833:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "833:6:13"
																},
																"nativeSrc": "833:15:13",
																"nodeType": "YulFunctionCall",
																"src": "833:15:13"
															},
															"nativeSrc": "833:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "833:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "864:1:13",
																		"nodeType": "YulLiteral",
																		"src": "864:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "867:4:13",
																		"nodeType": "YulLiteral",
																		"src": "867:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "857:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "857:6:13"
																},
																"nativeSrc": "857:15:13",
																"nodeType": "YulFunctionCall",
																"src": "857:15:13"
															},
															"nativeSrc": "857:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "857:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "698:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "698:180:13"
											},
											{
												"body": {
													"nativeSrc": "912:152:13",
													"nodeType": "YulBlock",
													"src": "912:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "929:1:13",
																		"nodeType": "YulLiteral",
																		"src": "929:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "932:77:13",
																		"nodeType": "YulLiteral",
																		"src": "932:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "922:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "922:6:13"
																},
																"nativeSrc": "922:88:13",
																"nodeType": "YulFunctionCall",
																"src": "922:88:13"
															},
															"nativeSrc": "922:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "922:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1026:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1026:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1029:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1029:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1019:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1019:6:13"
																},
																"nativeSrc": "1019:15:13",
																"nodeType": "YulFunctionCall",
																"src": "1019:15:13"
															},
															"nativeSrc": "1019:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "1019:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1050:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1050:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1053:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1053:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1043:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1043:6:13"
																},
																"nativeSrc": "1043:15:13",
																"nodeType": "YulFunctionCall",
																"src": "1043:15:13"
															},
															"nativeSrc": "1043:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "1043:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "884:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "884:180:13"
											},
											{
												"body": {
													"nativeSrc": "1121:269:13",
													"nodeType": "YulBlock",
													"src": "1121:269:13",
													"statements": [
														{
															"nativeSrc": "1131:22:13",
															"nodeType": "YulAssignment",
															"src": "1131:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1145:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "1145:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1151:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1151:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1141:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1141:3:13"
																},
																"nativeSrc": "1141:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1141:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1131:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1131:6:13"
																}
															]
														},
														{
															"nativeSrc": "1162:38:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1162:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1192:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "1192:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1198:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1198:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1188:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1188:3:13"
																},
																"nativeSrc": "1188:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1188:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1166:18:13",
																	"nodeType": "YulTypedName",
																	"src": "1166:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1239:51:13",
																"nodeType": "YulBlock",
																"src": "1239:51:13",
																"statements": [
																	{
																		"nativeSrc": "1253:27:13",
																		"nodeType": "YulAssignment",
																		"src": "1253:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1267:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "1267:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1275:4:13",
																					"nodeType": "YulLiteral",
																					"src": "1275:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1263:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "1263:3:13"
																			},
																			"nativeSrc": "1263:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1263:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1253:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1253:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1219:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "1219:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1212:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:13"
																},
																"nativeSrc": "1212:26:13",
																"nodeType": "YulFunctionCall",
																"src": "1212:26:13"
															},
															"nativeSrc": "1209:81:13",
															"nodeType": "YulIf",
															"src": "1209:81:13"
														},
														{
															"body": {
																"nativeSrc": "1342:42:13",
																"nodeType": "YulBlock",
																"src": "1342:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "1356:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "1356:16:13"
																			},
																			"nativeSrc": "1356:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1356:18:13"
																		},
																		"nativeSrc": "1356:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1356:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1306:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "1306:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1329:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1329:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1337:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1337:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1326:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1326:2:13"
																		},
																		"nativeSrc": "1326:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1326:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1303:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1303:2:13"
																},
																"nativeSrc": "1303:38:13",
																"nodeType": "YulFunctionCall",
																"src": "1303:38:13"
															},
															"nativeSrc": "1300:84:13",
															"nodeType": "YulIf",
															"src": "1300:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1070:320:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1105:4:13",
														"nodeType": "YulTypedName",
														"src": "1105:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1114:6:13",
														"nodeType": "YulTypedName",
														"src": "1114:6:13",
														"type": ""
													}
												],
												"src": "1070:320:13"
											},
											{
												"body": {
													"nativeSrc": "1450:87:13",
													"nodeType": "YulBlock",
													"src": "1450:87:13",
													"statements": [
														{
															"nativeSrc": "1460:11:13",
															"nodeType": "YulAssignment",
															"src": "1460:11:13",
															"value": {
																"name": "ptr",
																"nativeSrc": "1468:3:13",
																"nodeType": "YulIdentifier",
																"src": "1468:3:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1460:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1460:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1488:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1488:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1491:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1491:3:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1481:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1481:6:13"
																},
																"nativeSrc": "1481:14:13",
																"nodeType": "YulFunctionCall",
																"src": "1481:14:13"
															},
															"nativeSrc": "1481:14:13",
															"nodeType": "YulExpressionStatement",
															"src": "1481:14:13"
														},
														{
															"nativeSrc": "1504:26:13",
															"nodeType": "YulAssignment",
															"src": "1504:26:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1522:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1522:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1525:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1525:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1512:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "1512:9:13"
																},
																"nativeSrc": "1512:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1512:18:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1504:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1504:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "1396:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1437:3:13",
														"nodeType": "YulTypedName",
														"src": "1437:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1445:4:13",
														"nodeType": "YulTypedName",
														"src": "1445:4:13",
														"type": ""
													}
												],
												"src": "1396:141:13"
											},
											{
												"body": {
													"nativeSrc": "1587:49:13",
													"nodeType": "YulBlock",
													"src": "1587:49:13",
													"statements": [
														{
															"nativeSrc": "1597:33:13",
															"nodeType": "YulAssignment",
															"src": "1597:33:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1615:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1615:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1622:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1622:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1611:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1611:3:13"
																		},
																		"nativeSrc": "1611:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1611:14:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1627:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1627:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1607:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1607:3:13"
																},
																"nativeSrc": "1607:23:13",
																"nodeType": "YulFunctionCall",
																"src": "1607:23:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1597:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1597:6:13"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "1543:93:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1570:5:13",
														"nodeType": "YulTypedName",
														"src": "1570:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1580:6:13",
														"nodeType": "YulTypedName",
														"src": "1580:6:13",
														"type": ""
													}
												],
												"src": "1543:93:13"
											},
											{
												"body": {
													"nativeSrc": "1695:54:13",
													"nodeType": "YulBlock",
													"src": "1695:54:13",
													"statements": [
														{
															"nativeSrc": "1705:37:13",
															"nodeType": "YulAssignment",
															"src": "1705:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1730:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "1730:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1736:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1736:5:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1726:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1726:3:13"
																},
																"nativeSrc": "1726:16:13",
																"nodeType": "YulFunctionCall",
																"src": "1726:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1705:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "1705:8:13"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1642:107:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1670:4:13",
														"nodeType": "YulTypedName",
														"src": "1670:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1676:5:13",
														"nodeType": "YulTypedName",
														"src": "1676:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1686:8:13",
														"nodeType": "YulTypedName",
														"src": "1686:8:13",
														"type": ""
													}
												],
												"src": "1642:107:13"
											},
											{
												"body": {
													"nativeSrc": "1831:317:13",
													"nodeType": "YulBlock",
													"src": "1831:317:13",
													"statements": [
														{
															"nativeSrc": "1841:35:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1841:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1862:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "1862:10:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1874:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1874:1:13",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1858:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1858:3:13"
																},
																"nativeSrc": "1858:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1858:18:13"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1845:9:13",
																	"nodeType": "YulTypedName",
																	"src": "1845:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1885:109:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1885:109:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1916:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1916:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1927:66:13",
																		"nodeType": "YulLiteral",
																		"src": "1927:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1897:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "1897:18:13"
																},
																"nativeSrc": "1897:97:13",
																"nodeType": "YulFunctionCall",
																"src": "1897:97:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1889:4:13",
																	"nodeType": "YulTypedName",
																	"src": "1889:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2003:51:13",
															"nodeType": "YulAssignment",
															"src": "2003:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2034:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2034:9:13"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2045:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "2045:8:13"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2015:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "2015:18:13"
																},
																"nativeSrc": "2015:39:13",
																"nodeType": "YulFunctionCall",
																"src": "2015:39:13"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2003:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "2003:8:13"
																}
															]
														},
														{
															"nativeSrc": "2063:30:13",
															"nodeType": "YulAssignment",
															"src": "2063:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2076:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2076:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2087:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "2087:4:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2083:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2083:3:13"
																		},
																		"nativeSrc": "2083:9:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2083:9:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2072:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2072:3:13"
																},
																"nativeSrc": "2072:21:13",
																"nodeType": "YulFunctionCall",
																"src": "2072:21:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2063:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2063:5:13"
																}
															]
														},
														{
															"nativeSrc": "2102:40:13",
															"nodeType": "YulAssignment",
															"src": "2102:40:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2115:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2115:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2126:8:13",
																				"nodeType": "YulIdentifier",
																				"src": "2126:8:13"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2136:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "2136:4:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2122:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:13"
																		},
																		"nativeSrc": "2122:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2122:19:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2112:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "2112:2:13"
																},
																"nativeSrc": "2112:30:13",
																"nodeType": "YulFunctionCall",
																"src": "2112:30:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2102:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2102:6:13"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1755:393:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1792:5:13",
														"nodeType": "YulTypedName",
														"src": "1792:5:13",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1799:10:13",
														"nodeType": "YulTypedName",
														"src": "1799:10:13",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1811:8:13",
														"nodeType": "YulTypedName",
														"src": "1811:8:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1824:6:13",
														"nodeType": "YulTypedName",
														"src": "1824:6:13",
														"type": ""
													}
												],
												"src": "1755:393:13"
											},
											{
												"body": {
													"nativeSrc": "2199:32:13",
													"nodeType": "YulBlock",
													"src": "2199:32:13",
													"statements": [
														{
															"nativeSrc": "2209:16:13",
															"nodeType": "YulAssignment",
															"src": "2209:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "2220:5:13",
																"nodeType": "YulIdentifier",
																"src": "2220:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2209:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "2209:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2154:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2181:5:13",
														"nodeType": "YulTypedName",
														"src": "2181:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2191:7:13",
														"nodeType": "YulTypedName",
														"src": "2191:7:13",
														"type": ""
													}
												],
												"src": "2154:77:13"
											},
											{
												"body": {
													"nativeSrc": "2269:28:13",
													"nodeType": "YulBlock",
													"src": "2269:28:13",
													"statements": [
														{
															"nativeSrc": "2279:12:13",
															"nodeType": "YulAssignment",
															"src": "2279:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "2286:5:13",
																"nodeType": "YulIdentifier",
																"src": "2286:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2279:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2279:3:13"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2237:60:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2255:5:13",
														"nodeType": "YulTypedName",
														"src": "2255:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2265:3:13",
														"nodeType": "YulTypedName",
														"src": "2265:3:13",
														"type": ""
													}
												],
												"src": "2237:60:13"
											},
											{
												"body": {
													"nativeSrc": "2363:82:13",
													"nodeType": "YulBlock",
													"src": "2363:82:13",
													"statements": [
														{
															"nativeSrc": "2373:66:13",
															"nodeType": "YulAssignment",
															"src": "2373:66:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2431:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "2431:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2413:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "2413:17:13"
																				},
																				"nativeSrc": "2413:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2413:24:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2404:8:13",
																			"nodeType": "YulIdentifier",
																			"src": "2404:8:13"
																		},
																		"nativeSrc": "2404:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2404:34:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2386:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "2386:17:13"
																},
																"nativeSrc": "2386:53:13",
																"nodeType": "YulFunctionCall",
																"src": "2386:53:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2373:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "2373:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2303:142:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2343:5:13",
														"nodeType": "YulTypedName",
														"src": "2343:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2353:9:13",
														"nodeType": "YulTypedName",
														"src": "2353:9:13",
														"type": ""
													}
												],
												"src": "2303:142:13"
											},
											{
												"body": {
													"nativeSrc": "2498:28:13",
													"nodeType": "YulBlock",
													"src": "2498:28:13",
													"statements": [
														{
															"nativeSrc": "2508:12:13",
															"nodeType": "YulAssignment",
															"src": "2508:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "2515:5:13",
																"nodeType": "YulIdentifier",
																"src": "2515:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2508:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2508:3:13"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "2451:75:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2484:5:13",
														"nodeType": "YulTypedName",
														"src": "2484:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2494:3:13",
														"nodeType": "YulTypedName",
														"src": "2494:3:13",
														"type": ""
													}
												],
												"src": "2451:75:13"
											},
											{
												"body": {
													"nativeSrc": "2608:193:13",
													"nodeType": "YulBlock",
													"src": "2608:193:13",
													"statements": [
														{
															"nativeSrc": "2618:63:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2618:63:13",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2673:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "2673:7:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2642:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "2642:30:13"
																},
																"nativeSrc": "2642:39:13",
																"nodeType": "YulFunctionCall",
																"src": "2642:39:13"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2622:16:13",
																	"nodeType": "YulTypedName",
																	"src": "2622:16:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2697:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2697:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2737:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "2737:4:13"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2731:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "2731:5:13"
																				},
																				"nativeSrc": "2731:11:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2731:11:13"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2744:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2744:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2776:16:13",
																						"nodeType": "YulIdentifier",
																						"src": "2776:16:13"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2752:23:13",
																					"nodeType": "YulIdentifier",
																					"src": "2752:23:13"
																				},
																				"nativeSrc": "2752:41:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2752:41:13"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2703:27:13",
																			"nodeType": "YulIdentifier",
																			"src": "2703:27:13"
																		},
																		"nativeSrc": "2703:91:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2703:91:13"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2690:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2690:6:13"
																},
																"nativeSrc": "2690:105:13",
																"nodeType": "YulFunctionCall",
																"src": "2690:105:13"
															},
															"nativeSrc": "2690:105:13",
															"nodeType": "YulExpressionStatement",
															"src": "2690:105:13"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "2532:269:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2585:4:13",
														"nodeType": "YulTypedName",
														"src": "2585:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2591:6:13",
														"nodeType": "YulTypedName",
														"src": "2591:6:13",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2599:7:13",
														"nodeType": "YulTypedName",
														"src": "2599:7:13",
														"type": ""
													}
												],
												"src": "2532:269:13"
											},
											{
												"body": {
													"nativeSrc": "2856:24:13",
													"nodeType": "YulBlock",
													"src": "2856:24:13",
													"statements": [
														{
															"nativeSrc": "2866:8:13",
															"nodeType": "YulAssignment",
															"src": "2866:8:13",
															"value": {
																"kind": "number",
																"nativeSrc": "2873:1:13",
																"nodeType": "YulLiteral",
																"src": "2873:1:13",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2866:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2866:3:13"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2807:73:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2852:3:13",
														"nodeType": "YulTypedName",
														"src": "2852:3:13",
														"type": ""
													}
												],
												"src": "2807:73:13"
											},
											{
												"body": {
													"nativeSrc": "2939:136:13",
													"nodeType": "YulBlock",
													"src": "2939:136:13",
													"statements": [
														{
															"nativeSrc": "2949:46:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2949:46:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2963:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "2963:30:13"
																},
																"nativeSrc": "2963:32:13",
																"nodeType": "YulFunctionCall",
																"src": "2963:32:13"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2953:6:13",
																	"nodeType": "YulTypedName",
																	"src": "2953:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3048:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3048:4:13"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3054:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3054:6:13"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3062:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3062:6:13"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3004:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "3004:43:13"
																},
																"nativeSrc": "3004:65:13",
																"nodeType": "YulFunctionCall",
																"src": "3004:65:13"
															},
															"nativeSrc": "3004:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "3004:65:13"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2886:189:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2925:4:13",
														"nodeType": "YulTypedName",
														"src": "2925:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2931:6:13",
														"nodeType": "YulTypedName",
														"src": "2931:6:13",
														"type": ""
													}
												],
												"src": "2886:189:13"
											},
											{
												"body": {
													"nativeSrc": "3131:136:13",
													"nodeType": "YulBlock",
													"src": "3131:136:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3198:63:13",
																"nodeType": "YulBlock",
																"src": "3198:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3242:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "3242:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3249:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3249:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3212:29:13",
																				"nodeType": "YulIdentifier",
																				"src": "3212:29:13"
																			},
																			"nativeSrc": "3212:39:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3212:39:13"
																		},
																		"nativeSrc": "3212:39:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3212:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3151:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3151:5:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3158:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3158:3:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3148:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "3148:2:13"
																},
																"nativeSrc": "3148:14:13",
																"nodeType": "YulFunctionCall",
																"src": "3148:14:13"
															},
															"nativeSrc": "3141:120:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3163:26:13",
																"nodeType": "YulBlock",
																"src": "3163:26:13",
																"statements": [
																	{
																		"nativeSrc": "3165:22:13",
																		"nodeType": "YulAssignment",
																		"src": "3165:22:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3178:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "3178:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3185:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3185:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3174:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "3174:3:13"
																			},
																			"nativeSrc": "3174:13:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3174:13:13"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3165:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3165:5:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3145:2:13",
																"nodeType": "YulBlock",
																"src": "3145:2:13",
																"statements": []
															},
															"src": "3141:120:13"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3081:186:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3119:5:13",
														"nodeType": "YulTypedName",
														"src": "3119:5:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3126:3:13",
														"nodeType": "YulTypedName",
														"src": "3126:3:13",
														"type": ""
													}
												],
												"src": "3081:186:13"
											},
											{
												"body": {
													"nativeSrc": "3352:464:13",
													"nodeType": "YulBlock",
													"src": "3352:464:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3378:431:13",
																"nodeType": "YulBlock",
																"src": "3378:431:13",
																"statements": [
																	{
																		"nativeSrc": "3392:54:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3392:54:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "3440:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "3440:5:13"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "3408:31:13",
																				"nodeType": "YulIdentifier",
																				"src": "3408:31:13"
																			},
																			"nativeSrc": "3408:38:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3408:38:13"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "3396:8:13",
																				"nodeType": "YulTypedName",
																				"src": "3396:8:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "3459:63:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3459:63:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "3482:8:13",
																					"nodeType": "YulIdentifier",
																					"src": "3482:8:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "3510:10:13",
																							"nodeType": "YulIdentifier",
																							"src": "3510:10:13"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "3492:17:13",
																						"nodeType": "YulIdentifier",
																						"src": "3492:17:13"
																					},
																					"nativeSrc": "3492:29:13",
																					"nodeType": "YulFunctionCall",
																					"src": "3492:29:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3478:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "3478:3:13"
																			},
																			"nativeSrc": "3478:44:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3478:44:13"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "3463:11:13",
																				"nodeType": "YulTypedName",
																				"src": "3463:11:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3679:27:13",
																			"nodeType": "YulBlock",
																			"src": "3679:27:13",
																			"statements": [
																				{
																					"nativeSrc": "3681:23:13",
																					"nodeType": "YulAssignment",
																					"src": "3681:23:13",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3696:8:13",
																						"nodeType": "YulIdentifier",
																						"src": "3696:8:13"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3681:11:13",
																							"nodeType": "YulIdentifier",
																							"src": "3681:11:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3663:10:13",
																					"nodeType": "YulIdentifier",
																					"src": "3663:10:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3675:2:13",
																					"nodeType": "YulLiteral",
																					"src": "3675:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3660:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "3660:2:13"
																			},
																			"nativeSrc": "3660:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3660:18:13"
																		},
																		"nativeSrc": "3657:49:13",
																		"nodeType": "YulIf",
																		"src": "3657:49:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3748:11:13",
																					"nodeType": "YulIdentifier",
																					"src": "3748:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3765:8:13",
																							"nodeType": "YulIdentifier",
																							"src": "3765:8:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3793:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "3793:3:13"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3775:17:13",
																								"nodeType": "YulIdentifier",
																								"src": "3775:17:13"
																							},
																							"nativeSrc": "3775:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "3775:22:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3761:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "3761:3:13"
																					},
																					"nativeSrc": "3761:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "3761:37:13"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3719:28:13",
																				"nodeType": "YulIdentifier",
																				"src": "3719:28:13"
																			},
																			"nativeSrc": "3719:80:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3719:80:13"
																		},
																		"nativeSrc": "3719:80:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3719:80:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "3369:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3369:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3374:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3374:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3366:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "3366:2:13"
																},
																"nativeSrc": "3366:11:13",
																"nodeType": "YulFunctionCall",
																"src": "3366:11:13"
															},
															"nativeSrc": "3363:446:13",
															"nodeType": "YulIf",
															"src": "3363:446:13"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "3273:543:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3328:5:13",
														"nodeType": "YulTypedName",
														"src": "3328:5:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3335:3:13",
														"nodeType": "YulTypedName",
														"src": "3335:3:13",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "3340:10:13",
														"nodeType": "YulTypedName",
														"src": "3340:10:13",
														"type": ""
													}
												],
												"src": "3273:543:13"
											},
											{
												"body": {
													"nativeSrc": "3885:54:13",
													"nodeType": "YulBlock",
													"src": "3885:54:13",
													"statements": [
														{
															"nativeSrc": "3895:37:13",
															"nodeType": "YulAssignment",
															"src": "3895:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3920:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3920:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3926:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3926:5:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3916:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3916:3:13"
																},
																"nativeSrc": "3916:16:13",
																"nodeType": "YulFunctionCall",
																"src": "3916:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3895:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "3895:8:13"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3822:117:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3860:4:13",
														"nodeType": "YulTypedName",
														"src": "3860:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3866:5:13",
														"nodeType": "YulTypedName",
														"src": "3866:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3876:8:13",
														"nodeType": "YulTypedName",
														"src": "3876:8:13",
														"type": ""
													}
												],
												"src": "3822:117:13"
											},
											{
												"body": {
													"nativeSrc": "3996:118:13",
													"nodeType": "YulBlock",
													"src": "3996:118:13",
													"statements": [
														{
															"nativeSrc": "4006:68:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4006:68:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4055:1:13",
																						"nodeType": "YulLiteral",
																						"src": "4055:1:13",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4058:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "4058:5:13"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4051:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4051:3:13"
																				},
																				"nativeSrc": "4051:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4051:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4070:1:13",
																						"nodeType": "YulLiteral",
																						"src": "4070:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4066:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4066:3:13"
																				},
																				"nativeSrc": "4066:6:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4066:6:13"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4022:28:13",
																			"nodeType": "YulIdentifier",
																			"src": "4022:28:13"
																		},
																		"nativeSrc": "4022:51:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4022:51:13"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4018:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4018:3:13"
																},
																"nativeSrc": "4018:56:13",
																"nodeType": "YulFunctionCall",
																"src": "4018:56:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4010:4:13",
																	"nodeType": "YulTypedName",
																	"src": "4010:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4083:25:13",
															"nodeType": "YulAssignment",
															"src": "4083:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4097:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4097:4:13"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4103:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4103:4:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4093:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4093:3:13"
																},
																"nativeSrc": "4093:15:13",
																"nodeType": "YulFunctionCall",
																"src": "4093:15:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4083:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4083:6:13"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3945:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3973:4:13",
														"nodeType": "YulTypedName",
														"src": "3973:4:13",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3979:5:13",
														"nodeType": "YulTypedName",
														"src": "3979:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3989:6:13",
														"nodeType": "YulTypedName",
														"src": "3989:6:13",
														"type": ""
													}
												],
												"src": "3945:169:13"
											},
											{
												"body": {
													"nativeSrc": "4200:214:13",
													"nodeType": "YulBlock",
													"src": "4200:214:13",
													"statements": [
														{
															"nativeSrc": "4333:37:13",
															"nodeType": "YulAssignment",
															"src": "4333:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4360:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4360:4:13"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "4366:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4366:3:13"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "4341:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "4341:18:13"
																},
																"nativeSrc": "4341:29:13",
																"nodeType": "YulFunctionCall",
																"src": "4341:29:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4333:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4333:4:13"
																}
															]
														},
														{
															"nativeSrc": "4379:29:13",
															"nodeType": "YulAssignment",
															"src": "4379:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4390:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4390:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4400:1:13",
																				"nodeType": "YulLiteral",
																				"src": "4400:1:13",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "4403:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "4403:3:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "4396:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4396:3:13"
																		},
																		"nativeSrc": "4396:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4396:11:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4387:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "4387:2:13"
																},
																"nativeSrc": "4387:21:13",
																"nodeType": "YulFunctionCall",
																"src": "4387:21:13"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "4379:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4379:4:13"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4119:295:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4181:4:13",
														"nodeType": "YulTypedName",
														"src": "4181:4:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4187:3:13",
														"nodeType": "YulTypedName",
														"src": "4187:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4195:4:13",
														"nodeType": "YulTypedName",
														"src": "4195:4:13",
														"type": ""
													}
												],
												"src": "4119:295:13"
											},
											{
												"body": {
													"nativeSrc": "4511:1303:13",
													"nodeType": "YulBlock",
													"src": "4511:1303:13",
													"statements": [
														{
															"nativeSrc": "4522:51:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4522:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "4569:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4569:3:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "4536:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "4536:32:13"
																},
																"nativeSrc": "4536:37:13",
																"nodeType": "YulFunctionCall",
																"src": "4536:37:13"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "4526:6:13",
																	"nodeType": "YulTypedName",
																	"src": "4526:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4658:22:13",
																"nodeType": "YulBlock",
																"src": "4658:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4660:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "4660:16:13"
																			},
																			"nativeSrc": "4660:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4660:18:13"
																		},
																		"nativeSrc": "4660:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4660:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4630:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4630:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4638:18:13",
																		"nodeType": "YulLiteral",
																		"src": "4638:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4627:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "4627:2:13"
																},
																"nativeSrc": "4627:30:13",
																"nodeType": "YulFunctionCall",
																"src": "4627:30:13"
															},
															"nativeSrc": "4624:56:13",
															"nodeType": "YulIf",
															"src": "4624:56:13"
														},
														{
															"nativeSrc": "4690:52:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4690:52:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4736:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "4736:4:13"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4730:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "4730:5:13"
																		},
																		"nativeSrc": "4730:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4730:11:13"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4704:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "4704:25:13"
																},
																"nativeSrc": "4704:38:13",
																"nodeType": "YulFunctionCall",
																"src": "4704:38:13"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4694:6:13",
																	"nodeType": "YulTypedName",
																	"src": "4694:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4835:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4835:4:13"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4841:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4841:6:13"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4849:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4849:6:13"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4789:45:13",
																	"nodeType": "YulIdentifier",
																	"src": "4789:45:13"
																},
																"nativeSrc": "4789:67:13",
																"nodeType": "YulFunctionCall",
																"src": "4789:67:13"
															},
															"nativeSrc": "4789:67:13",
															"nodeType": "YulExpressionStatement",
															"src": "4789:67:13"
														},
														{
															"nativeSrc": "4866:18:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4866:18:13",
															"value": {
																"kind": "number",
																"nativeSrc": "4883:1:13",
																"nodeType": "YulLiteral",
																"src": "4883:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4870:9:13",
																	"nodeType": "YulTypedName",
																	"src": "4870:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4894:17:13",
															"nodeType": "YulAssignment",
															"src": "4894:17:13",
															"value": {
																"kind": "number",
																"nativeSrc": "4907:4:13",
																"nodeType": "YulLiteral",
																"src": "4907:4:13",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4894:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "4894:9:13"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4958:611:13",
																		"nodeType": "YulBlock",
																		"src": "4958:611:13",
																		"statements": [
																			{
																				"nativeSrc": "4972:37:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4972:37:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4991:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "4991:6:13"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5003:4:13",
																									"nodeType": "YulLiteral",
																									"src": "5003:4:13",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4999:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "4999:3:13"
																							},
																							"nativeSrc": "4999:9:13",
																							"nodeType": "YulFunctionCall",
																							"src": "4999:9:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4987:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "4987:3:13"
																					},
																					"nativeSrc": "4987:22:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4987:22:13"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4976:7:13",
																						"nodeType": "YulTypedName",
																						"src": "4976:7:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5023:51:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5023:51:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5069:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "5069:4:13"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5037:31:13",
																						"nodeType": "YulIdentifier",
																						"src": "5037:31:13"
																					},
																					"nativeSrc": "5037:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "5037:37:13"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5027:6:13",
																						"nodeType": "YulTypedName",
																						"src": "5027:6:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5087:10:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5087:10:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5096:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5096:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5091:1:13",
																						"nodeType": "YulTypedName",
																						"src": "5091:1:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5155:163:13",
																					"nodeType": "YulBlock",
																					"src": "5155:163:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5180:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "5180:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5198:3:13",
																														"nodeType": "YulIdentifier",
																														"src": "5198:3:13"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5203:9:13",
																														"nodeType": "YulIdentifier",
																														"src": "5203:9:13"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5194:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "5194:3:13"
																												},
																												"nativeSrc": "5194:19:13",
																												"nodeType": "YulFunctionCall",
																												"src": "5194:19:13"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5188:5:13",
																											"nodeType": "YulIdentifier",
																											"src": "5188:5:13"
																										},
																										"nativeSrc": "5188:26:13",
																										"nodeType": "YulFunctionCall",
																										"src": "5188:26:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5173:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "5173:6:13"
																								},
																								"nativeSrc": "5173:42:13",
																								"nodeType": "YulFunctionCall",
																								"src": "5173:42:13"
																							},
																							"nativeSrc": "5173:42:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "5173:42:13"
																						},
																						{
																							"nativeSrc": "5232:24:13",
																							"nodeType": "YulAssignment",
																							"src": "5232:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5246:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "5246:6:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5254:1:13",
																										"nodeType": "YulLiteral",
																										"src": "5254:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5242:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "5242:3:13"
																								},
																								"nativeSrc": "5242:14:13",
																								"nodeType": "YulFunctionCall",
																								"src": "5242:14:13"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5232:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "5232:6:13"
																								}
																							]
																						},
																						{
																							"nativeSrc": "5273:31:13",
																							"nodeType": "YulAssignment",
																							"src": "5273:31:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "5290:9:13",
																										"nodeType": "YulIdentifier",
																										"src": "5290:9:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5301:2:13",
																										"nodeType": "YulLiteral",
																										"src": "5301:2:13",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5286:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "5286:3:13"
																								},
																								"nativeSrc": "5286:18:13",
																								"nodeType": "YulFunctionCall",
																								"src": "5286:18:13"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "5273:9:13",
																									"nodeType": "YulIdentifier",
																									"src": "5273:9:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5121:1:13",
																							"nodeType": "YulIdentifier",
																							"src": "5121:1:13"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5124:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "5124:7:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5118:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "5118:2:13"
																					},
																					"nativeSrc": "5118:14:13",
																					"nodeType": "YulFunctionCall",
																					"src": "5118:14:13"
																				},
																				"nativeSrc": "5110:208:13",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5133:21:13",
																					"nodeType": "YulBlock",
																					"src": "5133:21:13",
																					"statements": [
																						{
																							"nativeSrc": "5135:17:13",
																							"nodeType": "YulAssignment",
																							"src": "5135:17:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5144:1:13",
																										"nodeType": "YulIdentifier",
																										"src": "5144:1:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5147:4:13",
																										"nodeType": "YulLiteral",
																										"src": "5147:4:13",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5140:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "5140:3:13"
																								},
																								"nativeSrc": "5140:12:13",
																								"nodeType": "YulFunctionCall",
																								"src": "5140:12:13"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5135:1:13",
																									"nodeType": "YulIdentifier",
																									"src": "5135:1:13"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5114:3:13",
																					"nodeType": "YulBlock",
																					"src": "5114:3:13",
																					"statements": []
																				},
																				"src": "5110:208:13"
																			},
																			{
																				"body": {
																					"nativeSrc": "5354:156:13",
																					"nodeType": "YulBlock",
																					"src": "5354:156:13",
																					"statements": [
																						{
																							"nativeSrc": "5372:43:13",
																							"nodeType": "YulVariableDeclaration",
																							"src": "5372:43:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5399:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "5399:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5404:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "5404:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5395:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "5395:3:13"
																										},
																										"nativeSrc": "5395:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "5395:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5389:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "5389:5:13"
																								},
																								"nativeSrc": "5389:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "5389:26:13"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "5376:9:13",
																									"nodeType": "YulTypedName",
																									"src": "5376:9:13",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5439:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "5439:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "5466:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "5466:9:13"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "5481:6:13",
																														"nodeType": "YulIdentifier",
																														"src": "5481:6:13"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "5489:4:13",
																														"nodeType": "YulLiteral",
																														"src": "5489:4:13",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "5477:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "5477:3:13"
																												},
																												"nativeSrc": "5477:17:13",
																												"nodeType": "YulFunctionCall",
																												"src": "5477:17:13"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "5447:18:13",
																											"nodeType": "YulIdentifier",
																											"src": "5447:18:13"
																										},
																										"nativeSrc": "5447:48:13",
																										"nodeType": "YulFunctionCall",
																										"src": "5447:48:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5432:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "5432:6:13"
																								},
																								"nativeSrc": "5432:64:13",
																								"nodeType": "YulFunctionCall",
																								"src": "5432:64:13"
																							},
																							"nativeSrc": "5432:64:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "5432:64:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5337:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "5337:7:13"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "5346:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "5346:6:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5334:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "5334:2:13"
																					},
																					"nativeSrc": "5334:19:13",
																					"nodeType": "YulFunctionCall",
																					"src": "5334:19:13"
																				},
																				"nativeSrc": "5331:179:13",
																				"nodeType": "YulIf",
																				"src": "5331:179:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5530:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "5530:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "5544:6:13",
																											"nodeType": "YulIdentifier",
																											"src": "5544:6:13"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "5552:1:13",
																											"nodeType": "YulLiteral",
																											"src": "5552:1:13",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "5540:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "5540:3:13"
																									},
																									"nativeSrc": "5540:14:13",
																									"nodeType": "YulFunctionCall",
																									"src": "5540:14:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "5556:1:13",
																									"nodeType": "YulLiteral",
																									"src": "5556:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "5536:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "5536:3:13"
																							},
																							"nativeSrc": "5536:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "5536:22:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5523:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5523:6:13"
																					},
																					"nativeSrc": "5523:36:13",
																					"nodeType": "YulFunctionCall",
																					"src": "5523:36:13"
																				},
																				"nativeSrc": "5523:36:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "5523:36:13"
																			}
																		]
																	},
																	"nativeSrc": "4951:618:13",
																	"nodeType": "YulCase",
																	"src": "4951:618:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4956:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4956:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5586:222:13",
																		"nodeType": "YulBlock",
																		"src": "5586:222:13",
																		"statements": [
																			{
																				"nativeSrc": "5600:14:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5600:14:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5613:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5613:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5604:5:13",
																						"nodeType": "YulTypedName",
																						"src": "5604:5:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5637:67:13",
																					"nodeType": "YulBlock",
																					"src": "5637:67:13",
																					"statements": [
																						{
																							"nativeSrc": "5655:35:13",
																							"nodeType": "YulAssignment",
																							"src": "5655:35:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5674:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "5674:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5679:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "5679:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5670:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "5670:3:13"
																										},
																										"nativeSrc": "5670:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "5670:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5664:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "5664:5:13"
																								},
																								"nativeSrc": "5664:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "5664:26:13"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5655:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "5655:5:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5630:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "5630:6:13"
																				},
																				"nativeSrc": "5627:77:13",
																				"nodeType": "YulIf",
																				"src": "5627:77:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5724:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "5724:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5783:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "5783:5:13"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5790:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "5790:6:13"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5730:52:13",
																								"nodeType": "YulIdentifier",
																								"src": "5730:52:13"
																							},
																							"nativeSrc": "5730:67:13",
																							"nodeType": "YulFunctionCall",
																							"src": "5730:67:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5717:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5717:6:13"
																					},
																					"nativeSrc": "5717:81:13",
																					"nodeType": "YulFunctionCall",
																					"src": "5717:81:13"
																				},
																				"nativeSrc": "5717:81:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "5717:81:13"
																			}
																		]
																	},
																	"nativeSrc": "5578:230:13",
																	"nodeType": "YulCase",
																	"src": "5578:230:13",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4931:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4931:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4939:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4939:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4928:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "4928:2:13"
																},
																"nativeSrc": "4928:14:13",
																"nodeType": "YulFunctionCall",
																"src": "4928:14:13"
															},
															"nativeSrc": "4921:887:13",
															"nodeType": "YulSwitch",
															"src": "4921:887:13"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "4419:1395:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "4500:4:13",
														"nodeType": "YulTypedName",
														"src": "4500:4:13",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "4506:3:13",
														"nodeType": "YulTypedName",
														"src": "4506:3:13",
														"type": ""
													}
												],
												"src": "4419:1395:13"
											},
											{
												"body": {
													"nativeSrc": "5848:152:13",
													"nodeType": "YulBlock",
													"src": "5848:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5865:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5865:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5868:77:13",
																		"nodeType": "YulLiteral",
																		"src": "5868:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5858:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5858:6:13"
																},
																"nativeSrc": "5858:88:13",
																"nodeType": "YulFunctionCall",
																"src": "5858:88:13"
															},
															"nativeSrc": "5858:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "5858:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5962:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5962:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5965:4:13",
																		"nodeType": "YulLiteral",
																		"src": "5965:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5955:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5955:6:13"
																},
																"nativeSrc": "5955:15:13",
																"nodeType": "YulFunctionCall",
																"src": "5955:15:13"
															},
															"nativeSrc": "5955:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "5955:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5986:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5986:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5989:4:13",
																		"nodeType": "YulLiteral",
																		"src": "5989:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5979:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5979:6:13"
																},
																"nativeSrc": "5979:15:13",
																"nodeType": "YulFunctionCall",
																"src": "5979:15:13"
															},
															"nativeSrc": "5979:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "5979:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5820:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "5820:180:13"
											},
											{
												"body": {
													"nativeSrc": "6050:147:13",
													"nodeType": "YulBlock",
													"src": "6050:147:13",
													"statements": [
														{
															"nativeSrc": "6060:25:13",
															"nodeType": "YulAssignment",
															"src": "6060:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6083:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "6083:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6065:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "6065:17:13"
																},
																"nativeSrc": "6065:20:13",
																"nodeType": "YulFunctionCall",
																"src": "6065:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6060:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "6060:1:13"
																}
															]
														},
														{
															"nativeSrc": "6094:25:13",
															"nodeType": "YulAssignment",
															"src": "6094:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6117:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "6117:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6099:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "6099:17:13"
																},
																"nativeSrc": "6099:20:13",
																"nodeType": "YulFunctionCall",
																"src": "6099:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6094:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "6094:1:13"
																}
															]
														},
														{
															"nativeSrc": "6128:16:13",
															"nodeType": "YulAssignment",
															"src": "6128:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6139:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "6139:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6142:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "6142:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6135:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6135:3:13"
																},
																"nativeSrc": "6135:9:13",
																"nodeType": "YulFunctionCall",
																"src": "6135:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "6128:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6128:3:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6168:22:13",
																"nodeType": "YulBlock",
																"src": "6168:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6170:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "6170:16:13"
																			},
																			"nativeSrc": "6170:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6170:18:13"
																		},
																		"nativeSrc": "6170:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6170:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6160:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "6160:1:13"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6163:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6163:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6157:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "6157:2:13"
																},
																"nativeSrc": "6157:10:13",
																"nodeType": "YulFunctionCall",
																"src": "6157:10:13"
															},
															"nativeSrc": "6154:36:13",
															"nodeType": "YulIf",
															"src": "6154:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6006:191:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6037:1:13",
														"nodeType": "YulTypedName",
														"src": "6037:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6040:1:13",
														"nodeType": "YulTypedName",
														"src": "6040:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "6046:3:13",
														"nodeType": "YulTypedName",
														"src": "6046:3:13",
														"type": ""
													}
												],
												"src": "6006:191:13"
											},
											{
												"body": {
													"nativeSrc": "6268:53:13",
													"nodeType": "YulBlock",
													"src": "6268:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6285:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6285:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6308:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "6308:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "6290:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "6290:17:13"
																		},
																		"nativeSrc": "6290:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6290:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6278:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6278:6:13"
																},
																"nativeSrc": "6278:37:13",
																"nodeType": "YulFunctionCall",
																"src": "6278:37:13"
															},
															"nativeSrc": "6278:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "6278:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "6203:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6256:5:13",
														"nodeType": "YulTypedName",
														"src": "6256:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6263:3:13",
														"nodeType": "YulTypedName",
														"src": "6263:3:13",
														"type": ""
													}
												],
												"src": "6203:118:13"
											},
											{
												"body": {
													"nativeSrc": "6453:206:13",
													"nodeType": "YulBlock",
													"src": "6453:206:13",
													"statements": [
														{
															"nativeSrc": "6463:26:13",
															"nodeType": "YulAssignment",
															"src": "6463:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6475:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6475:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6486:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6486:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6471:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6471:3:13"
																},
																"nativeSrc": "6471:18:13",
																"nodeType": "YulFunctionCall",
																"src": "6471:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6463:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6463:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6543:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6543:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6556:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6556:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6567:1:13",
																				"nodeType": "YulLiteral",
																				"src": "6567:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6552:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6552:3:13"
																		},
																		"nativeSrc": "6552:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6552:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6499:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "6499:43:13"
																},
																"nativeSrc": "6499:71:13",
																"nodeType": "YulFunctionCall",
																"src": "6499:71:13"
															},
															"nativeSrc": "6499:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "6499:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6624:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6624:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6637:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6637:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6648:2:13",
																				"nodeType": "YulLiteral",
																				"src": "6648:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6633:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6633:3:13"
																		},
																		"nativeSrc": "6633:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6633:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6580:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "6580:43:13"
																},
																"nativeSrc": "6580:72:13",
																"nodeType": "YulFunctionCall",
																"src": "6580:72:13"
															},
															"nativeSrc": "6580:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "6580:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6327:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6417:9:13",
														"nodeType": "YulTypedName",
														"src": "6417:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6429:6:13",
														"nodeType": "YulTypedName",
														"src": "6429:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6437:6:13",
														"nodeType": "YulTypedName",
														"src": "6437:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6448:4:13",
														"nodeType": "YulTypedName",
														"src": "6448:4:13",
														"type": ""
													}
												],
												"src": "6327:332:13"
											},
											{
												"body": {
													"nativeSrc": "6847:371:13",
													"nodeType": "YulBlock",
													"src": "6847:371:13",
													"statements": [
														{
															"nativeSrc": "6857:27:13",
															"nodeType": "YulAssignment",
															"src": "6857:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6869:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6869:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6880:3:13",
																		"nodeType": "YulLiteral",
																		"src": "6880:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6865:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6865:3:13"
																},
																"nativeSrc": "6865:19:13",
																"nodeType": "YulFunctionCall",
																"src": "6865:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6857:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6857:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6938:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6938:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6951:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6951:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6962:1:13",
																				"nodeType": "YulLiteral",
																				"src": "6962:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6947:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6947:3:13"
																		},
																		"nativeSrc": "6947:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6947:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6894:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "6894:43:13"
																},
																"nativeSrc": "6894:71:13",
																"nodeType": "YulFunctionCall",
																"src": "6894:71:13"
															},
															"nativeSrc": "6894:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "6894:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7019:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7019:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7032:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7032:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7043:2:13",
																				"nodeType": "YulLiteral",
																				"src": "7043:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7028:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7028:3:13"
																		},
																		"nativeSrc": "7028:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7028:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6975:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "6975:43:13"
																},
																"nativeSrc": "6975:72:13",
																"nodeType": "YulFunctionCall",
																"src": "6975:72:13"
															},
															"nativeSrc": "6975:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "6975:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7101:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7101:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7114:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7114:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7125:2:13",
																				"nodeType": "YulLiteral",
																				"src": "7125:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7110:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7110:3:13"
																		},
																		"nativeSrc": "7110:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7110:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7057:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "7057:43:13"
																},
																"nativeSrc": "7057:72:13",
																"nodeType": "YulFunctionCall",
																"src": "7057:72:13"
															},
															"nativeSrc": "7057:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "7057:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "7183:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7183:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7196:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7196:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7207:2:13",
																				"nodeType": "YulLiteral",
																				"src": "7207:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7192:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7192:3:13"
																		},
																		"nativeSrc": "7192:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7192:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7139:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "7139:43:13"
																},
																"nativeSrc": "7139:72:13",
																"nodeType": "YulFunctionCall",
																"src": "7139:72:13"
															},
															"nativeSrc": "7139:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "7139:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6665:553:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6795:9:13",
														"nodeType": "YulTypedName",
														"src": "6795:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6807:6:13",
														"nodeType": "YulTypedName",
														"src": "6807:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6815:6:13",
														"nodeType": "YulTypedName",
														"src": "6815:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6823:6:13",
														"nodeType": "YulTypedName",
														"src": "6823:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6831:6:13",
														"nodeType": "YulTypedName",
														"src": "6831:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6842:4:13",
														"nodeType": "YulTypedName",
														"src": "6842:4:13",
														"type": ""
													}
												],
												"src": "6665:553:13"
											},
											{
												"body": {
													"nativeSrc": "7267:190:13",
													"nodeType": "YulBlock",
													"src": "7267:190:13",
													"statements": [
														{
															"nativeSrc": "7277:33:13",
															"nodeType": "YulAssignment",
															"src": "7277:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7304:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "7304:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7286:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "7286:17:13"
																},
																"nativeSrc": "7286:24:13",
																"nodeType": "YulFunctionCall",
																"src": "7286:24:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7277:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "7277:5:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7400:22:13",
																"nodeType": "YulBlock",
																"src": "7400:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7402:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "7402:16:13"
																			},
																			"nativeSrc": "7402:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7402:18:13"
																		},
																		"nativeSrc": "7402:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7402:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7325:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "7325:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7332:66:13",
																		"nodeType": "YulLiteral",
																		"src": "7332:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7322:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "7322:2:13"
																},
																"nativeSrc": "7322:77:13",
																"nodeType": "YulFunctionCall",
																"src": "7322:77:13"
															},
															"nativeSrc": "7319:103:13",
															"nodeType": "YulIf",
															"src": "7319:103:13"
														},
														{
															"nativeSrc": "7431:20:13",
															"nodeType": "YulAssignment",
															"src": "7431:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7442:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "7442:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7449:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7449:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7438:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7438:3:13"
																},
																"nativeSrc": "7438:13:13",
																"nodeType": "YulFunctionCall",
																"src": "7438:13:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "7431:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7431:3:13"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "7224:233:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7253:5:13",
														"nodeType": "YulTypedName",
														"src": "7253:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "7263:3:13",
														"nodeType": "YulTypedName",
														"src": "7263:3:13",
														"type": ""
													}
												],
												"src": "7224:233:13"
											},
											{
												"body": {
													"nativeSrc": "7537:40:13",
													"nodeType": "YulBlock",
													"src": "7537:40:13",
													"statements": [
														{
															"nativeSrc": "7548:22:13",
															"nodeType": "YulAssignment",
															"src": "7548:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7564:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "7564:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7558:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "7558:5:13"
																},
																"nativeSrc": "7558:12:13",
																"nodeType": "YulFunctionCall",
																"src": "7558:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7548:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7548:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "7463:114:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7520:5:13",
														"nodeType": "YulTypedName",
														"src": "7520:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7530:6:13",
														"nodeType": "YulTypedName",
														"src": "7530:6:13",
														"type": ""
													}
												],
												"src": "7463:114:13"
											},
											{
												"body": {
													"nativeSrc": "7694:73:13",
													"nodeType": "YulBlock",
													"src": "7694:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7711:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7711:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7716:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7716:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7704:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7704:6:13"
																},
																"nativeSrc": "7704:19:13",
																"nodeType": "YulFunctionCall",
																"src": "7704:19:13"
															},
															"nativeSrc": "7704:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "7704:19:13"
														},
														{
															"nativeSrc": "7732:29:13",
															"nodeType": "YulAssignment",
															"src": "7732:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7751:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7751:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7756:4:13",
																		"nodeType": "YulLiteral",
																		"src": "7756:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7747:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7747:3:13"
																},
																"nativeSrc": "7747:14:13",
																"nodeType": "YulFunctionCall",
																"src": "7747:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "7732:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "7732:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "7583:184:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7666:3:13",
														"nodeType": "YulTypedName",
														"src": "7666:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7671:6:13",
														"nodeType": "YulTypedName",
														"src": "7671:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "7682:11:13",
														"nodeType": "YulTypedName",
														"src": "7682:11:13",
														"type": ""
													}
												],
												"src": "7583:184:13"
											},
											{
												"body": {
													"nativeSrc": "7845:60:13",
													"nodeType": "YulBlock",
													"src": "7845:60:13",
													"statements": [
														{
															"nativeSrc": "7855:11:13",
															"nodeType": "YulAssignment",
															"src": "7855:11:13",
															"value": {
																"name": "ptr",
																"nativeSrc": "7863:3:13",
																"nodeType": "YulIdentifier",
																"src": "7863:3:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7855:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7855:4:13"
																}
															]
														},
														{
															"nativeSrc": "7876:22:13",
															"nodeType": "YulAssignment",
															"src": "7876:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "7888:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7888:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7893:4:13",
																		"nodeType": "YulLiteral",
																		"src": "7893:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7884:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7884:3:13"
																},
																"nativeSrc": "7884:14:13",
																"nodeType": "YulFunctionCall",
																"src": "7884:14:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7876:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7876:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "7773:132:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "7832:3:13",
														"nodeType": "YulTypedName",
														"src": "7832:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "7840:4:13",
														"nodeType": "YulTypedName",
														"src": "7840:4:13",
														"type": ""
													}
												],
												"src": "7773:132:13"
											},
											{
												"body": {
													"nativeSrc": "7966:53:13",
													"nodeType": "YulBlock",
													"src": "7966:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7983:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7983:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8006:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "8006:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "7988:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "7988:17:13"
																		},
																		"nativeSrc": "7988:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7988:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7976:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7976:6:13"
																},
																"nativeSrc": "7976:37:13",
																"nodeType": "YulFunctionCall",
																"src": "7976:37:13"
															},
															"nativeSrc": "7976:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "7976:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "7911:108:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7954:5:13",
														"nodeType": "YulTypedName",
														"src": "7954:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7961:3:13",
														"nodeType": "YulTypedName",
														"src": "7961:3:13",
														"type": ""
													}
												],
												"src": "7911:108:13"
											},
											{
												"body": {
													"nativeSrc": "8105:99:13",
													"nodeType": "YulBlock",
													"src": "8105:99:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8149:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8149:6:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "8157:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8157:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nativeSrc": "8115:33:13",
																	"nodeType": "YulIdentifier",
																	"src": "8115:33:13"
																},
																"nativeSrc": "8115:46:13",
																"nodeType": "YulFunctionCall",
																"src": "8115:46:13"
															},
															"nativeSrc": "8115:46:13",
															"nodeType": "YulExpressionStatement",
															"src": "8115:46:13"
														},
														{
															"nativeSrc": "8170:28:13",
															"nodeType": "YulAssignment",
															"src": "8170:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8188:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8188:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8193:4:13",
																		"nodeType": "YulLiteral",
																		"src": "8193:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8184:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8184:3:13"
																},
																"nativeSrc": "8184:14:13",
																"nodeType": "YulFunctionCall",
																"src": "8184:14:13"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "8170:10:13",
																	"nodeType": "YulIdentifier",
																	"src": "8170:10:13"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nativeSrc": "8025:179:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "8078:6:13",
														"nodeType": "YulTypedName",
														"src": "8078:6:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8086:3:13",
														"nodeType": "YulTypedName",
														"src": "8086:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "8094:10:13",
														"nodeType": "YulTypedName",
														"src": "8094:10:13",
														"type": ""
													}
												],
												"src": "8025:179:13"
											},
											{
												"body": {
													"nativeSrc": "8285:38:13",
													"nodeType": "YulBlock",
													"src": "8285:38:13",
													"statements": [
														{
															"nativeSrc": "8295:22:13",
															"nodeType": "YulAssignment",
															"src": "8295:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "8307:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8307:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8312:4:13",
																		"nodeType": "YulLiteral",
																		"src": "8312:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8303:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8303:3:13"
																},
																"nativeSrc": "8303:14:13",
																"nodeType": "YulFunctionCall",
																"src": "8303:14:13"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "8295:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8295:4:13"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "8210:113:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "8272:3:13",
														"nodeType": "YulTypedName",
														"src": "8272:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "8280:4:13",
														"nodeType": "YulTypedName",
														"src": "8280:4:13",
														"type": ""
													}
												],
												"src": "8210:113:13"
											},
											{
												"body": {
													"nativeSrc": "8483:608:13",
													"nodeType": "YulBlock",
													"src": "8483:608:13",
													"statements": [
														{
															"nativeSrc": "8493:68:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8493:68:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8555:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "8555:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "8507:47:13",
																	"nodeType": "YulIdentifier",
																	"src": "8507:47:13"
																},
																"nativeSrc": "8507:54:13",
																"nodeType": "YulFunctionCall",
																"src": "8507:54:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8497:6:13",
																	"nodeType": "YulTypedName",
																	"src": "8497:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8570:93:13",
															"nodeType": "YulAssignment",
															"src": "8570:93:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8651:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8651:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8656:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8656:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "8577:73:13",
																	"nodeType": "YulIdentifier",
																	"src": "8577:73:13"
																},
																"nativeSrc": "8577:86:13",
																"nodeType": "YulFunctionCall",
																"src": "8577:86:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8570:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8570:3:13"
																}
															]
														},
														{
															"nativeSrc": "8672:71:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8672:71:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8737:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "8737:5:13"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "8687:49:13",
																	"nodeType": "YulIdentifier",
																	"src": "8687:49:13"
																},
																"nativeSrc": "8687:56:13",
																"nodeType": "YulFunctionCall",
																"src": "8687:56:13"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "8676:7:13",
																	"nodeType": "YulTypedName",
																	"src": "8676:7:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8752:21:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8752:21:13",
															"value": {
																"name": "baseRef",
																"nativeSrc": "8766:7:13",
																"nodeType": "YulIdentifier",
																"src": "8766:7:13"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "8756:6:13",
																	"nodeType": "YulTypedName",
																	"src": "8756:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8842:224:13",
																"nodeType": "YulBlock",
																"src": "8842:224:13",
																"statements": [
																	{
																		"nativeSrc": "8856:34:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8856:34:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "8883:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "8883:6:13"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8877:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "8877:5:13"
																			},
																			"nativeSrc": "8877:13:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8877:13:13"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "8860:13:13",
																				"nodeType": "YulTypedName",
																				"src": "8860:13:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "8903:70:13",
																		"nodeType": "YulAssignment",
																		"src": "8903:70:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "8954:13:13",
																					"nodeType": "YulIdentifier",
																					"src": "8954:13:13"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "8969:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "8969:3:13"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nativeSrc": "8910:43:13",
																				"nodeType": "YulIdentifier",
																				"src": "8910:43:13"
																			},
																			"nativeSrc": "8910:63:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8910:63:13"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "8903:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "8903:3:13"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8986:70:13",
																		"nodeType": "YulAssignment",
																		"src": "8986:70:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "9049:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "9049:6:13"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nativeSrc": "8996:52:13",
																				"nodeType": "YulIdentifier",
																				"src": "8996:52:13"
																			},
																			"nativeSrc": "8996:60:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8996:60:13"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "8986:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8986:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "8804:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "8804:1:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8807:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8807:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "8801:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "8801:2:13"
																},
																"nativeSrc": "8801:13:13",
																"nodeType": "YulFunctionCall",
																"src": "8801:13:13"
															},
															"nativeSrc": "8782:284:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "8815:18:13",
																"nodeType": "YulBlock",
																"src": "8815:18:13",
																"statements": [
																	{
																		"nativeSrc": "8817:14:13",
																		"nodeType": "YulAssignment",
																		"src": "8817:14:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "8826:1:13",
																					"nodeType": "YulIdentifier",
																					"src": "8826:1:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8829:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8829:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8822:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "8822:3:13"
																			},
																			"nativeSrc": "8822:9:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8822:9:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "8817:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "8817:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "8786:14:13",
																"nodeType": "YulBlock",
																"src": "8786:14:13",
																"statements": [
																	{
																		"nativeSrc": "8788:10:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8788:10:13",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8797:1:13",
																			"nodeType": "YulLiteral",
																			"src": "8797:1:13",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "8792:1:13",
																				"nodeType": "YulTypedName",
																				"src": "8792:1:13",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "8782:284:13"
														},
														{
															"nativeSrc": "9075:10:13",
															"nodeType": "YulAssignment",
															"src": "9075:10:13",
															"value": {
																"name": "pos",
																"nativeSrc": "9082:3:13",
																"nodeType": "YulIdentifier",
																"src": "9082:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9075:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9075:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "8359:732:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8462:5:13",
														"nodeType": "YulTypedName",
														"src": "8462:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8469:3:13",
														"nodeType": "YulTypedName",
														"src": "8469:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8478:3:13",
														"nodeType": "YulTypedName",
														"src": "8478:3:13",
														"type": ""
													}
												],
												"src": "8359:732:13"
											},
											{
												"body": {
													"nativeSrc": "9323:408:13",
													"nodeType": "YulBlock",
													"src": "9323:408:13",
													"statements": [
														{
															"nativeSrc": "9333:26:13",
															"nodeType": "YulAssignment",
															"src": "9333:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9345:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "9345:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9356:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9356:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9341:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9341:3:13"
																},
																"nativeSrc": "9341:18:13",
																"nodeType": "YulFunctionCall",
																"src": "9341:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9333:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9333:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9380:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9380:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9391:1:13",
																				"nodeType": "YulLiteral",
																				"src": "9391:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9376:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9376:3:13"
																		},
																		"nativeSrc": "9376:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9376:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9399:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "9399:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9405:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9405:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9395:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9395:3:13"
																		},
																		"nativeSrc": "9395:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9395:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9369:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9369:6:13"
																},
																"nativeSrc": "9369:47:13",
																"nodeType": "YulFunctionCall",
																"src": "9369:47:13"
															},
															"nativeSrc": "9369:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "9369:47:13"
														},
														{
															"nativeSrc": "9425:116:13",
															"nodeType": "YulAssignment",
															"src": "9425:116:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9527:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9527:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "9536:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "9536:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "9433:93:13",
																	"nodeType": "YulIdentifier",
																	"src": "9433:93:13"
																},
																"nativeSrc": "9433:108:13",
																"nodeType": "YulFunctionCall",
																"src": "9433:108:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9425:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9425:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9562:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9562:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9573:2:13",
																				"nodeType": "YulLiteral",
																				"src": "9573:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9558:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9558:3:13"
																		},
																		"nativeSrc": "9558:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9558:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9582:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "9582:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9588:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9588:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9578:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9578:3:13"
																		},
																		"nativeSrc": "9578:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9578:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9551:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9551:6:13"
																},
																"nativeSrc": "9551:48:13",
																"nodeType": "YulFunctionCall",
																"src": "9551:48:13"
															},
															"nativeSrc": "9551:48:13",
															"nodeType": "YulExpressionStatement",
															"src": "9551:48:13"
														},
														{
															"nativeSrc": "9608:116:13",
															"nodeType": "YulAssignment",
															"src": "9608:116:13",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9710:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9710:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "9719:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "9719:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "9616:93:13",
																	"nodeType": "YulIdentifier",
																	"src": "9616:93:13"
																},
																"nativeSrc": "9616:108:13",
																"nodeType": "YulFunctionCall",
																"src": "9616:108:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9608:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9608:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "9097:634:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9287:9:13",
														"nodeType": "YulTypedName",
														"src": "9287:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9299:6:13",
														"nodeType": "YulTypedName",
														"src": "9299:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9307:6:13",
														"nodeType": "YulTypedName",
														"src": "9307:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9318:4:13",
														"nodeType": "YulTypedName",
														"src": "9318:4:13",
														"type": ""
													}
												],
												"src": "9097:634:13"
											},
											{
												"body": {
													"nativeSrc": "9795:40:13",
													"nodeType": "YulBlock",
													"src": "9795:40:13",
													"statements": [
														{
															"nativeSrc": "9806:22:13",
															"nodeType": "YulAssignment",
															"src": "9806:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9822:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "9822:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9816:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "9816:5:13"
																},
																"nativeSrc": "9816:12:13",
																"nodeType": "YulFunctionCall",
																"src": "9816:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9806:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9806:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "9737:98:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9778:5:13",
														"nodeType": "YulTypedName",
														"src": "9778:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "9788:6:13",
														"nodeType": "YulTypedName",
														"src": "9788:6:13",
														"type": ""
													}
												],
												"src": "9737:98:13"
											},
											{
												"body": {
													"nativeSrc": "9936:73:13",
													"nodeType": "YulBlock",
													"src": "9936:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9953:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9953:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9958:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9958:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9946:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9946:6:13"
																},
																"nativeSrc": "9946:19:13",
																"nodeType": "YulFunctionCall",
																"src": "9946:19:13"
															},
															"nativeSrc": "9946:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "9946:19:13"
														},
														{
															"nativeSrc": "9974:29:13",
															"nodeType": "YulAssignment",
															"src": "9974:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9993:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9993:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9998:4:13",
																		"nodeType": "YulLiteral",
																		"src": "9998:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9989:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9989:3:13"
																},
																"nativeSrc": "9989:14:13",
																"nodeType": "YulFunctionCall",
																"src": "9989:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9974:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "9974:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "9841:168:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9908:3:13",
														"nodeType": "YulTypedName",
														"src": "9908:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9913:6:13",
														"nodeType": "YulTypedName",
														"src": "9913:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9924:11:13",
														"nodeType": "YulTypedName",
														"src": "9924:11:13",
														"type": ""
													}
												],
												"src": "9841:168:13"
											},
											{
												"body": {
													"nativeSrc": "10077:184:13",
													"nodeType": "YulBlock",
													"src": "10077:184:13",
													"statements": [
														{
															"nativeSrc": "10087:10:13",
															"nodeType": "YulVariableDeclaration",
															"src": "10087:10:13",
															"value": {
																"kind": "number",
																"nativeSrc": "10096:1:13",
																"nodeType": "YulLiteral",
																"src": "10096:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "10091:1:13",
																	"nodeType": "YulTypedName",
																	"src": "10091:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10156:63:13",
																"nodeType": "YulBlock",
																"src": "10156:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "10181:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "10181:3:13"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "10186:1:13",
																							"nodeType": "YulIdentifier",
																							"src": "10186:1:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "10177:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "10177:3:13"
																					},
																					"nativeSrc": "10177:11:13",
																					"nodeType": "YulFunctionCall",
																					"src": "10177:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "10200:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "10200:3:13"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "10205:1:13",
																									"nodeType": "YulIdentifier",
																									"src": "10205:1:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "10196:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "10196:3:13"
																							},
																							"nativeSrc": "10196:11:13",
																							"nodeType": "YulFunctionCall",
																							"src": "10196:11:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "10190:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "10190:5:13"
																					},
																					"nativeSrc": "10190:18:13",
																					"nodeType": "YulFunctionCall",
																					"src": "10190:18:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "10170:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10170:6:13"
																			},
																			"nativeSrc": "10170:39:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10170:39:13"
																		},
																		"nativeSrc": "10170:39:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10170:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "10117:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "10117:1:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10120:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10120:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "10114:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "10114:2:13"
																},
																"nativeSrc": "10114:13:13",
																"nodeType": "YulFunctionCall",
																"src": "10114:13:13"
															},
															"nativeSrc": "10106:113:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "10128:19:13",
																"nodeType": "YulBlock",
																"src": "10128:19:13",
																"statements": [
																	{
																		"nativeSrc": "10130:15:13",
																		"nodeType": "YulAssignment",
																		"src": "10130:15:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "10139:1:13",
																					"nodeType": "YulIdentifier",
																					"src": "10139:1:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10142:2:13",
																					"nodeType": "YulLiteral",
																					"src": "10142:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "10135:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "10135:3:13"
																			},
																			"nativeSrc": "10135:10:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10135:10:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "10130:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "10130:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "10110:3:13",
																"nodeType": "YulBlock",
																"src": "10110:3:13",
																"statements": []
															},
															"src": "10106:113:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "10239:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "10239:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "10244:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10244:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10235:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10235:3:13"
																		},
																		"nativeSrc": "10235:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10235:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10253:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10253:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10228:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10228:6:13"
																},
																"nativeSrc": "10228:27:13",
																"nodeType": "YulFunctionCall",
																"src": "10228:27:13"
															},
															"nativeSrc": "10228:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "10228:27:13"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "10015:246:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "10059:3:13",
														"nodeType": "YulTypedName",
														"src": "10059:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "10064:3:13",
														"nodeType": "YulTypedName",
														"src": "10064:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10069:6:13",
														"nodeType": "YulTypedName",
														"src": "10069:6:13",
														"type": ""
													}
												],
												"src": "10015:246:13"
											},
											{
												"body": {
													"nativeSrc": "10315:54:13",
													"nodeType": "YulBlock",
													"src": "10315:54:13",
													"statements": [
														{
															"nativeSrc": "10325:38:13",
															"nodeType": "YulAssignment",
															"src": "10325:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10343:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "10343:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10350:2:13",
																				"nodeType": "YulLiteral",
																				"src": "10350:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10339:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10339:3:13"
																		},
																		"nativeSrc": "10339:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10339:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10359:2:13",
																				"nodeType": "YulLiteral",
																				"src": "10359:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "10355:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10355:3:13"
																		},
																		"nativeSrc": "10355:7:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10355:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10335:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10335:3:13"
																},
																"nativeSrc": "10335:28:13",
																"nodeType": "YulFunctionCall",
																"src": "10335:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "10325:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10325:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "10267:102:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10298:5:13",
														"nodeType": "YulTypedName",
														"src": "10298:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "10308:6:13",
														"nodeType": "YulTypedName",
														"src": "10308:6:13",
														"type": ""
													}
												],
												"src": "10267:102:13"
											},
											{
												"body": {
													"nativeSrc": "10465:283:13",
													"nodeType": "YulBlock",
													"src": "10465:283:13",
													"statements": [
														{
															"nativeSrc": "10475:52:13",
															"nodeType": "YulVariableDeclaration",
															"src": "10475:52:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10521:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "10521:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "10489:31:13",
																	"nodeType": "YulIdentifier",
																	"src": "10489:31:13"
																},
																"nativeSrc": "10489:38:13",
																"nodeType": "YulFunctionCall",
																"src": "10489:38:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10479:6:13",
																	"nodeType": "YulTypedName",
																	"src": "10479:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10536:77:13",
															"nodeType": "YulAssignment",
															"src": "10536:77:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10601:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10601:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10606:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10606:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "10543:57:13",
																	"nodeType": "YulIdentifier",
																	"src": "10543:57:13"
																},
																"nativeSrc": "10543:70:13",
																"nodeType": "YulFunctionCall",
																"src": "10543:70:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10536:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10536:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10661:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "10661:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10668:4:13",
																				"nodeType": "YulLiteral",
																				"src": "10668:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10657:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10657:3:13"
																		},
																		"nativeSrc": "10657:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10657:16:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "10675:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10675:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10680:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10680:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "10622:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "10622:34:13"
																},
																"nativeSrc": "10622:65:13",
																"nodeType": "YulFunctionCall",
																"src": "10622:65:13"
															},
															"nativeSrc": "10622:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "10622:65:13"
														},
														{
															"nativeSrc": "10696:46:13",
															"nodeType": "YulAssignment",
															"src": "10696:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10707:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10707:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10734:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10734:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "10712:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "10712:21:13"
																		},
																		"nativeSrc": "10712:29:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10712:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10703:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10703:3:13"
																},
																"nativeSrc": "10703:39:13",
																"nodeType": "YulFunctionCall",
																"src": "10703:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10696:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10696:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "10375:373:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10446:5:13",
														"nodeType": "YulTypedName",
														"src": "10446:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10453:3:13",
														"nodeType": "YulTypedName",
														"src": "10453:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10461:3:13",
														"nodeType": "YulTypedName",
														"src": "10461:3:13",
														"type": ""
													}
												],
												"src": "10375:373:13"
											},
											{
												"body": {
													"nativeSrc": "10982:523:13",
													"nodeType": "YulBlock",
													"src": "10982:523:13",
													"statements": [
														{
															"nativeSrc": "10992:27:13",
															"nodeType": "YulAssignment",
															"src": "10992:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11004:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "11004:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11015:3:13",
																		"nodeType": "YulLiteral",
																		"src": "11015:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11000:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11000:3:13"
																},
																"nativeSrc": "11000:19:13",
																"nodeType": "YulFunctionCall",
																"src": "11000:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10992:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10992:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11073:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11073:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11086:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11086:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11097:1:13",
																				"nodeType": "YulLiteral",
																				"src": "11097:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11082:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11082:3:13"
																		},
																		"nativeSrc": "11082:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11082:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11029:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "11029:43:13"
																},
																"nativeSrc": "11029:71:13",
																"nodeType": "YulFunctionCall",
																"src": "11029:71:13"
															},
															"nativeSrc": "11029:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "11029:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11154:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11154:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11167:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11167:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11178:2:13",
																				"nodeType": "YulLiteral",
																				"src": "11178:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11163:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11163:3:13"
																		},
																		"nativeSrc": "11163:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11163:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11110:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "11110:43:13"
																},
																"nativeSrc": "11110:72:13",
																"nodeType": "YulFunctionCall",
																"src": "11110:72:13"
															},
															"nativeSrc": "11110:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "11110:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11236:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11236:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11249:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11249:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11260:2:13",
																				"nodeType": "YulLiteral",
																				"src": "11260:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11245:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11245:3:13"
																		},
																		"nativeSrc": "11245:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11245:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11192:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "11192:43:13"
																},
																"nativeSrc": "11192:72:13",
																"nodeType": "YulFunctionCall",
																"src": "11192:72:13"
															},
															"nativeSrc": "11192:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "11192:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "11318:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11318:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11331:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11331:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11342:2:13",
																				"nodeType": "YulLiteral",
																				"src": "11342:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11327:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11327:3:13"
																		},
																		"nativeSrc": "11327:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11327:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11274:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "11274:43:13"
																},
																"nativeSrc": "11274:72:13",
																"nodeType": "YulFunctionCall",
																"src": "11274:72:13"
															},
															"nativeSrc": "11274:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "11274:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11367:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11367:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11378:3:13",
																				"nodeType": "YulLiteral",
																				"src": "11378:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11363:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11363:3:13"
																		},
																		"nativeSrc": "11363:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11363:19:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11388:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "11388:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11394:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11394:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11384:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11384:3:13"
																		},
																		"nativeSrc": "11384:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11384:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11356:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11356:6:13"
																},
																"nativeSrc": "11356:49:13",
																"nodeType": "YulFunctionCall",
																"src": "11356:49:13"
															},
															"nativeSrc": "11356:49:13",
															"nodeType": "YulExpressionStatement",
															"src": "11356:49:13"
														},
														{
															"nativeSrc": "11414:84:13",
															"nodeType": "YulAssignment",
															"src": "11414:84:13",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "11484:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11484:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "11493:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "11493:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "11422:61:13",
																	"nodeType": "YulIdentifier",
																	"src": "11422:61:13"
																},
																"nativeSrc": "11422:76:13",
																"nodeType": "YulFunctionCall",
																"src": "11422:76:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11414:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11414:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "10754:751:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10922:9:13",
														"nodeType": "YulTypedName",
														"src": "10922:9:13",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "10934:6:13",
														"nodeType": "YulTypedName",
														"src": "10934:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "10942:6:13",
														"nodeType": "YulTypedName",
														"src": "10942:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10950:6:13",
														"nodeType": "YulTypedName",
														"src": "10950:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10958:6:13",
														"nodeType": "YulTypedName",
														"src": "10958:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10966:6:13",
														"nodeType": "YulTypedName",
														"src": "10966:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10977:4:13",
														"nodeType": "YulTypedName",
														"src": "10977:4:13",
														"type": ""
													}
												],
												"src": "10754:751:13"
											},
											{
												"body": {
													"nativeSrc": "11551:35:13",
													"nodeType": "YulBlock",
													"src": "11551:35:13",
													"statements": [
														{
															"nativeSrc": "11561:19:13",
															"nodeType": "YulAssignment",
															"src": "11561:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11577:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11577:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11571:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "11571:5:13"
																},
																"nativeSrc": "11571:9:13",
																"nodeType": "YulFunctionCall",
																"src": "11571:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "11561:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11561:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "11511:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "11544:6:13",
														"nodeType": "YulTypedName",
														"src": "11544:6:13",
														"type": ""
													}
												],
												"src": "11511:75:13"
											},
											{
												"body": {
													"nativeSrc": "11681:28:13",
													"nodeType": "YulBlock",
													"src": "11681:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11698:1:13",
																		"nodeType": "YulLiteral",
																		"src": "11698:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11701:1:13",
																		"nodeType": "YulLiteral",
																		"src": "11701:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11691:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11691:6:13"
																},
																"nativeSrc": "11691:12:13",
																"nodeType": "YulFunctionCall",
																"src": "11691:12:13"
															},
															"nativeSrc": "11691:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "11691:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "11592:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "11592:117:13"
											},
											{
												"body": {
													"nativeSrc": "11804:28:13",
													"nodeType": "YulBlock",
													"src": "11804:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11821:1:13",
																		"nodeType": "YulLiteral",
																		"src": "11821:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11824:1:13",
																		"nodeType": "YulLiteral",
																		"src": "11824:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11814:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11814:6:13"
																},
																"nativeSrc": "11814:12:13",
																"nodeType": "YulFunctionCall",
																"src": "11814:12:13"
															},
															"nativeSrc": "11814:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "11814:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "11715:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "11715:117:13"
											},
											{
												"body": {
													"nativeSrc": "11882:105:13",
													"nodeType": "YulBlock",
													"src": "11882:105:13",
													"statements": [
														{
															"nativeSrc": "11892:89:13",
															"nodeType": "YulAssignment",
															"src": "11892:89:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11907:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "11907:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11914:66:13",
																		"nodeType": "YulLiteral",
																		"src": "11914:66:13",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "11903:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11903:3:13"
																},
																"nativeSrc": "11903:78:13",
																"nodeType": "YulFunctionCall",
																"src": "11903:78:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "11892:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "11892:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "11838:149:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11864:5:13",
														"nodeType": "YulTypedName",
														"src": "11864:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "11874:7:13",
														"nodeType": "YulTypedName",
														"src": "11874:7:13",
														"type": ""
													}
												],
												"src": "11838:149:13"
											},
											{
												"body": {
													"nativeSrc": "12035:78:13",
													"nodeType": "YulBlock",
													"src": "12035:78:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "12091:16:13",
																"nodeType": "YulBlock",
																"src": "12091:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12100:1:13",
																					"nodeType": "YulLiteral",
																					"src": "12100:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12103:1:13",
																					"nodeType": "YulLiteral",
																					"src": "12103:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12093:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "12093:6:13"
																			},
																			"nativeSrc": "12093:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "12093:12:13"
																		},
																		"nativeSrc": "12093:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "12093:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12058:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "12058:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12082:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "12082:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "12065:16:13",
																					"nodeType": "YulIdentifier",
																					"src": "12065:16:13"
																				},
																				"nativeSrc": "12065:23:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12065:23:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "12055:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "12055:2:13"
																		},
																		"nativeSrc": "12055:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12055:34:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12048:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12048:6:13"
																},
																"nativeSrc": "12048:42:13",
																"nodeType": "YulFunctionCall",
																"src": "12048:42:13"
															},
															"nativeSrc": "12045:62:13",
															"nodeType": "YulIf",
															"src": "12045:62:13"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "11993:120:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12028:5:13",
														"nodeType": "YulTypedName",
														"src": "12028:5:13",
														"type": ""
													}
												],
												"src": "11993:120:13"
											},
											{
												"body": {
													"nativeSrc": "12181:79:13",
													"nodeType": "YulBlock",
													"src": "12181:79:13",
													"statements": [
														{
															"nativeSrc": "12191:22:13",
															"nodeType": "YulAssignment",
															"src": "12191:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12206:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12206:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12200:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "12200:5:13"
																},
																"nativeSrc": "12200:13:13",
																"nodeType": "YulFunctionCall",
																"src": "12200:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12191:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "12191:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12248:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "12248:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "12222:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "12222:25:13"
																},
																"nativeSrc": "12222:32:13",
																"nodeType": "YulFunctionCall",
																"src": "12222:32:13"
															},
															"nativeSrc": "12222:32:13",
															"nodeType": "YulExpressionStatement",
															"src": "12222:32:13"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "12119:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12159:6:13",
														"nodeType": "YulTypedName",
														"src": "12159:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12167:3:13",
														"nodeType": "YulTypedName",
														"src": "12167:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12175:5:13",
														"nodeType": "YulTypedName",
														"src": "12175:5:13",
														"type": ""
													}
												],
												"src": "12119:141:13"
											},
											{
												"body": {
													"nativeSrc": "12342:273:13",
													"nodeType": "YulBlock",
													"src": "12342:273:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "12388:83:13",
																"nodeType": "YulBlock",
																"src": "12388:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12390:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "12390:77:13"
																			},
																			"nativeSrc": "12390:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "12390:79:13"
																		},
																		"nativeSrc": "12390:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "12390:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12363:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "12363:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12372:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12372:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12359:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12359:3:13"
																		},
																		"nativeSrc": "12359:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12359:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12384:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12384:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12355:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12355:3:13"
																},
																"nativeSrc": "12355:32:13",
																"nodeType": "YulFunctionCall",
																"src": "12355:32:13"
															},
															"nativeSrc": "12352:119:13",
															"nodeType": "YulIf",
															"src": "12352:119:13"
														},
														{
															"nativeSrc": "12481:127:13",
															"nodeType": "YulBlock",
															"src": "12481:127:13",
															"statements": [
																{
																	"nativeSrc": "12496:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12496:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12510:1:13",
																		"nodeType": "YulLiteral",
																		"src": "12510:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12500:6:13",
																			"nodeType": "YulTypedName",
																			"src": "12500:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12525:73:13",
																	"nodeType": "YulAssignment",
																	"src": "12525:73:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12570:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "12570:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12581:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "12581:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12566:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "12566:3:13"
																				},
																				"nativeSrc": "12566:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12566:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12590:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "12590:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "12535:30:13",
																			"nodeType": "YulIdentifier",
																			"src": "12535:30:13"
																		},
																		"nativeSrc": "12535:63:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12535:63:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12525:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "12525:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "12266:349:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12312:9:13",
														"nodeType": "YulTypedName",
														"src": "12312:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12323:7:13",
														"nodeType": "YulTypedName",
														"src": "12323:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12335:6:13",
														"nodeType": "YulTypedName",
														"src": "12335:6:13",
														"type": ""
													}
												],
												"src": "12266:349:13"
											},
											{
												"body": {
													"nativeSrc": "12949:725:13",
													"nodeType": "YulBlock",
													"src": "12949:725:13",
													"statements": [
														{
															"nativeSrc": "12959:27:13",
															"nodeType": "YulAssignment",
															"src": "12959:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12971:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "12971:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12982:3:13",
																		"nodeType": "YulLiteral",
																		"src": "12982:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12967:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12967:3:13"
																},
																"nativeSrc": "12967:19:13",
																"nodeType": "YulFunctionCall",
																"src": "12967:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12959:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "12959:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13040:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13040:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13053:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13053:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13064:1:13",
																				"nodeType": "YulLiteral",
																				"src": "13064:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13049:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13049:3:13"
																		},
																		"nativeSrc": "13049:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13049:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12996:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "12996:43:13"
																},
																"nativeSrc": "12996:71:13",
																"nodeType": "YulFunctionCall",
																"src": "12996:71:13"
															},
															"nativeSrc": "12996:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "12996:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13121:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13121:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13134:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13134:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13145:2:13",
																				"nodeType": "YulLiteral",
																				"src": "13145:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13130:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13130:3:13"
																		},
																		"nativeSrc": "13130:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13130:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13077:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "13077:43:13"
																},
																"nativeSrc": "13077:72:13",
																"nodeType": "YulFunctionCall",
																"src": "13077:72:13"
															},
															"nativeSrc": "13077:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "13077:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13170:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13170:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13181:2:13",
																				"nodeType": "YulLiteral",
																				"src": "13181:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13166:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13166:3:13"
																		},
																		"nativeSrc": "13166:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13166:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13190:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "13190:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13196:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13196:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13186:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13186:3:13"
																		},
																		"nativeSrc": "13186:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13186:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13159:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13159:6:13"
																},
																"nativeSrc": "13159:48:13",
																"nodeType": "YulFunctionCall",
																"src": "13159:48:13"
															},
															"nativeSrc": "13159:48:13",
															"nodeType": "YulExpressionStatement",
															"src": "13159:48:13"
														},
														{
															"nativeSrc": "13216:116:13",
															"nodeType": "YulAssignment",
															"src": "13216:116:13",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13318:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13318:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "13327:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "13327:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "13224:93:13",
																	"nodeType": "YulIdentifier",
																	"src": "13224:93:13"
																},
																"nativeSrc": "13224:108:13",
																"nodeType": "YulFunctionCall",
																"src": "13224:108:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13216:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13216:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13353:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13353:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13364:2:13",
																				"nodeType": "YulLiteral",
																				"src": "13364:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13349:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13349:3:13"
																		},
																		"nativeSrc": "13349:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13349:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13373:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "13373:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13379:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13379:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13369:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13369:3:13"
																		},
																		"nativeSrc": "13369:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13369:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13342:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13342:6:13"
																},
																"nativeSrc": "13342:48:13",
																"nodeType": "YulFunctionCall",
																"src": "13342:48:13"
															},
															"nativeSrc": "13342:48:13",
															"nodeType": "YulExpressionStatement",
															"src": "13342:48:13"
														},
														{
															"nativeSrc": "13399:116:13",
															"nodeType": "YulAssignment",
															"src": "13399:116:13",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "13501:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13501:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "13510:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "13510:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "13407:93:13",
																	"nodeType": "YulIdentifier",
																	"src": "13407:93:13"
																},
																"nativeSrc": "13407:108:13",
																"nodeType": "YulFunctionCall",
																"src": "13407:108:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13399:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13399:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13536:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13536:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13547:3:13",
																				"nodeType": "YulLiteral",
																				"src": "13547:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13532:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13532:3:13"
																		},
																		"nativeSrc": "13532:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13532:19:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13557:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "13557:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13563:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13563:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13553:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13553:3:13"
																		},
																		"nativeSrc": "13553:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13553:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13525:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13525:6:13"
																},
																"nativeSrc": "13525:49:13",
																"nodeType": "YulFunctionCall",
																"src": "13525:49:13"
															},
															"nativeSrc": "13525:49:13",
															"nodeType": "YulExpressionStatement",
															"src": "13525:49:13"
														},
														{
															"nativeSrc": "13583:84:13",
															"nodeType": "YulAssignment",
															"src": "13583:84:13",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "13653:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13653:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "13662:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "13662:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "13591:61:13",
																	"nodeType": "YulIdentifier",
																	"src": "13591:61:13"
																},
																"nativeSrc": "13591:76:13",
																"nodeType": "YulFunctionCall",
																"src": "13591:76:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13583:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13583:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "12621:1053:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12889:9:13",
														"nodeType": "YulTypedName",
														"src": "12889:9:13",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "12901:6:13",
														"nodeType": "YulTypedName",
														"src": "12901:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "12909:6:13",
														"nodeType": "YulTypedName",
														"src": "12909:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12917:6:13",
														"nodeType": "YulTypedName",
														"src": "12917:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12925:6:13",
														"nodeType": "YulTypedName",
														"src": "12925:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12933:6:13",
														"nodeType": "YulTypedName",
														"src": "12933:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12944:4:13",
														"nodeType": "YulTypedName",
														"src": "12944:4:13",
														"type": ""
													}
												],
												"src": "12621:1053:13"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b50336040518060600160405280602581526020016200389b602591396200003d81620000f160201b60201c565b505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000b1575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a8919062000c30565b60405180910390fd5b620000c2816200010660201b60201c565b50620000d760016064620001c960201b60201c565b620000eb600260c8620001c960201b60201c565b620013c1565b806002908162000102919062000eaf565b5050565b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b620001d96200022860201b60201c565b620001fb33838360405180602001604052805f815250620002ca60201b60201c565b8060045f8481526020019081526020015f205f8282546200021d919062000fc0565b925050819055505050565b620002386200037260201b60201c565b73ffffffffffffffffffffffffffffffffffffffff166200025e6200037960201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1614620002c8576200028a6200037260201b60201c565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401620002bf919062000c30565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036200033d575f6040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040162000334919062000c30565b60405180910390fd5b5f80620003518585620003a160201b60201c565b915091506200036a5f87848487620003d160201b60201c565b505050505050565b5f33905090565b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b620003e585858585620004a460201b60201c565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146200049d575f6200042a6200037260201b60201c565b9050600184510362000484575f6200044c5f866200085e60201b90919060201c565b90505f620004645f866200085e60201b90919060201c565b90506200047c8389898585896200087160201b60201c565b50506200049b565b6200049a81878787878762000a2f60201b60201c565b5b505b5050505050565b8051825114620004f157815181516040517f5b059991000000000000000000000000000000000000000000000000000000008152600401620004e89291906200100b565b60405180910390fd5b5f620005026200037260201b60201c565b90505f5b835181101562000713575f6200052682866200085e60201b90919060201c565b90505f6200053e83866200085e60201b90919060201c565b90505f73ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff161462000665575f805f8481526020019081526020015f205f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156200061157888183856040517f03dee4c500000000000000000000000000000000000000000000000000000000815260040162000608949392919062001036565b60405180910390fd5b8181035f808581526020019081526020015f205f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614620006fd57805f808481526020019081526020015f205f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254620006f5919062000fc0565b925050819055505b5050806200070b9062001081565b905062000506565b506001835103620007d6575f620007345f856200085e60201b90919060201c565b90505f6200074c5f856200085e60201b90919060201c565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051620007c69291906200100b565b60405180910390a4505062000857565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516200084e92919062001194565b60405180910390a45b5050505050565b5f60208202602084010151905092915050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b111562000a27578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401620008d495949392919062001261565b6020604051808303815f875af19250505080156200091257506040513d601f19601f820116820180604052508101906200090f919062001321565b60015b62000999573d805f811462000943576040519150601f19603f3d011682016040523d82523d5f602084013e62000948565b606091505b505f8151036200099157846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040162000988919062000c30565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161462000a2557846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040162000a1c919062000c30565b60405180910390fd5b505b505050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b111562000be5578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b815260040162000a9295949392919062001351565b6020604051808303815f875af192505050801562000ad057506040513d601f19601f8201168201806040525081019062000acd919062001321565b60015b62000b57573d805f811462000b01576040519150601f19603f3d011682016040523d82523d5f602084013e62000b06565b606091505b505f81510362000b4f57846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040162000b46919062000c30565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161462000be357846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040162000bda919062000c30565b60405180910390fd5b505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f62000c188262000bed565b9050919050565b62000c2a8162000c0c565b82525050565b5f60208201905062000c455f83018462000c1f565b92915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168062000cc757607f821691505b60208210810362000cdd5762000cdc62000c82565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830262000d417fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000d04565b62000d4d868362000d04565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f62000d9762000d9162000d8b8462000d65565b62000d6e565b62000d65565b9050919050565b5f819050919050565b62000db28362000d77565b62000dca62000dc18262000d9e565b84845462000d10565b825550505050565b5f90565b62000de062000dd2565b62000ded81848462000da7565b505050565b5b8181101562000e145762000e085f8262000dd6565b60018101905062000df3565b5050565b601f82111562000e635762000e2d8162000ce3565b62000e388462000cf5565b8101602085101562000e48578190505b62000e6062000e578562000cf5565b83018262000df2565b50505b505050565b5f82821c905092915050565b5f62000e855f198460080262000e68565b1980831691505092915050565b5f62000e9f838362000e74565b9150826002028217905092915050565b62000eba8262000c4b565b67ffffffffffffffff81111562000ed65762000ed562000c55565b5b62000ee2825462000caf565b62000eef82828562000e18565b5f60209050601f83116001811462000f25575f841562000f10578287015190505b62000f1c858262000e92565b86555062000f8b565b601f19841662000f358662000ce3565b5f5b8281101562000f5e5784890151825560018201915060208501945060208101905062000f37565b8683101562000f7e578489015162000f7a601f89168262000e74565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f62000fcc8262000d65565b915062000fd98362000d65565b925082820190508082111562000ff45762000ff362000f93565b5b92915050565b620010058162000d65565b82525050565b5f604082019050620010205f83018562000ffa565b6200102f602083018462000ffa565b9392505050565b5f6080820190506200104b5f83018762000c1f565b6200105a602083018662000ffa565b62001069604083018562000ffa565b62001078606083018462000ffa565b95945050505050565b5f6200108d8262000d65565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203620010c257620010c162000f93565b5b600182019050919050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b620011018162000d65565b82525050565b5f620011148383620010f6565b60208301905092915050565b5f602082019050919050565b5f6200113882620010cd565b620011448185620010d7565b93506200115183620010e7565b805f5b83811015620011875781516200116b888262001107565b9750620011788362001120565b92505060018101905062001154565b5085935050505092915050565b5f6040820190508181035f830152620011ae81856200112c565b90508181036020830152620011c481846200112c565b90509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101562001206578082015181840152602081019050620011e9565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6200122d82620011cd565b620012398185620011d7565b93506200124b818560208601620011e7565b620012568162001211565b840191505092915050565b5f60a082019050620012765f83018862000c1f565b62001285602083018762000c1f565b62001294604083018662000ffa565b620012a3606083018562000ffa565b8181036080830152620012b7818462001221565b90509695505050505050565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b620012fd81620012c7565b811462001308575f80fd5b50565b5f815190506200131b81620012f2565b92915050565b5f60208284031215620013395762001338620012c3565b5b5f62001348848285016200130b565b91505092915050565b5f60a082019050620013665f83018862000c1f565b62001375602083018762000c1f565b81810360408301526200138981866200112c565b905081810360608301526200139f81856200112c565b90508181036080830152620013b5818462001221565b90509695505050505050565b6124cc80620013cf5f395ff3fe608060405234801561000f575f80fd5b50600436106100e7575f3560e01c8063715018a61161008a578063a22cb46511610064578063a22cb46514610257578063e985e9c514610273578063f242432a146102a3578063f2fde38b146102bf576100e7565b8063715018a6146102135780638225b2471461021d5780638da5cb5b14610239576100e7565b806320cbf5f9116100c657806320cbf5f91461017b5780632693ebf2146101975780632eb2c2d6146101c75780634e1273f4146101e3576100e7565b8062fdd58e146100eb57806301ffc9a71461011b5780630e89341c1461014b575b5f80fd5b61010560048036038101906101009190611835565b6102db565b6040516101129190611882565b60405180910390f35b610135600480360381019061013091906118f0565b610330565b6040516101429190611935565b60405180910390f35b6101656004803603810190610160919061194e565b610411565b6040516101729190611a03565b60405180910390f35b61019560048036038101906101909190611a23565b6104a3565b005b6101b160048036038101906101ac919061194e565b6104f0565b6040516101be9190611882565b60405180910390f35b6101e160048036038101906101dc9190611c51565b610505565b005b6101fd60048036038101906101f89190611ddc565b6105ac565b60405161020a9190611f09565b60405180910390f35b61021b6106b9565b005b61023760048036038101906102329190611a23565b6106cc565b005b610241610756565b60405161024e9190611f38565b60405180910390f35b610271600480360381019061026c9190611f7b565b61077e565b005b61028d60048036038101906102889190611fb9565b610794565b60405161029a9190611935565b60405180910390f35b6102bd60048036038101906102b89190611ff7565b610822565b005b6102d960048036038101906102d4919061208a565b6108c9565b005b5f805f8381526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f7fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103fa57507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061040a57506104098261094d565b5b9050919050565b606060028054610420906120e2565b80601f016020809104026020016040519081016040528092919081815260200182805461044c906120e2565b80156104975780601f1061046e57610100808354040283529160200191610497565b820191905f5260205f20905b81548152906001019060200180831161047a57829003601f168201915b50505050509050919050565b6104ab6109b6565b6104c533838360405180602001604052805f815250610a3d565b8060045f8481526020019081526020015f205f8282546104e5919061213f565b925050819055505050565b6004602052805f5260405f205f915090505481565b5f61050e610ad2565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415801561055357506105518682610794565b155b156105975780866040517fe237d92200000000000000000000000000000000000000000000000000000000815260040161058e929190612172565b60405180910390fd5b6105a48686868686610ad9565b505050505050565b606081518351146105f857815183516040517f5b0599910000000000000000000000000000000000000000000000000000000081526004016105ef929190612199565b60405180910390fd5b5f835167ffffffffffffffff81111561061457610613611a65565b5b6040519080825280602002602001820160405280156106425781602001602082028036833780820191505090505b5090505f5b84518110156106ae5761067e6106668287610bcd90919063ffffffff16565b6106798387610be090919063ffffffff16565b6102db565b828281518110610691576106906121c0565b5b602002602001018181525050806106a7906121ed565b9050610647565b508091505092915050565b6106c16109b6565b6106ca5f610bf3565b565b6106d46109b6565b806106df33846102db565b1015610720576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107179061227e565b60405180910390fd5b61072b338383610cb6565b8060045f8481526020019081526020015f205f82825461074b919061229c565b925050819055505050565b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610790610789610ad2565b8383610d58565b5050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f61082b610ad2565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614158015610870575061086e8682610794565b155b156108b45780866040517fe237d9220000000000000000000000000000000000000000000000000000000081526004016108ab929190612172565b60405180910390fd5b6108c18686868686610ec1565b505050505050565b6108d16109b6565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610941575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016109389190611f38565b60405180910390fd5b61094a81610bf3565b50565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109be610ad2565b73ffffffffffffffffffffffffffffffffffffffff166109dc610756565b73ffffffffffffffffffffffffffffffffffffffff1614610a3b576109ff610ad2565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610a329190611f38565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610aad575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610aa49190611f38565b60405180910390fd5b5f80610ab98585610fc7565b91509150610aca5f87848487610ff7565b505050505050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610b49575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610b409190611f38565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610bb9575f6040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610bb09190611f38565b60405180910390fd5b610bc68585858585610ff7565b5050505050565b5f60208202602084010151905092915050565b5f60208202602084010151905092915050565b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d26575f6040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610d1d9190611f38565b60405180910390fd5b5f80610d328484610fc7565b91509150610d51855f848460405180602001604052805f815250610ff7565b5050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610dc8575f6040517fced3e100000000000000000000000000000000000000000000000000000000008152600401610dbf9190611f38565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610eb49190611935565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610f31575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610f289190611f38565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610fa1575f6040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610f989190611f38565b60405180910390fd5b5f80610fad8585610fc7565b91509150610fbe8787848487610ff7565b50505050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b611003858585856110a3565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161461109c575f61103f610ad2565b9050600184510361108b575f61105e5f86610be090919063ffffffff16565b90505f6110745f86610be090919063ffffffff16565b9050611084838989858589611439565b505061109a565b6110998187878787876115e8565b5b505b5050505050565b80518251146110ed57815181516040517f5b0599910000000000000000000000000000000000000000000000000000000081526004016110e4929190612199565b60405180910390fd5b5f6110f6610ad2565b90505f5b83518110156112f8575f6111178286610be090919063ffffffff16565b90505f61112d8386610be090919063ffffffff16565b90505f73ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614611250575f805f8481526020019081526020015f205f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156111fc57888183856040517f03dee4c50000000000000000000000000000000000000000000000000000000081526004016111f394939291906122cf565b60405180910390fd5b8181035f808581526020019081526020015f205f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16146112e557805f808481526020019081526020015f205f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546112dd919061213f565b925050819055505b5050806112f1906121ed565b90506110fa565b5060018351036113b3575f6113165f85610be090919063ffffffff16565b90505f61132c5f85610be090919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6285856040516113a4929190612199565b60405180910390a45050611432565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051611429929190612312565b60405180910390a45b5050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b11156115e0578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401611499959493929190612399565b6020604051808303815f875af19250505080156114d457506040513d601f19601f820116820180604052508101906114d19190612405565b60015b611555573d805f8114611502576040519150601f19603f3d011682016040523d82523d5f602084013e611507565b606091505b505f81510361154d57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016115449190611f38565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146115de57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016115d59190611f38565b60405180910390fd5b505b505050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b111561178f578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401611648959493929190612430565b6020604051808303815f875af192505050801561168357506040513d601f19601f820116820180604052508101906116809190612405565b60015b611704573d805f81146116b1576040519150601f19603f3d011682016040523d82523d5f602084013e6116b6565b606091505b505f8151036116fc57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016116f39190611f38565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461178d57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016117849190611f38565b60405180910390fd5b505b505050505050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6117d1826117a8565b9050919050565b6117e1816117c7565b81146117eb575f80fd5b50565b5f813590506117fc816117d8565b92915050565b5f819050919050565b61181481611802565b811461181e575f80fd5b50565b5f8135905061182f8161180b565b92915050565b5f806040838503121561184b5761184a6117a0565b5b5f611858858286016117ee565b925050602061186985828601611821565b9150509250929050565b61187c81611802565b82525050565b5f6020820190506118955f830184611873565b92915050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6118cf8161189b565b81146118d9575f80fd5b50565b5f813590506118ea816118c6565b92915050565b5f60208284031215611905576119046117a0565b5b5f611912848285016118dc565b91505092915050565b5f8115159050919050565b61192f8161191b565b82525050565b5f6020820190506119485f830184611926565b92915050565b5f60208284031215611963576119626117a0565b5b5f61197084828501611821565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156119b0578082015181840152602081019050611995565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6119d582611979565b6119df8185611983565b93506119ef818560208601611993565b6119f8816119bb565b840191505092915050565b5f6020820190508181035f830152611a1b81846119cb565b905092915050565b5f8060408385031215611a3957611a386117a0565b5b5f611a4685828601611821565b9250506020611a5785828601611821565b9150509250929050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611a9b826119bb565b810181811067ffffffffffffffff82111715611aba57611ab9611a65565b5b80604052505050565b5f611acc611797565b9050611ad88282611a92565b919050565b5f67ffffffffffffffff821115611af757611af6611a65565b5b602082029050602081019050919050565b5f80fd5b5f611b1e611b1984611add565b611ac3565b90508083825260208201905060208402830185811115611b4157611b40611b08565b5b835b81811015611b6a5780611b568882611821565b845260208401935050602081019050611b43565b5050509392505050565b5f82601f830112611b8857611b87611a61565b5b8135611b98848260208601611b0c565b91505092915050565b5f80fd5b5f67ffffffffffffffff821115611bbf57611bbe611a65565b5b611bc8826119bb565b9050602081019050919050565b828183375f83830152505050565b5f611bf5611bf084611ba5565b611ac3565b905082815260208101848484011115611c1157611c10611ba1565b5b611c1c848285611bd5565b509392505050565b5f82601f830112611c3857611c37611a61565b5b8135611c48848260208601611be3565b91505092915050565b5f805f805f60a08688031215611c6a57611c696117a0565b5b5f611c77888289016117ee565b9550506020611c88888289016117ee565b945050604086013567ffffffffffffffff811115611ca957611ca86117a4565b5b611cb588828901611b74565b935050606086013567ffffffffffffffff811115611cd657611cd56117a4565b5b611ce288828901611b74565b925050608086013567ffffffffffffffff811115611d0357611d026117a4565b5b611d0f88828901611c24565b9150509295509295909350565b5f67ffffffffffffffff821115611d3657611d35611a65565b5b602082029050602081019050919050565b5f611d59611d5484611d1c565b611ac3565b90508083825260208201905060208402830185811115611d7c57611d7b611b08565b5b835b81811015611da55780611d9188826117ee565b845260208401935050602081019050611d7e565b5050509392505050565b5f82601f830112611dc357611dc2611a61565b5b8135611dd3848260208601611d47565b91505092915050565b5f8060408385031215611df257611df16117a0565b5b5f83013567ffffffffffffffff811115611e0f57611e0e6117a4565b5b611e1b85828601611daf565b925050602083013567ffffffffffffffff811115611e3c57611e3b6117a4565b5b611e4885828601611b74565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b611e8481611802565b82525050565b5f611e958383611e7b565b60208301905092915050565b5f602082019050919050565b5f611eb782611e52565b611ec18185611e5c565b9350611ecc83611e6c565b805f5b83811015611efc578151611ee38882611e8a565b9750611eee83611ea1565b925050600181019050611ecf565b5085935050505092915050565b5f6020820190508181035f830152611f218184611ead565b905092915050565b611f32816117c7565b82525050565b5f602082019050611f4b5f830184611f29565b92915050565b611f5a8161191b565b8114611f64575f80fd5b50565b5f81359050611f7581611f51565b92915050565b5f8060408385031215611f9157611f906117a0565b5b5f611f9e858286016117ee565b9250506020611faf85828601611f67565b9150509250929050565b5f8060408385031215611fcf57611fce6117a0565b5b5f611fdc858286016117ee565b9250506020611fed858286016117ee565b9150509250929050565b5f805f805f60a086880312156120105761200f6117a0565b5b5f61201d888289016117ee565b955050602061202e888289016117ee565b945050604061203f88828901611821565b935050606061205088828901611821565b925050608086013567ffffffffffffffff811115612071576120706117a4565b5b61207d88828901611c24565b9150509295509295909350565b5f6020828403121561209f5761209e6117a0565b5b5f6120ac848285016117ee565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806120f957607f821691505b60208210810361210c5761210b6120b5565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61214982611802565b915061215483611802565b925082820190508082111561216c5761216b612112565b5b92915050565b5f6040820190506121855f830185611f29565b6121926020830184611f29565b9392505050565b5f6040820190506121ac5f830185611873565b6121b96020830184611873565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f6121f782611802565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361222957612228612112565b5b600182019050919050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f612268601483611983565b915061227382612234565b602082019050919050565b5f6020820190508181035f8301526122958161225c565b9050919050565b5f6122a682611802565b91506122b183611802565b92508282039050818111156122c9576122c8612112565b5b92915050565b5f6080820190506122e25f830187611f29565b6122ef6020830186611873565b6122fc6040830185611873565b6123096060830184611873565b95945050505050565b5f6040820190508181035f83015261232a8185611ead565b9050818103602083015261233e8184611ead565b90509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f61236b82612347565b6123758185612351565b9350612385818560208601611993565b61238e816119bb565b840191505092915050565b5f60a0820190506123ac5f830188611f29565b6123b96020830187611f29565b6123c66040830186611873565b6123d36060830185611873565b81810360808301526123e58184612361565b90509695505050505050565b5f815190506123ff816118c6565b92915050565b5f6020828403121561241a576124196117a0565b5b5f612427848285016123f1565b91505092915050565b5f60a0820190506124435f830188611f29565b6124506020830187611f29565b81810360408301526124628186611ead565b905081810360608301526124768185611ead565b9050818103608083015261248a8184612361565b9050969550505050505056fea2646970667358221220a7c3e62f98c941e17a4a16cce07e8f0152547b7fc9e5bfc3adb4357100520b5864736f6c6343000815003368747470733a2f2f6d796170692e636f6d2f6170692f746f6b656e2f7b69647d2e6a736f6e",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x389B PUSH1 0x25 SWAP2 CODECOPY PUSH3 0x3D DUP2 PUSH3 0xF1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xB1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA8 SWAP2 SWAP1 PUSH3 0xC30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xC2 DUP2 PUSH3 0x106 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0xD7 PUSH1 0x1 PUSH1 0x64 PUSH3 0x1C9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xEB PUSH1 0x2 PUSH1 0xC8 PUSH3 0x1C9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x13C1 JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH3 0x102 SWAP2 SWAP1 PUSH3 0xEAF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH3 0x1D9 PUSH3 0x228 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1FB CALLER DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH3 0x2CA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x21D SWAP2 SWAP1 PUSH3 0xFC0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH3 0x238 PUSH3 0x372 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x25E PUSH3 0x379 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x2C8 JUMPI PUSH3 0x28A PUSH3 0x372 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x2BF SWAP2 SWAP1 PUSH3 0xC30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x33D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x334 SWAP2 SWAP1 PUSH3 0xC30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH3 0x351 DUP6 DUP6 PUSH3 0x3A1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH3 0x36A PUSH0 DUP8 DUP5 DUP5 DUP8 PUSH3 0x3D1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH3 0x3E5 DUP6 DUP6 DUP6 DUP6 PUSH3 0x4A4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x49D JUMPI PUSH0 PUSH3 0x42A PUSH3 0x372 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH3 0x484 JUMPI PUSH0 PUSH3 0x44C PUSH0 DUP7 PUSH3 0x85E PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH0 PUSH3 0x464 PUSH0 DUP7 PUSH3 0x85E PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH3 0x47C DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH3 0x871 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH3 0x49B JUMP JUMPDEST PUSH3 0x49A DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH3 0xA2F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH3 0x4F1 JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x4E8 SWAP3 SWAP2 SWAP1 PUSH3 0x100B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH3 0x502 PUSH3 0x372 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH3 0x713 JUMPI PUSH0 PUSH3 0x526 DUP3 DUP7 PUSH3 0x85E PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH0 PUSH3 0x53E DUP4 DUP7 PUSH3 0x85E PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x665 JUMPI PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x611 JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x608 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x1036 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x6FD JUMPI DUP1 PUSH0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x6F5 SWAP2 SWAP1 PUSH3 0xFC0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH3 0x70B SWAP1 PUSH3 0x1081 JUMP JUMPDEST SWAP1 POP PUSH3 0x506 JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH3 0x7D6 JUMPI PUSH0 PUSH3 0x734 PUSH0 DUP6 PUSH3 0x85E PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH0 PUSH3 0x74C PUSH0 DUP6 PUSH3 0x85E PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH3 0x7C6 SWAP3 SWAP2 SWAP1 PUSH3 0x100B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH3 0x857 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH3 0x84E SWAP3 SWAP2 SWAP1 PUSH3 0x1194 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH3 0xA27 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x8D4 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x1261 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH3 0x912 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x90F SWAP2 SWAP1 PUSH3 0x1321 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH3 0x999 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH3 0x943 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH3 0x948 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH3 0x991 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x988 SWAP2 SWAP1 PUSH3 0xC30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH3 0xA25 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA1C SWAP2 SWAP1 PUSH3 0xC30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH3 0xBE5 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA92 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x1351 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH3 0xAD0 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xACD SWAP2 SWAP1 PUSH3 0x1321 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH3 0xB57 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH3 0xB01 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH3 0xB06 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH3 0xB4F JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xB46 SWAP2 SWAP1 PUSH3 0xC30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH3 0xBE3 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xBDA SWAP2 SWAP1 PUSH3 0xC30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xC18 DUP3 PUSH3 0xBED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xC2A DUP2 PUSH3 0xC0C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xC45 PUSH0 DUP4 ADD DUP5 PUSH3 0xC1F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0xCC7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0xCDD JUMPI PUSH3 0xCDC PUSH3 0xC82 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0xD41 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0xD04 JUMP JUMPDEST PUSH3 0xD4D DUP7 DUP4 PUSH3 0xD04 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xD97 PUSH3 0xD91 PUSH3 0xD8B DUP5 PUSH3 0xD65 JUMP JUMPDEST PUSH3 0xD6E JUMP JUMPDEST PUSH3 0xD65 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xDB2 DUP4 PUSH3 0xD77 JUMP JUMPDEST PUSH3 0xDCA PUSH3 0xDC1 DUP3 PUSH3 0xD9E JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0xD10 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0xDE0 PUSH3 0xDD2 JUMP JUMPDEST PUSH3 0xDED DUP2 DUP5 DUP5 PUSH3 0xDA7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0xE14 JUMPI PUSH3 0xE08 PUSH0 DUP3 PUSH3 0xDD6 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0xDF3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0xE63 JUMPI PUSH3 0xE2D DUP2 PUSH3 0xCE3 JUMP JUMPDEST PUSH3 0xE38 DUP5 PUSH3 0xCF5 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0xE48 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0xE60 PUSH3 0xE57 DUP6 PUSH3 0xCF5 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0xDF2 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xE85 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0xE68 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xE9F DUP4 DUP4 PUSH3 0xE74 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xEBA DUP3 PUSH3 0xC4B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0xED6 JUMPI PUSH3 0xED5 PUSH3 0xC55 JUMP JUMPDEST JUMPDEST PUSH3 0xEE2 DUP3 SLOAD PUSH3 0xCAF JUMP JUMPDEST PUSH3 0xEEF DUP3 DUP3 DUP6 PUSH3 0xE18 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0xF25 JUMPI PUSH0 DUP5 ISZERO PUSH3 0xF10 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0xF1C DUP6 DUP3 PUSH3 0xE92 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0xF8B JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0xF35 DUP7 PUSH3 0xCE3 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0xF5E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xF37 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0xF7E JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0xF7A PUSH1 0x1F DUP10 AND DUP3 PUSH3 0xE74 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH3 0xFCC DUP3 PUSH3 0xD65 JUMP JUMPDEST SWAP2 POP PUSH3 0xFD9 DUP4 PUSH3 0xD65 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0xFF4 JUMPI PUSH3 0xFF3 PUSH3 0xF93 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x1005 DUP2 PUSH3 0xD65 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x1020 PUSH0 DUP4 ADD DUP6 PUSH3 0xFFA JUMP JUMPDEST PUSH3 0x102F PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0xFFA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH3 0x104B PUSH0 DUP4 ADD DUP8 PUSH3 0xC1F JUMP JUMPDEST PUSH3 0x105A PUSH1 0x20 DUP4 ADD DUP7 PUSH3 0xFFA JUMP JUMPDEST PUSH3 0x1069 PUSH1 0x40 DUP4 ADD DUP6 PUSH3 0xFFA JUMP JUMPDEST PUSH3 0x1078 PUSH1 0x60 DUP4 ADD DUP5 PUSH3 0xFFA JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x108D DUP3 PUSH3 0xD65 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH3 0x10C2 JUMPI PUSH3 0x10C1 PUSH3 0xF93 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1101 DUP2 PUSH3 0xD65 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH3 0x1114 DUP4 DUP4 PUSH3 0x10F6 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x1138 DUP3 PUSH3 0x10CD JUMP JUMPDEST PUSH3 0x1144 DUP2 DUP6 PUSH3 0x10D7 JUMP JUMPDEST SWAP4 POP PUSH3 0x1151 DUP4 PUSH3 0x10E7 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x1187 JUMPI DUP2 MLOAD PUSH3 0x116B DUP9 DUP3 PUSH3 0x1107 JUMP JUMPDEST SWAP8 POP PUSH3 0x1178 DUP4 PUSH3 0x1120 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x1154 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x11AE DUP2 DUP6 PUSH3 0x112C JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH3 0x11C4 DUP2 DUP5 PUSH3 0x112C JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x1206 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x11E9 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x122D DUP3 PUSH3 0x11CD JUMP JUMPDEST PUSH3 0x1239 DUP2 DUP6 PUSH3 0x11D7 JUMP JUMPDEST SWAP4 POP PUSH3 0x124B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x11E7 JUMP JUMPDEST PUSH3 0x1256 DUP2 PUSH3 0x1211 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0x1276 PUSH0 DUP4 ADD DUP9 PUSH3 0xC1F JUMP JUMPDEST PUSH3 0x1285 PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0xC1F JUMP JUMPDEST PUSH3 0x1294 PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0xFFA JUMP JUMPDEST PUSH3 0x12A3 PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0xFFA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH3 0x12B7 DUP2 DUP5 PUSH3 0x1221 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x12FD DUP2 PUSH3 0x12C7 JUMP JUMPDEST DUP2 EQ PUSH3 0x1308 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x131B DUP2 PUSH3 0x12F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1339 JUMPI PUSH3 0x1338 PUSH3 0x12C3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x1348 DUP5 DUP3 DUP6 ADD PUSH3 0x130B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0x1366 PUSH0 DUP4 ADD DUP9 PUSH3 0xC1F JUMP JUMPDEST PUSH3 0x1375 PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0xC1F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH3 0x1389 DUP2 DUP7 PUSH3 0x112C JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH3 0x139F DUP2 DUP6 PUSH3 0x112C JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH3 0x13B5 DUP2 DUP5 PUSH3 0x1221 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x24CC DUP1 PUSH3 0x13CF PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2BF JUMPI PUSH2 0xE7 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x8225B247 EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x239 JUMPI PUSH2 0xE7 JUMP JUMPDEST DUP1 PUSH4 0x20CBF5F9 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x20CBF5F9 EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x2693EBF2 EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x1E3 JUMPI PUSH2 0xE7 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x14B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x105 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x100 SWAP2 SWAP1 PUSH2 0x1835 JUMP JUMPDEST PUSH2 0x2DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x112 SWAP2 SWAP1 PUSH2 0x1882 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x135 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x18F0 JUMP JUMPDEST PUSH2 0x330 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x1935 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x165 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x194E JUMP JUMPDEST PUSH2 0x411 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x1A03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x195 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x1A23 JUMP JUMPDEST PUSH2 0x4A3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x194E JUMP JUMPDEST PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x1882 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x1C51 JUMP JUMPDEST PUSH2 0x505 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0x1DDC JUMP JUMPDEST PUSH2 0x5AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x1F09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21B PUSH2 0x6B9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x237 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x1A23 JUMP JUMPDEST PUSH2 0x6CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x241 PUSH2 0x756 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24E SWAP2 SWAP1 PUSH2 0x1F38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x271 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x1F7B JUMP JUMPDEST PUSH2 0x77E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x1FB9 JUMP JUMPDEST PUSH2 0x794 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x1935 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x1FF7 JUMP JUMPDEST PUSH2 0x822 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x208A JUMP JUMPDEST PUSH2 0x8C9 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3FA JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x40A JUMPI POP PUSH2 0x409 DUP3 PUSH2 0x94D JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x420 SWAP1 PUSH2 0x20E2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x44C SWAP1 PUSH2 0x20E2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x497 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x46E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x497 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x47A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4AB PUSH2 0x9B6 JUMP JUMPDEST PUSH2 0x4C5 CALLER DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xA3D JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4E5 SWAP2 SWAP1 PUSH2 0x213F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x50E PUSH2 0xAD2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x553 JUMPI POP PUSH2 0x551 DUP7 DUP3 PUSH2 0x794 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x597 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58E SWAP3 SWAP2 SWAP1 PUSH2 0x2172 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5A4 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xAD9 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x5F8 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EF SWAP3 SWAP2 SWAP1 PUSH2 0x2199 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x614 JUMPI PUSH2 0x613 PUSH2 0x1A65 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x642 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6AE JUMPI PUSH2 0x67E PUSH2 0x666 DUP3 DUP8 PUSH2 0xBCD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x679 DUP4 DUP8 PUSH2 0xBE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2DB JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x691 JUMPI PUSH2 0x690 PUSH2 0x21C0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x6A7 SWAP1 PUSH2 0x21ED JUMP JUMPDEST SWAP1 POP PUSH2 0x647 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6C1 PUSH2 0x9B6 JUMP JUMPDEST PUSH2 0x6CA PUSH0 PUSH2 0xBF3 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x6D4 PUSH2 0x9B6 JUMP JUMPDEST DUP1 PUSH2 0x6DF CALLER DUP5 PUSH2 0x2DB JUMP JUMPDEST LT ISZERO PUSH2 0x720 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x717 SWAP1 PUSH2 0x227E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x72B CALLER DUP4 DUP4 PUSH2 0xCB6 JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x74B SWAP2 SWAP1 PUSH2 0x229C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x790 PUSH2 0x789 PUSH2 0xAD2 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xD58 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x82B PUSH2 0xAD2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x870 JUMPI POP PUSH2 0x86E DUP7 DUP3 PUSH2 0x794 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x8B4 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AB SWAP3 SWAP2 SWAP1 PUSH2 0x2172 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8C1 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xEC1 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x8D1 PUSH2 0x9B6 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x941 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x938 SWAP2 SWAP1 PUSH2 0x1F38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x94A DUP2 PUSH2 0xBF3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9BE PUSH2 0xAD2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9DC PUSH2 0x756 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA3B JUMPI PUSH2 0x9FF PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA32 SWAP2 SWAP1 PUSH2 0x1F38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAAD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA4 SWAP2 SWAP1 PUSH2 0x1F38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0xAB9 DUP6 DUP6 PUSH2 0xFC7 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xACA PUSH0 DUP8 DUP5 DUP5 DUP8 PUSH2 0xFF7 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB49 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP2 SWAP1 PUSH2 0x1F38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBB9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB0 SWAP2 SWAP1 PUSH2 0x1F38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBC6 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xFF7 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD26 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD1D SWAP2 SWAP1 PUSH2 0x1F38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0xD32 DUP5 DUP5 PUSH2 0xFC7 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xD51 DUP6 PUSH0 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xFF7 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDC8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBF SWAP2 SWAP1 PUSH2 0x1F38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xEB4 SWAP2 SWAP1 PUSH2 0x1935 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF31 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF28 SWAP2 SWAP1 PUSH2 0x1F38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFA1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF98 SWAP2 SWAP1 PUSH2 0x1F38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0xFAD DUP6 DUP6 PUSH2 0xFC7 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xFBE DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0xFF7 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1003 DUP6 DUP6 DUP6 DUP6 PUSH2 0x10A3 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x109C JUMPI PUSH0 PUSH2 0x103F PUSH2 0xAD2 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0x108B JUMPI PUSH0 PUSH2 0x105E PUSH0 DUP7 PUSH2 0xBE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1074 PUSH0 DUP7 PUSH2 0xBE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1084 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x1439 JUMP JUMPDEST POP POP PUSH2 0x109A JUMP JUMPDEST PUSH2 0x1099 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x15E8 JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x10ED JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E4 SWAP3 SWAP2 SWAP1 PUSH2 0x2199 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x10F6 PUSH2 0xAD2 JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x12F8 JUMPI PUSH0 PUSH2 0x1117 DUP3 DUP7 PUSH2 0xBE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x112D DUP4 DUP7 PUSH2 0xBE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1250 JUMPI PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x11FC JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F3 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12E5 JUMPI DUP1 PUSH0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x12DD SWAP2 SWAP1 PUSH2 0x213F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH2 0x12F1 SWAP1 PUSH2 0x21ED JUMP JUMPDEST SWAP1 POP PUSH2 0x10FA JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH2 0x13B3 JUMPI PUSH0 PUSH2 0x1316 PUSH0 DUP6 PUSH2 0xBE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x132C PUSH0 DUP6 PUSH2 0xBE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x13A4 SWAP3 SWAP2 SWAP1 PUSH2 0x2199 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x1432 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1429 SWAP3 SWAP2 SWAP1 PUSH2 0x2312 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x15E0 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1499 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2399 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x14D4 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14D1 SWAP2 SWAP1 PUSH2 0x2405 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1555 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1502 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1507 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x154D JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1544 SWAP2 SWAP1 PUSH2 0x1F38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x15DE JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15D5 SWAP2 SWAP1 PUSH2 0x1F38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x178F JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1648 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2430 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1683 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1680 SWAP2 SWAP1 PUSH2 0x2405 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1704 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x16B1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x16B6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x16FC JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16F3 SWAP2 SWAP1 PUSH2 0x1F38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x178D JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1784 SWAP2 SWAP1 PUSH2 0x1F38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17D1 DUP3 PUSH2 0x17A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17E1 DUP2 PUSH2 0x17C7 JUMP JUMPDEST DUP2 EQ PUSH2 0x17EB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17FC DUP2 PUSH2 0x17D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1814 DUP2 PUSH2 0x1802 JUMP JUMPDEST DUP2 EQ PUSH2 0x181E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x182F DUP2 PUSH2 0x180B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x184B JUMPI PUSH2 0x184A PUSH2 0x17A0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1858 DUP6 DUP3 DUP7 ADD PUSH2 0x17EE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1869 DUP6 DUP3 DUP7 ADD PUSH2 0x1821 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x187C DUP2 PUSH2 0x1802 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1895 PUSH0 DUP4 ADD DUP5 PUSH2 0x1873 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18CF DUP2 PUSH2 0x189B JUMP JUMPDEST DUP2 EQ PUSH2 0x18D9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18EA DUP2 PUSH2 0x18C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1905 JUMPI PUSH2 0x1904 PUSH2 0x17A0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1912 DUP5 DUP3 DUP6 ADD PUSH2 0x18DC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x192F DUP2 PUSH2 0x191B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1948 PUSH0 DUP4 ADD DUP5 PUSH2 0x1926 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1963 JUMPI PUSH2 0x1962 PUSH2 0x17A0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1970 DUP5 DUP3 DUP6 ADD PUSH2 0x1821 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x19B0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1995 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19D5 DUP3 PUSH2 0x1979 JUMP JUMPDEST PUSH2 0x19DF DUP2 DUP6 PUSH2 0x1983 JUMP JUMPDEST SWAP4 POP PUSH2 0x19EF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1993 JUMP JUMPDEST PUSH2 0x19F8 DUP2 PUSH2 0x19BB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A1B DUP2 DUP5 PUSH2 0x19CB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A39 JUMPI PUSH2 0x1A38 PUSH2 0x17A0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A46 DUP6 DUP3 DUP7 ADD PUSH2 0x1821 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A57 DUP6 DUP3 DUP7 ADD PUSH2 0x1821 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1A9B DUP3 PUSH2 0x19BB JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1ABA JUMPI PUSH2 0x1AB9 PUSH2 0x1A65 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1ACC PUSH2 0x1797 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AD8 DUP3 DUP3 PUSH2 0x1A92 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1AF7 JUMPI PUSH2 0x1AF6 PUSH2 0x1A65 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x1B1E PUSH2 0x1B19 DUP5 PUSH2 0x1ADD JUMP JUMPDEST PUSH2 0x1AC3 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1B41 JUMPI PUSH2 0x1B40 PUSH2 0x1B08 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1B6A JUMPI DUP1 PUSH2 0x1B56 DUP9 DUP3 PUSH2 0x1821 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1B43 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B88 JUMPI PUSH2 0x1B87 PUSH2 0x1A61 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1B98 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1B0C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1BBF JUMPI PUSH2 0x1BBE PUSH2 0x1A65 JUMP JUMPDEST JUMPDEST PUSH2 0x1BC8 DUP3 PUSH2 0x19BB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BF5 PUSH2 0x1BF0 DUP5 PUSH2 0x1BA5 JUMP JUMPDEST PUSH2 0x1AC3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1C11 JUMPI PUSH2 0x1C10 PUSH2 0x1BA1 JUMP JUMPDEST JUMPDEST PUSH2 0x1C1C DUP5 DUP3 DUP6 PUSH2 0x1BD5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C38 JUMPI PUSH2 0x1C37 PUSH2 0x1A61 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1C48 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1BE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1C6A JUMPI PUSH2 0x1C69 PUSH2 0x17A0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C77 DUP9 DUP3 DUP10 ADD PUSH2 0x17EE JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1C88 DUP9 DUP3 DUP10 ADD PUSH2 0x17EE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CA9 JUMPI PUSH2 0x1CA8 PUSH2 0x17A4 JUMP JUMPDEST JUMPDEST PUSH2 0x1CB5 DUP9 DUP3 DUP10 ADD PUSH2 0x1B74 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CD6 JUMPI PUSH2 0x1CD5 PUSH2 0x17A4 JUMP JUMPDEST JUMPDEST PUSH2 0x1CE2 DUP9 DUP3 DUP10 ADD PUSH2 0x1B74 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D03 JUMPI PUSH2 0x1D02 PUSH2 0x17A4 JUMP JUMPDEST JUMPDEST PUSH2 0x1D0F DUP9 DUP3 DUP10 ADD PUSH2 0x1C24 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1D36 JUMPI PUSH2 0x1D35 PUSH2 0x1A65 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D59 PUSH2 0x1D54 DUP5 PUSH2 0x1D1C JUMP JUMPDEST PUSH2 0x1AC3 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1D7C JUMPI PUSH2 0x1D7B PUSH2 0x1B08 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1DA5 JUMPI DUP1 PUSH2 0x1D91 DUP9 DUP3 PUSH2 0x17EE JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D7E JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1DC3 JUMPI PUSH2 0x1DC2 PUSH2 0x1A61 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1DD3 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1D47 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DF2 JUMPI PUSH2 0x1DF1 PUSH2 0x17A0 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E0F JUMPI PUSH2 0x1E0E PUSH2 0x17A4 JUMP JUMPDEST JUMPDEST PUSH2 0x1E1B DUP6 DUP3 DUP7 ADD PUSH2 0x1DAF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E3C JUMPI PUSH2 0x1E3B PUSH2 0x17A4 JUMP JUMPDEST JUMPDEST PUSH2 0x1E48 DUP6 DUP3 DUP7 ADD PUSH2 0x1B74 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E84 DUP2 PUSH2 0x1802 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E95 DUP4 DUP4 PUSH2 0x1E7B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1EB7 DUP3 PUSH2 0x1E52 JUMP JUMPDEST PUSH2 0x1EC1 DUP2 DUP6 PUSH2 0x1E5C JUMP JUMPDEST SWAP4 POP PUSH2 0x1ECC DUP4 PUSH2 0x1E6C JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1EFC JUMPI DUP2 MLOAD PUSH2 0x1EE3 DUP9 DUP3 PUSH2 0x1E8A JUMP JUMPDEST SWAP8 POP PUSH2 0x1EEE DUP4 PUSH2 0x1EA1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1ECF JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F21 DUP2 DUP5 PUSH2 0x1EAD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F32 DUP2 PUSH2 0x17C7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F4B PUSH0 DUP4 ADD DUP5 PUSH2 0x1F29 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F5A DUP2 PUSH2 0x191B JUMP JUMPDEST DUP2 EQ PUSH2 0x1F64 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F75 DUP2 PUSH2 0x1F51 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F91 JUMPI PUSH2 0x1F90 PUSH2 0x17A0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F9E DUP6 DUP3 DUP7 ADD PUSH2 0x17EE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FAF DUP6 DUP3 DUP7 ADD PUSH2 0x1F67 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FCF JUMPI PUSH2 0x1FCE PUSH2 0x17A0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FDC DUP6 DUP3 DUP7 ADD PUSH2 0x17EE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FED DUP6 DUP3 DUP7 ADD PUSH2 0x17EE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2010 JUMPI PUSH2 0x200F PUSH2 0x17A0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x201D DUP9 DUP3 DUP10 ADD PUSH2 0x17EE JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x202E DUP9 DUP3 DUP10 ADD PUSH2 0x17EE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x203F DUP9 DUP3 DUP10 ADD PUSH2 0x1821 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2050 DUP9 DUP3 DUP10 ADD PUSH2 0x1821 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2071 JUMPI PUSH2 0x2070 PUSH2 0x17A4 JUMP JUMPDEST JUMPDEST PUSH2 0x207D DUP9 DUP3 DUP10 ADD PUSH2 0x1C24 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x209F JUMPI PUSH2 0x209E PUSH2 0x17A0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20AC DUP5 DUP3 DUP6 ADD PUSH2 0x17EE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x20F9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x210C JUMPI PUSH2 0x210B PUSH2 0x20B5 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2149 DUP3 PUSH2 0x1802 JUMP JUMPDEST SWAP2 POP PUSH2 0x2154 DUP4 PUSH2 0x1802 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x216C JUMPI PUSH2 0x216B PUSH2 0x2112 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2185 PUSH0 DUP4 ADD DUP6 PUSH2 0x1F29 JUMP JUMPDEST PUSH2 0x2192 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F29 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x21AC PUSH0 DUP4 ADD DUP6 PUSH2 0x1873 JUMP JUMPDEST PUSH2 0x21B9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1873 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x21F7 DUP3 PUSH2 0x1802 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2229 JUMPI PUSH2 0x2228 PUSH2 0x2112 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2268 PUSH1 0x14 DUP4 PUSH2 0x1983 JUMP JUMPDEST SWAP2 POP PUSH2 0x2273 DUP3 PUSH2 0x2234 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2295 DUP2 PUSH2 0x225C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x22A6 DUP3 PUSH2 0x1802 JUMP JUMPDEST SWAP2 POP PUSH2 0x22B1 DUP4 PUSH2 0x1802 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x22C9 JUMPI PUSH2 0x22C8 PUSH2 0x2112 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x22E2 PUSH0 DUP4 ADD DUP8 PUSH2 0x1F29 JUMP JUMPDEST PUSH2 0x22EF PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1873 JUMP JUMPDEST PUSH2 0x22FC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1873 JUMP JUMPDEST PUSH2 0x2309 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1873 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x232A DUP2 DUP6 PUSH2 0x1EAD JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x233E DUP2 DUP5 PUSH2 0x1EAD JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x236B DUP3 PUSH2 0x2347 JUMP JUMPDEST PUSH2 0x2375 DUP2 DUP6 PUSH2 0x2351 JUMP JUMPDEST SWAP4 POP PUSH2 0x2385 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1993 JUMP JUMPDEST PUSH2 0x238E DUP2 PUSH2 0x19BB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x23AC PUSH0 DUP4 ADD DUP9 PUSH2 0x1F29 JUMP JUMPDEST PUSH2 0x23B9 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1F29 JUMP JUMPDEST PUSH2 0x23C6 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1873 JUMP JUMPDEST PUSH2 0x23D3 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1873 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x23E5 DUP2 DUP5 PUSH2 0x2361 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x23FF DUP2 PUSH2 0x18C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x241A JUMPI PUSH2 0x2419 PUSH2 0x17A0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2427 DUP5 DUP3 DUP6 ADD PUSH2 0x23F1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2443 PUSH0 DUP4 ADD DUP9 PUSH2 0x1F29 JUMP JUMPDEST PUSH2 0x2450 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1F29 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2462 DUP2 DUP7 PUSH2 0x1EAD JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2476 DUP2 DUP6 PUSH2 0x1EAD JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x248A DUP2 DUP5 PUSH2 0x2361 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA7 0xC3 0xE6 0x2F SWAP9 0xC9 COINBASE 0xE1 PUSH27 0x4A16CCE07E8F0152547B7FC9E5BFC3ADB4357100520B5864736F6C PUSH4 0x43000815 STOP CALLER PUSH9 0x747470733A2F2F6D79 PUSH2 0x7069 0x2E PUSH4 0x6F6D2F61 PUSH17 0x692F746F6B656E2F7B69647D2E6A736F6E ",
							"sourceMap": "171:742:12:-:0;;;307:185;;;;;;;;;;378:10;1251:62:2;;;;;;;;;;;;;;;;;1293:13;1301:4;1293:7;;;:13;;:::i;:::-;1251:62;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;441:17:12::2;451:1;454:3;441:9;;;:17;;:::i;:::-;468;478:1;481:3;468:9;;;:17;;:::i;:::-;171:742:::0;;10282:86:2;10355:6;10348:4;:13;;;;;;:::i;:::-;;10282:86;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;498:164:12:-;1531:13:0;:11;;;:13;;:::i;:::-;577:38:12::1;583:10;595:7;604:6;577:38;;;;;;;;;;;::::0;:5:::1;;;:38;;:::i;:::-;649:6;625:11;:20;637:7;625:20;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;498:164:::0;;:::o;1796:162:0:-;1866:12;:10;;;:12;;:::i;:::-;1855:23;;:7;:5;;;:7;;:::i;:::-;:23;;;1851:101;;1928:12;:10;;;:12;;:::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;10746:346:2:-;10856:1;10842:16;;:2;:16;;;10838:88;;10912:1;10881:34;;;;;;;;;;;:::i;:::-;;;;;;;;10838:88;10936:20;10958:23;10985:29;11004:2;11008:5;10985:18;;;:29;;:::i;:::-;10935:79;;;;11024:61;11059:1;11063:2;11067:3;11072:6;11080:4;11024:26;;;:61;;:::i;:::-;10828:264;;10746:346;;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;16080:849:2:-;16188:23;16213;16374:4;16368:11;16358:21;;16444:1;16436:6;16429:17;16582:8;16575:4;16567:6;16563:17;16556:35;16704:4;16696:6;16692:17;16682:27;;16737:1;16729:6;16722:17;16778:8;16771:4;16763:6;16759:17;16752:35;16907:4;16899:6;16895:17;16889:4;16882:31;16080:849;;;;;:::o;7004:690::-;7205:30;7213:4;7219:2;7223:3;7228:6;7205:7;;;:30;;:::i;:::-;7263:1;7249:16;;:2;:16;;;7245:443;;7281:16;7300:12;:10;;;:12;;:::i;:::-;7281:31;;7344:1;7330:3;:10;:15;7326:352;;7365:10;7378:25;7401:1;7378:3;:22;;;;:25;;;;:::i;:::-;7365:38;;7421:13;7437:28;7463:1;7437:6;:25;;;;:28;;;;:::i;:::-;7421:44;;7483:67;7514:8;7524:4;7530:2;7534;7538:5;7545:4;7483:30;;;:67;;:::i;:::-;7347:218;;7326:352;;;7589:74;7625:8;7635:4;7641:2;7645:3;7650:6;7658:4;7589:35;;;:74;;:::i;:::-;7326:352;7267:421;7245:443;7004:690;;;;;:::o;5144:1281::-;5279:6;:13;5265:3;:10;:27;5261:117;;5341:3;:10;5353:6;:13;5315:52;;;;;;;;;;;;:::i;:::-;;;;;;;;5261:117;5388:16;5407:12;:10;;;:12;;:::i;:::-;5388:31;;5435:9;5430:691;5454:3;:10;5450:1;:14;5430:691;;;5485:10;5498:25;5521:1;5498:3;:22;;;;:25;;;;:::i;:::-;5485:38;;5537:13;5553:28;5579:1;5553:6;:25;;;;:28;;;;:::i;:::-;5537:44;;5616:1;5600:18;;:4;:18;;;5596:420;;5638:19;5660:9;:13;5670:2;5660:13;;;;;;;;;;;:19;5674:4;5660:19;;;;;;;;;;;;;;;;5638:41;;5715:5;5701:11;:19;5697:129;;;5778:4;5784:11;5797:5;5804:2;5751:56;;;;;;;;;;;;;;:::i;:::-;;;;;;;;5697:129;5978:5;5964:11;:19;5942:9;:13;5952:2;5942:13;;;;;;;;;;;:19;5956:4;5942:19;;;;;;;;;;;;;;;:41;;;;5620:396;5596:420;6048:1;6034:16;;:2;:16;;;6030:81;;6091:5;6070:9;:13;6080:2;6070:13;;;;;;;;;;;:17;6084:2;6070:17;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;6030:81;5471:650;;5466:3;;;;:::i;:::-;;;5430:691;;;;6149:1;6135:3;:10;:15;6131:288;;6166:10;6179:25;6202:1;6179:3;:22;;;;:25;;;;:::i;:::-;6166:38;;6218:13;6234:28;6260:1;6234:6;:25;;;;:28;;;;:::i;:::-;6218:44;;6312:2;6281:45;;6306:4;6281:45;;6296:8;6281:45;;;6316:2;6320:5;6281:45;;;;;;;:::i;:::-;;;;;;;;6152:185;;6131:288;;;6392:2;6362:46;;6386:4;6362:46;;6376:8;6362:46;;;6396:3;6401:6;6362:46;;;;;;;:::i;:::-;;;;;;;;6131:288;5251:1174;5144:1281;;;;:::o;4204:197:6:-;4290:11;4378:4;4373:3;4369:14;4362:4;4357:3;4353:14;4349:35;4343:42;4336:49;;4204:197;;;;:::o;13761:974:2:-;13984:1;13967:2;:14;;;:18;13963:766;;;14022:2;14005:38;;;14044:8;14054:4;14060:2;14064:5;14071:4;14005:71;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14001:718;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14377:1;14360:6;:13;:18;14356:349;;14487:2;14464:26;;;;;;;;;;;:::i;:::-;;;;;;;;14356:349;14657:6;14651:13;14642:6;14638:2;14634:15;14627:38;14001:718;14137:43;;;14125:55;;;:8;:55;;;;14121:174;;14273:2;14250:26;;;;;;;;;;;:::i;:::-;;;;;;;;14121:174;14077:232;13963:766;13761:974;;;;;;:::o;14923:1041::-;15171:1;15154:2;:14;;;:18;15150:808;;;15209:2;15192:43;;;15236:8;15246:4;15252:3;15257:6;15265:4;15192:78;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;15188:760;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15606:1;15589:6;:13;:18;15585:349;;15716:2;15693:26;;;;;;;;;;;:::i;:::-;;;;;;;;15585:349;15886:6;15880:13;15871:6;15867:2;15863:15;15856:38;15188:760;15361:48;;;15349:60;;;:8;:60;;;;15345:179;;15502:2;15479:26;;;;;;;;;;;:::i;:::-;;;;;;;;15345:179;15271:267;15150:808;14923:1041;;;;;;:::o;7:126:13:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:99::-;645:6;679:5;673:12;663:22;;593:99;;;:::o;698:180::-;746:77;743:1;736:88;843:4;840:1;833:15;867:4;864:1;857:15;884:180;932:77;929:1;922:88;1029:4;1026:1;1019:15;1053:4;1050:1;1043:15;1070:320;1114:6;1151:1;1145:4;1141:12;1131:22;;1198:1;1192:4;1188:12;1219:18;1209:81;;1275:4;1267:6;1263:17;1253:27;;1209:81;1337:2;1329:6;1326:14;1306:18;1303:38;1300:84;;1356:18;;:::i;:::-;1300:84;1121:269;1070:320;;;:::o;1396:141::-;1445:4;1468:3;1460:11;;1491:3;1488:1;1481:14;1525:4;1522:1;1512:18;1504:26;;1396:141;;;:::o;1543:93::-;1580:6;1627:2;1622;1615:5;1611:14;1607:23;1597:33;;1543:93;;;:::o;1642:107::-;1686:8;1736:5;1730:4;1726:16;1705:37;;1642:107;;;;:::o;1755:393::-;1824:6;1874:1;1862:10;1858:18;1897:97;1927:66;1916:9;1897:97;:::i;:::-;2015:39;2045:8;2034:9;2015:39;:::i;:::-;2003:51;;2087:4;2083:9;2076:5;2072:21;2063:30;;2136:4;2126:8;2122:19;2115:5;2112:30;2102:40;;1831:317;;1755:393;;;;;:::o;2154:77::-;2191:7;2220:5;2209:16;;2154:77;;;:::o;2237:60::-;2265:3;2286:5;2279:12;;2237:60;;;:::o;2303:142::-;2353:9;2386:53;2404:34;2413:24;2431:5;2413:24;:::i;:::-;2404:34;:::i;:::-;2386:53;:::i;:::-;2373:66;;2303:142;;;:::o;2451:75::-;2494:3;2515:5;2508:12;;2451:75;;;:::o;2532:269::-;2642:39;2673:7;2642:39;:::i;:::-;2703:91;2752:41;2776:16;2752:41;:::i;:::-;2744:6;2737:4;2731:11;2703:91;:::i;:::-;2697:4;2690:105;2608:193;2532:269;;;:::o;2807:73::-;2852:3;2807:73;:::o;2886:189::-;2963:32;;:::i;:::-;3004:65;3062:6;3054;3048:4;3004:65;:::i;:::-;2939:136;2886:189;;:::o;3081:186::-;3141:120;3158:3;3151:5;3148:14;3141:120;;;3212:39;3249:1;3242:5;3212:39;:::i;:::-;3185:1;3178:5;3174:13;3165:22;;3141:120;;;3081:186;;:::o;3273:543::-;3374:2;3369:3;3366:11;3363:446;;;3408:38;3440:5;3408:38;:::i;:::-;3492:29;3510:10;3492:29;:::i;:::-;3482:8;3478:44;3675:2;3663:10;3660:18;3657:49;;;3696:8;3681:23;;3657:49;3719:80;3775:22;3793:3;3775:22;:::i;:::-;3765:8;3761:37;3748:11;3719:80;:::i;:::-;3378:431;;3363:446;3273:543;;;:::o;3822:117::-;3876:8;3926:5;3920:4;3916:16;3895:37;;3822:117;;;;:::o;3945:169::-;3989:6;4022:51;4070:1;4066:6;4058:5;4055:1;4051:13;4022:51;:::i;:::-;4018:56;4103:4;4097;4093:15;4083:25;;3996:118;3945:169;;;;:::o;4119:295::-;4195:4;4341:29;4366:3;4360:4;4341:29;:::i;:::-;4333:37;;4403:3;4400:1;4396:11;4390:4;4387:21;4379:29;;4119:295;;;;:::o;4419:1395::-;4536:37;4569:3;4536:37;:::i;:::-;4638:18;4630:6;4627:30;4624:56;;;4660:18;;:::i;:::-;4624:56;4704:38;4736:4;4730:11;4704:38;:::i;:::-;4789:67;4849:6;4841;4835:4;4789:67;:::i;:::-;4883:1;4907:4;4894:17;;4939:2;4931:6;4928:14;4956:1;4951:618;;;;5613:1;5630:6;5627:77;;;5679:9;5674:3;5670:19;5664:26;5655:35;;5627:77;5730:67;5790:6;5783:5;5730:67;:::i;:::-;5724:4;5717:81;5586:222;4921:887;;4951:618;5003:4;4999:9;4991:6;4987:22;5037:37;5069:4;5037:37;:::i;:::-;5096:1;5110:208;5124:7;5121:1;5118:14;5110:208;;;5203:9;5198:3;5194:19;5188:26;5180:6;5173:42;5254:1;5246:6;5242:14;5232:24;;5301:2;5290:9;5286:18;5273:31;;5147:4;5144:1;5140:12;5135:17;;5110:208;;;5346:6;5337:7;5334:19;5331:179;;;5404:9;5399:3;5395:19;5389:26;5447:48;5489:4;5481:6;5477:17;5466:9;5447:48;:::i;:::-;5439:6;5432:64;5354:156;5331:179;5556:1;5552;5544:6;5540:14;5536:22;5530:4;5523:36;4958:611;;;4921:887;;4511:1303;;;4419:1395;;:::o;5820:180::-;5868:77;5865:1;5858:88;5965:4;5962:1;5955:15;5989:4;5986:1;5979:15;6006:191;6046:3;6065:20;6083:1;6065:20;:::i;:::-;6060:25;;6099:20;6117:1;6099:20;:::i;:::-;6094:25;;6142:1;6139;6135:9;6128:16;;6163:3;6160:1;6157:10;6154:36;;;6170:18;;:::i;:::-;6154:36;6006:191;;;;:::o;6203:118::-;6290:24;6308:5;6290:24;:::i;:::-;6285:3;6278:37;6203:118;;:::o;6327:332::-;6448:4;6486:2;6475:9;6471:18;6463:26;;6499:71;6567:1;6556:9;6552:17;6543:6;6499:71;:::i;:::-;6580:72;6648:2;6637:9;6633:18;6624:6;6580:72;:::i;:::-;6327:332;;;;;:::o;6665:553::-;6842:4;6880:3;6869:9;6865:19;6857:27;;6894:71;6962:1;6951:9;6947:17;6938:6;6894:71;:::i;:::-;6975:72;7043:2;7032:9;7028:18;7019:6;6975:72;:::i;:::-;7057;7125:2;7114:9;7110:18;7101:6;7057:72;:::i;:::-;7139;7207:2;7196:9;7192:18;7183:6;7139:72;:::i;:::-;6665:553;;;;;;;:::o;7224:233::-;7263:3;7286:24;7304:5;7286:24;:::i;:::-;7277:33;;7332:66;7325:5;7322:77;7319:103;;7402:18;;:::i;:::-;7319:103;7449:1;7442:5;7438:13;7431:20;;7224:233;;;:::o;7463:114::-;7530:6;7564:5;7558:12;7548:22;;7463:114;;;:::o;7583:184::-;7682:11;7716:6;7711:3;7704:19;7756:4;7751:3;7747:14;7732:29;;7583:184;;;;:::o;7773:132::-;7840:4;7863:3;7855:11;;7893:4;7888:3;7884:14;7876:22;;7773:132;;;:::o;7911:108::-;7988:24;8006:5;7988:24;:::i;:::-;7983:3;7976:37;7911:108;;:::o;8025:179::-;8094:10;8115:46;8157:3;8149:6;8115:46;:::i;:::-;8193:4;8188:3;8184:14;8170:28;;8025:179;;;;:::o;8210:113::-;8280:4;8312;8307:3;8303:14;8295:22;;8210:113;;;:::o;8359:732::-;8478:3;8507:54;8555:5;8507:54;:::i;:::-;8577:86;8656:6;8651:3;8577:86;:::i;:::-;8570:93;;8687:56;8737:5;8687:56;:::i;:::-;8766:7;8797:1;8782:284;8807:6;8804:1;8801:13;8782:284;;;8883:6;8877:13;8910:63;8969:3;8954:13;8910:63;:::i;:::-;8903:70;;8996:60;9049:6;8996:60;:::i;:::-;8986:70;;8842:224;8829:1;8826;8822:9;8817:14;;8782:284;;;8786:14;9082:3;9075:10;;8483:608;;;8359:732;;;;:::o;9097:634::-;9318:4;9356:2;9345:9;9341:18;9333:26;;9405:9;9399:4;9395:20;9391:1;9380:9;9376:17;9369:47;9433:108;9536:4;9527:6;9433:108;:::i;:::-;9425:116;;9588:9;9582:4;9578:20;9573:2;9562:9;9558:18;9551:48;9616:108;9719:4;9710:6;9616:108;:::i;:::-;9608:116;;9097:634;;;;;:::o;9737:98::-;9788:6;9822:5;9816:12;9806:22;;9737:98;;;:::o;9841:168::-;9924:11;9958:6;9953:3;9946:19;9998:4;9993:3;9989:14;9974:29;;9841:168;;;;:::o;10015:246::-;10096:1;10106:113;10120:6;10117:1;10114:13;10106:113;;;10205:1;10200:3;10196:11;10190:18;10186:1;10181:3;10177:11;10170:39;10142:2;10139:1;10135:10;10130:15;;10106:113;;;10253:1;10244:6;10239:3;10235:16;10228:27;10077:184;10015:246;;;:::o;10267:102::-;10308:6;10359:2;10355:7;10350:2;10343:5;10339:14;10335:28;10325:38;;10267:102;;;:::o;10375:373::-;10461:3;10489:38;10521:5;10489:38;:::i;:::-;10543:70;10606:6;10601:3;10543:70;:::i;:::-;10536:77;;10622:65;10680:6;10675:3;10668:4;10661:5;10657:16;10622:65;:::i;:::-;10712:29;10734:6;10712:29;:::i;:::-;10707:3;10703:39;10696:46;;10465:283;10375:373;;;;:::o;10754:751::-;10977:4;11015:3;11004:9;11000:19;10992:27;;11029:71;11097:1;11086:9;11082:17;11073:6;11029:71;:::i;:::-;11110:72;11178:2;11167:9;11163:18;11154:6;11110:72;:::i;:::-;11192;11260:2;11249:9;11245:18;11236:6;11192:72;:::i;:::-;11274;11342:2;11331:9;11327:18;11318:6;11274:72;:::i;:::-;11394:9;11388:4;11384:20;11378:3;11367:9;11363:19;11356:49;11422:76;11493:4;11484:6;11422:76;:::i;:::-;11414:84;;10754:751;;;;;;;;:::o;11592:117::-;11701:1;11698;11691:12;11838:149;11874:7;11914:66;11907:5;11903:78;11892:89;;11838:149;;;:::o;11993:120::-;12065:23;12082:5;12065:23;:::i;:::-;12058:5;12055:34;12045:62;;12103:1;12100;12093:12;12045:62;11993:120;:::o;12119:141::-;12175:5;12206:6;12200:13;12191:22;;12222:32;12248:5;12222:32;:::i;:::-;12119:141;;;;:::o;12266:349::-;12335:6;12384:2;12372:9;12363:7;12359:23;12355:32;12352:119;;;12390:79;;:::i;:::-;12352:119;12510:1;12535:63;12590:7;12581:6;12570:9;12566:22;12535:63;:::i;:::-;12525:73;;12481:127;12266:349;;;;:::o;12621:1053::-;12944:4;12982:3;12971:9;12967:19;12959:27;;12996:71;13064:1;13053:9;13049:17;13040:6;12996:71;:::i;:::-;13077:72;13145:2;13134:9;13130:18;13121:6;13077:72;:::i;:::-;13196:9;13190:4;13186:20;13181:2;13170:9;13166:18;13159:48;13224:108;13327:4;13318:6;13224:108;:::i;:::-;13216:116;;13379:9;13373:4;13369:20;13364:2;13353:9;13349:18;13342:48;13407:108;13510:4;13501:6;13407:108;:::i;:::-;13399:116;;13563:9;13557:4;13553:20;13547:3;13536:9;13532:19;13525:49;13591:76;13662:4;13653:6;13591:76;:::i;:::-;13583:84;;12621:1053;;;;;;;;:::o;171:742:12:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_asSingletonArrays_1334": {
									"entryPoint": 4039,
									"id": 1334,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@_burn_1101": {
									"entryPoint": 3254,
									"id": 1101,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 2486,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1318": {
									"entryPoint": 5608,
									"id": 1318,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1248": {
									"entryPoint": 5177,
									"id": 1248,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_mint_1010": {
									"entryPoint": 2621,
									"id": 1010,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_1711": {
									"entryPoint": 2770,
									"id": 1711,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_947": {
									"entryPoint": 2777,
									"id": 947,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_892": {
									"entryPoint": 3777,
									"id": 892,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1180": {
									"entryPoint": 3416,
									"id": 1180,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3059,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_updateWithAcceptanceCheck_826": {
									"entryPoint": 4087,
									"id": 826,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_update_750": {
									"entryPoint": 4259,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@balanceOfBatch_474": {
									"entryPoint": 1452,
									"id": 474,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_404": {
									"entryPoint": 731,
									"id": 404,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@burnToken_3012": {
									"entryPoint": 1740,
									"id": 3012,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@isApprovedForAll_507": {
									"entryPoint": 1940,
									"id": 507,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mintToken_2978": {
									"entryPoint": 1187,
									"id": 2978,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 1878,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1721,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeBatchTransferFrom_597": {
									"entryPoint": 1285,
									"id": 597,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_551": {
									"entryPoint": 2082,
									"id": 551,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_490": {
									"entryPoint": 1918,
									"id": 490,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1854": {
									"entryPoint": 2381,
									"id": 1854,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_376": {
									"entryPoint": 816,
									"id": 376,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenSupply_2933": {
									"entryPoint": 1264,
									"id": 2933,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 2249,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unsafeMemoryAccess_1685": {
									"entryPoint": 3040,
									"id": 1685,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unsafeMemoryAccess_1698": {
									"entryPoint": 3021,
									"id": 1698,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@uri_387": {
									"entryPoint": 1041,
									"id": 387,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 7495,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6924,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 7139,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6126,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 7599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7028,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 8039,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 6364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 9201,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 7204,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6177,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8121,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 7249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 8183,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 8059,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6197,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6384,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 9221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6478,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 6691,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 7818,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7977,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 7853,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6438,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9057,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6603,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8796,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 7803,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6259,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7992,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 8562,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 9264,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 9113,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8911,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7945,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 8978,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6659,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8601,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 6851,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 6039,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 7452,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 7077,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7788,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7762,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 9031,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6521,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7841,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 7772,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9041,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6531,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8511,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8860,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6087,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 6299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6056,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6146,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 7125,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6547,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 8418,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 6802,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 8685,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8466,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8373,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 8640,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6757,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 6753,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 6920,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 7073,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6052,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6048,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5": {
									"entryPoint": 8756,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6104,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8017,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 6342,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6155,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:25249:13",
										"nodeType": "YulBlock",
										"src": "0:25249:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "379:81:13",
													"nodeType": "YulBlock",
													"src": "379:81:13",
													"statements": [
														{
															"nativeSrc": "389:65:13",
															"nodeType": "YulAssignment",
															"src": "389:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:13",
																		"nodeType": "YulLiteral",
																		"src": "411:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:13"
																},
																"nativeSrc": "400:54:13",
																"nodeType": "YulFunctionCall",
																"src": "400:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:13",
														"nodeType": "YulTypedName",
														"src": "361:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:13",
														"nodeType": "YulTypedName",
														"src": "371:7:13",
														"type": ""
													}
												],
												"src": "334:126:13"
											},
											{
												"body": {
													"nativeSrc": "511:51:13",
													"nodeType": "YulBlock",
													"src": "511:51:13",
													"statements": [
														{
															"nativeSrc": "521:35:13",
															"nodeType": "YulAssignment",
															"src": "521:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:13"
																},
																"nativeSrc": "532:24:13",
																"nodeType": "YulFunctionCall",
																"src": "532:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:13",
														"nodeType": "YulTypedName",
														"src": "493:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:13",
														"nodeType": "YulTypedName",
														"src": "503:7:13",
														"type": ""
													}
												],
												"src": "466:96:13"
											},
											{
												"body": {
													"nativeSrc": "611:79:13",
													"nodeType": "YulBlock",
													"src": "611:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:13",
																"nodeType": "YulBlock",
																"src": "668:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:13",
																					"nodeType": "YulLiteral",
																					"src": "677:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:13",
																					"nodeType": "YulLiteral",
																					"src": "680:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:13"
																			},
																			"nativeSrc": "670:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:13"
																		},
																		"nativeSrc": "670:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:13"
																				},
																				"nativeSrc": "641:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:13"
																		},
																		"nativeSrc": "631:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:13"
																},
																"nativeSrc": "624:43:13",
																"nodeType": "YulFunctionCall",
																"src": "624:43:13"
															},
															"nativeSrc": "621:63:13",
															"nodeType": "YulIf",
															"src": "621:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:13",
														"nodeType": "YulTypedName",
														"src": "604:5:13",
														"type": ""
													}
												],
												"src": "568:122:13"
											},
											{
												"body": {
													"nativeSrc": "748:87:13",
													"nodeType": "YulBlock",
													"src": "748:87:13",
													"statements": [
														{
															"nativeSrc": "758:29:13",
															"nodeType": "YulAssignment",
															"src": "758:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:13"
																},
																"nativeSrc": "767:20:13",
																"nodeType": "YulFunctionCall",
																"src": "767:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:13"
																},
																"nativeSrc": "796:33:13",
																"nodeType": "YulFunctionCall",
																"src": "796:33:13"
															},
															"nativeSrc": "796:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:13",
														"nodeType": "YulTypedName",
														"src": "726:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:13",
														"nodeType": "YulTypedName",
														"src": "734:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:13",
														"nodeType": "YulTypedName",
														"src": "742:5:13",
														"type": ""
													}
												],
												"src": "696:139:13"
											},
											{
												"body": {
													"nativeSrc": "886:32:13",
													"nodeType": "YulBlock",
													"src": "886:32:13",
													"statements": [
														{
															"nativeSrc": "896:16:13",
															"nodeType": "YulAssignment",
															"src": "896:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "907:5:13",
																"nodeType": "YulIdentifier",
																"src": "907:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "896:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "841:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "868:5:13",
														"nodeType": "YulTypedName",
														"src": "868:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "878:7:13",
														"nodeType": "YulTypedName",
														"src": "878:7:13",
														"type": ""
													}
												],
												"src": "841:77:13"
											},
											{
												"body": {
													"nativeSrc": "967:79:13",
													"nodeType": "YulBlock",
													"src": "967:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:13",
																"nodeType": "YulBlock",
																"src": "1024:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:13"
																			},
																			"nativeSrc": "1026:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:13"
																		},
																		"nativeSrc": "1026:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "997:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:13"
																				},
																				"nativeSrc": "997:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:13"
																		},
																		"nativeSrc": "987:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:13"
																},
																"nativeSrc": "980:43:13",
																"nodeType": "YulFunctionCall",
																"src": "980:43:13"
															},
															"nativeSrc": "977:63:13",
															"nodeType": "YulIf",
															"src": "977:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "924:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:13",
														"nodeType": "YulTypedName",
														"src": "960:5:13",
														"type": ""
													}
												],
												"src": "924:122:13"
											},
											{
												"body": {
													"nativeSrc": "1104:87:13",
													"nodeType": "YulBlock",
													"src": "1104:87:13",
													"statements": [
														{
															"nativeSrc": "1114:29:13",
															"nodeType": "YulAssignment",
															"src": "1114:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:13"
																},
																"nativeSrc": "1123:20:13",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1152:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:13"
																},
																"nativeSrc": "1152:33:13",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:13"
															},
															"nativeSrc": "1152:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1052:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:13",
														"nodeType": "YulTypedName",
														"src": "1082:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:13",
														"nodeType": "YulTypedName",
														"src": "1090:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:13",
														"nodeType": "YulTypedName",
														"src": "1098:5:13",
														"type": ""
													}
												],
												"src": "1052:139:13"
											},
											{
												"body": {
													"nativeSrc": "1280:391:13",
													"nodeType": "YulBlock",
													"src": "1280:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1326:83:13",
																"nodeType": "YulBlock",
																"src": "1326:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1328:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:13"
																			},
																			"nativeSrc": "1328:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:13"
																		},
																		"nativeSrc": "1328:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1301:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1310:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1297:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:13"
																		},
																		"nativeSrc": "1297:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1322:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1293:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:13"
																},
																"nativeSrc": "1293:32:13",
																"nodeType": "YulFunctionCall",
																"src": "1293:32:13"
															},
															"nativeSrc": "1290:119:13",
															"nodeType": "YulIf",
															"src": "1290:119:13"
														},
														{
															"nativeSrc": "1419:117:13",
															"nodeType": "YulBlock",
															"src": "1419:117:13",
															"statements": [
																{
																	"nativeSrc": "1434:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1448:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1438:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1463:63:13",
																	"nodeType": "YulAssignment",
																	"src": "1463:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1498:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1509:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1494:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:13"
																				},
																				"nativeSrc": "1494:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1518:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1473:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:13"
																		},
																		"nativeSrc": "1473:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1463:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1546:118:13",
															"nodeType": "YulBlock",
															"src": "1546:118:13",
															"statements": [
																{
																	"nativeSrc": "1561:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1575:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1565:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1591:63:13",
																	"nodeType": "YulAssignment",
																	"src": "1591:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1626:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1637:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1622:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:13"
																				},
																				"nativeSrc": "1622:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1646:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1601:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:13"
																		},
																		"nativeSrc": "1601:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1591:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1197:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1242:9:13",
														"nodeType": "YulTypedName",
														"src": "1242:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1253:7:13",
														"nodeType": "YulTypedName",
														"src": "1253:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1265:6:13",
														"nodeType": "YulTypedName",
														"src": "1265:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1273:6:13",
														"nodeType": "YulTypedName",
														"src": "1273:6:13",
														"type": ""
													}
												],
												"src": "1197:474:13"
											},
											{
												"body": {
													"nativeSrc": "1742:53:13",
													"nodeType": "YulBlock",
													"src": "1742:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1759:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1759:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1782:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1782:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1764:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "1764:17:13"
																		},
																		"nativeSrc": "1764:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1764:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1752:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1752:6:13"
																},
																"nativeSrc": "1752:37:13",
																"nodeType": "YulFunctionCall",
																"src": "1752:37:13"
															},
															"nativeSrc": "1752:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "1752:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1677:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1730:5:13",
														"nodeType": "YulTypedName",
														"src": "1730:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1737:3:13",
														"nodeType": "YulTypedName",
														"src": "1737:3:13",
														"type": ""
													}
												],
												"src": "1677:118:13"
											},
											{
												"body": {
													"nativeSrc": "1899:124:13",
													"nodeType": "YulBlock",
													"src": "1899:124:13",
													"statements": [
														{
															"nativeSrc": "1909:26:13",
															"nodeType": "YulAssignment",
															"src": "1909:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1921:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1921:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1932:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1932:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1917:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1917:3:13"
																},
																"nativeSrc": "1917:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1917:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1909:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1909:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1989:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1989:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2002:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2002:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2013:1:13",
																				"nodeType": "YulLiteral",
																				"src": "2013:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1998:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1998:3:13"
																		},
																		"nativeSrc": "1998:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1998:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1945:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "1945:43:13"
																},
																"nativeSrc": "1945:71:13",
																"nodeType": "YulFunctionCall",
																"src": "1945:71:13"
															},
															"nativeSrc": "1945:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "1945:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1801:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1871:9:13",
														"nodeType": "YulTypedName",
														"src": "1871:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1883:6:13",
														"nodeType": "YulTypedName",
														"src": "1883:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1894:4:13",
														"nodeType": "YulTypedName",
														"src": "1894:4:13",
														"type": ""
													}
												],
												"src": "1801:222:13"
											},
											{
												"body": {
													"nativeSrc": "2073:105:13",
													"nodeType": "YulBlock",
													"src": "2073:105:13",
													"statements": [
														{
															"nativeSrc": "2083:89:13",
															"nodeType": "YulAssignment",
															"src": "2083:89:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2098:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2098:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2105:66:13",
																		"nodeType": "YulLiteral",
																		"src": "2105:66:13",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2094:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2094:3:13"
																},
																"nativeSrc": "2094:78:13",
																"nodeType": "YulFunctionCall",
																"src": "2094:78:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2083:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "2083:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "2029:149:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2055:5:13",
														"nodeType": "YulTypedName",
														"src": "2055:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2065:7:13",
														"nodeType": "YulTypedName",
														"src": "2065:7:13",
														"type": ""
													}
												],
												"src": "2029:149:13"
											},
											{
												"body": {
													"nativeSrc": "2226:78:13",
													"nodeType": "YulBlock",
													"src": "2226:78:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2282:16:13",
																"nodeType": "YulBlock",
																"src": "2282:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2291:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2291:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2294:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2294:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2284:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2284:6:13"
																			},
																			"nativeSrc": "2284:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2284:12:13"
																		},
																		"nativeSrc": "2284:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2284:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2249:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2249:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2273:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "2273:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "2256:16:13",
																					"nodeType": "YulIdentifier",
																					"src": "2256:16:13"
																				},
																				"nativeSrc": "2256:23:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2256:23:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2246:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "2246:2:13"
																		},
																		"nativeSrc": "2246:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2246:34:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2239:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2239:6:13"
																},
																"nativeSrc": "2239:42:13",
																"nodeType": "YulFunctionCall",
																"src": "2239:42:13"
															},
															"nativeSrc": "2236:62:13",
															"nodeType": "YulIf",
															"src": "2236:62:13"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "2184:120:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2219:5:13",
														"nodeType": "YulTypedName",
														"src": "2219:5:13",
														"type": ""
													}
												],
												"src": "2184:120:13"
											},
											{
												"body": {
													"nativeSrc": "2361:86:13",
													"nodeType": "YulBlock",
													"src": "2361:86:13",
													"statements": [
														{
															"nativeSrc": "2371:29:13",
															"nodeType": "YulAssignment",
															"src": "2371:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2393:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2380:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "2380:12:13"
																},
																"nativeSrc": "2380:20:13",
																"nodeType": "YulFunctionCall",
																"src": "2380:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2371:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2371:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2435:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2435:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "2409:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "2409:25:13"
																},
																"nativeSrc": "2409:32:13",
																"nodeType": "YulFunctionCall",
																"src": "2409:32:13"
															},
															"nativeSrc": "2409:32:13",
															"nodeType": "YulExpressionStatement",
															"src": "2409:32:13"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "2310:137:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2339:6:13",
														"nodeType": "YulTypedName",
														"src": "2339:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2347:3:13",
														"nodeType": "YulTypedName",
														"src": "2347:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2355:5:13",
														"nodeType": "YulTypedName",
														"src": "2355:5:13",
														"type": ""
													}
												],
												"src": "2310:137:13"
											},
											{
												"body": {
													"nativeSrc": "2518:262:13",
													"nodeType": "YulBlock",
													"src": "2518:262:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2564:83:13",
																"nodeType": "YulBlock",
																"src": "2564:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2566:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "2566:77:13"
																			},
																			"nativeSrc": "2566:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2566:79:13"
																		},
																		"nativeSrc": "2566:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2566:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2539:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2539:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2548:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2548:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2535:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2535:3:13"
																		},
																		"nativeSrc": "2535:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2535:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2560:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2560:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2531:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2531:3:13"
																},
																"nativeSrc": "2531:32:13",
																"nodeType": "YulFunctionCall",
																"src": "2531:32:13"
															},
															"nativeSrc": "2528:119:13",
															"nodeType": "YulIf",
															"src": "2528:119:13"
														},
														{
															"nativeSrc": "2657:116:13",
															"nodeType": "YulBlock",
															"src": "2657:116:13",
															"statements": [
																{
																	"nativeSrc": "2672:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2672:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2686:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2686:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2676:6:13",
																			"nodeType": "YulTypedName",
																			"src": "2676:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2701:62:13",
																	"nodeType": "YulAssignment",
																	"src": "2701:62:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2735:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "2735:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2746:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2746:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2731:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2731:3:13"
																				},
																				"nativeSrc": "2731:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2731:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2755:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2755:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "2711:19:13",
																			"nodeType": "YulIdentifier",
																			"src": "2711:19:13"
																		},
																		"nativeSrc": "2711:52:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2711:52:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2701:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "2701:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "2453:327:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2488:9:13",
														"nodeType": "YulTypedName",
														"src": "2488:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2499:7:13",
														"nodeType": "YulTypedName",
														"src": "2499:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2511:6:13",
														"nodeType": "YulTypedName",
														"src": "2511:6:13",
														"type": ""
													}
												],
												"src": "2453:327:13"
											},
											{
												"body": {
													"nativeSrc": "2828:48:13",
													"nodeType": "YulBlock",
													"src": "2828:48:13",
													"statements": [
														{
															"nativeSrc": "2838:32:13",
															"nodeType": "YulAssignment",
															"src": "2838:32:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2863:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2863:5:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2856:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "2856:6:13"
																		},
																		"nativeSrc": "2856:13:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2856:13:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2849:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2849:6:13"
																},
																"nativeSrc": "2849:21:13",
																"nodeType": "YulFunctionCall",
																"src": "2849:21:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2838:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "2838:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2786:90:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2810:5:13",
														"nodeType": "YulTypedName",
														"src": "2810:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2820:7:13",
														"nodeType": "YulTypedName",
														"src": "2820:7:13",
														"type": ""
													}
												],
												"src": "2786:90:13"
											},
											{
												"body": {
													"nativeSrc": "2941:50:13",
													"nodeType": "YulBlock",
													"src": "2941:50:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2958:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2958:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2978:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2978:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "2963:14:13",
																			"nodeType": "YulIdentifier",
																			"src": "2963:14:13"
																		},
																		"nativeSrc": "2963:21:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2963:21:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2951:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2951:6:13"
																},
																"nativeSrc": "2951:34:13",
																"nodeType": "YulFunctionCall",
																"src": "2951:34:13"
															},
															"nativeSrc": "2951:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "2951:34:13"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "2882:109:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2929:5:13",
														"nodeType": "YulTypedName",
														"src": "2929:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2936:3:13",
														"nodeType": "YulTypedName",
														"src": "2936:3:13",
														"type": ""
													}
												],
												"src": "2882:109:13"
											},
											{
												"body": {
													"nativeSrc": "3089:118:13",
													"nodeType": "YulBlock",
													"src": "3089:118:13",
													"statements": [
														{
															"nativeSrc": "3099:26:13",
															"nodeType": "YulAssignment",
															"src": "3099:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3111:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3111:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3122:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3122:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3107:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3107:3:13"
																},
																"nativeSrc": "3107:18:13",
																"nodeType": "YulFunctionCall",
																"src": "3107:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3099:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3099:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3173:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3173:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3186:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3186:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3197:1:13",
																				"nodeType": "YulLiteral",
																				"src": "3197:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3182:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3182:3:13"
																		},
																		"nativeSrc": "3182:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3182:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3135:37:13",
																	"nodeType": "YulIdentifier",
																	"src": "3135:37:13"
																},
																"nativeSrc": "3135:65:13",
																"nodeType": "YulFunctionCall",
																"src": "3135:65:13"
															},
															"nativeSrc": "3135:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "3135:65:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "2997:210:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3061:9:13",
														"nodeType": "YulTypedName",
														"src": "3061:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3073:6:13",
														"nodeType": "YulTypedName",
														"src": "3073:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3084:4:13",
														"nodeType": "YulTypedName",
														"src": "3084:4:13",
														"type": ""
													}
												],
												"src": "2997:210:13"
											},
											{
												"body": {
													"nativeSrc": "3279:263:13",
													"nodeType": "YulBlock",
													"src": "3279:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3325:83:13",
																"nodeType": "YulBlock",
																"src": "3325:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3327:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "3327:77:13"
																			},
																			"nativeSrc": "3327:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3327:79:13"
																		},
																		"nativeSrc": "3327:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3327:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3300:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3300:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3309:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3309:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3296:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3296:3:13"
																		},
																		"nativeSrc": "3296:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3296:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3321:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3321:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3292:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3292:3:13"
																},
																"nativeSrc": "3292:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3292:32:13"
															},
															"nativeSrc": "3289:119:13",
															"nodeType": "YulIf",
															"src": "3289:119:13"
														},
														{
															"nativeSrc": "3418:117:13",
															"nodeType": "YulBlock",
															"src": "3418:117:13",
															"statements": [
																{
																	"nativeSrc": "3433:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3433:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3447:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3447:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3437:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3437:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3462:63:13",
																	"nodeType": "YulAssignment",
																	"src": "3462:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3497:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3497:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3508:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3508:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3493:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3493:3:13"
																				},
																				"nativeSrc": "3493:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3493:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3517:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3517:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3472:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "3472:20:13"
																		},
																		"nativeSrc": "3472:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3472:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3462:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3462:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3213:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3249:9:13",
														"nodeType": "YulTypedName",
														"src": "3249:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3260:7:13",
														"nodeType": "YulTypedName",
														"src": "3260:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3272:6:13",
														"nodeType": "YulTypedName",
														"src": "3272:6:13",
														"type": ""
													}
												],
												"src": "3213:329:13"
											},
											{
												"body": {
													"nativeSrc": "3607:40:13",
													"nodeType": "YulBlock",
													"src": "3607:40:13",
													"statements": [
														{
															"nativeSrc": "3618:22:13",
															"nodeType": "YulAssignment",
															"src": "3618:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3634:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3634:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3628:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3628:5:13"
																},
																"nativeSrc": "3628:12:13",
																"nodeType": "YulFunctionCall",
																"src": "3628:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3618:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3618:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "3548:99:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3590:5:13",
														"nodeType": "YulTypedName",
														"src": "3590:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3600:6:13",
														"nodeType": "YulTypedName",
														"src": "3600:6:13",
														"type": ""
													}
												],
												"src": "3548:99:13"
											},
											{
												"body": {
													"nativeSrc": "3749:73:13",
													"nodeType": "YulBlock",
													"src": "3749:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3766:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3766:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3771:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3771:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3759:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3759:6:13"
																},
																"nativeSrc": "3759:19:13",
																"nodeType": "YulFunctionCall",
																"src": "3759:19:13"
															},
															"nativeSrc": "3759:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "3759:19:13"
														},
														{
															"nativeSrc": "3787:29:13",
															"nodeType": "YulAssignment",
															"src": "3787:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3806:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3806:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3811:4:13",
																		"nodeType": "YulLiteral",
																		"src": "3811:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3802:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3802:3:13"
																},
																"nativeSrc": "3802:14:13",
																"nodeType": "YulFunctionCall",
																"src": "3802:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3787:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "3787:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3653:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3721:3:13",
														"nodeType": "YulTypedName",
														"src": "3721:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3726:6:13",
														"nodeType": "YulTypedName",
														"src": "3726:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3737:11:13",
														"nodeType": "YulTypedName",
														"src": "3737:11:13",
														"type": ""
													}
												],
												"src": "3653:169:13"
											},
											{
												"body": {
													"nativeSrc": "3890:184:13",
													"nodeType": "YulBlock",
													"src": "3890:184:13",
													"statements": [
														{
															"nativeSrc": "3900:10:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3900:10:13",
															"value": {
																"kind": "number",
																"nativeSrc": "3909:1:13",
																"nodeType": "YulLiteral",
																"src": "3909:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "3904:1:13",
																	"nodeType": "YulTypedName",
																	"src": "3904:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3969:63:13",
																"nodeType": "YulBlock",
																"src": "3969:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "3994:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "3994:3:13"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "3999:1:13",
																							"nodeType": "YulIdentifier",
																							"src": "3999:1:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3990:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "3990:3:13"
																					},
																					"nativeSrc": "3990:11:13",
																					"nodeType": "YulFunctionCall",
																					"src": "3990:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "4013:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "4013:3:13"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "4018:1:13",
																									"nodeType": "YulIdentifier",
																									"src": "4018:1:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4009:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "4009:3:13"
																							},
																							"nativeSrc": "4009:11:13",
																							"nodeType": "YulFunctionCall",
																							"src": "4009:11:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "4003:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "4003:5:13"
																					},
																					"nativeSrc": "4003:18:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4003:18:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3983:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3983:6:13"
																			},
																			"nativeSrc": "3983:39:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3983:39:13"
																		},
																		"nativeSrc": "3983:39:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3983:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "3930:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "3930:1:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3933:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3933:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3927:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "3927:2:13"
																},
																"nativeSrc": "3927:13:13",
																"nodeType": "YulFunctionCall",
																"src": "3927:13:13"
															},
															"nativeSrc": "3919:113:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3941:19:13",
																"nodeType": "YulBlock",
																"src": "3941:19:13",
																"statements": [
																	{
																		"nativeSrc": "3943:15:13",
																		"nodeType": "YulAssignment",
																		"src": "3943:15:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "3952:1:13",
																					"nodeType": "YulIdentifier",
																					"src": "3952:1:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3955:2:13",
																					"nodeType": "YulLiteral",
																					"src": "3955:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3948:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "3948:3:13"
																			},
																			"nativeSrc": "3948:10:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3948:10:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "3943:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "3943:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3923:3:13",
																"nodeType": "YulBlock",
																"src": "3923:3:13",
																"statements": []
															},
															"src": "3919:113:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "4052:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "4052:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "4057:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4057:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4048:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4048:3:13"
																		},
																		"nativeSrc": "4048:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4048:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4066:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4041:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4041:6:13"
																},
																"nativeSrc": "4041:27:13",
																"nodeType": "YulFunctionCall",
																"src": "4041:27:13"
															},
															"nativeSrc": "4041:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "4041:27:13"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "3828:246:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "3872:3:13",
														"nodeType": "YulTypedName",
														"src": "3872:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "3877:3:13",
														"nodeType": "YulTypedName",
														"src": "3877:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3882:6:13",
														"nodeType": "YulTypedName",
														"src": "3882:6:13",
														"type": ""
													}
												],
												"src": "3828:246:13"
											},
											{
												"body": {
													"nativeSrc": "4128:54:13",
													"nodeType": "YulBlock",
													"src": "4128:54:13",
													"statements": [
														{
															"nativeSrc": "4138:38:13",
															"nodeType": "YulAssignment",
															"src": "4138:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4156:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "4156:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4163:2:13",
																				"nodeType": "YulLiteral",
																				"src": "4163:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4152:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4152:3:13"
																		},
																		"nativeSrc": "4152:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4152:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4172:2:13",
																				"nodeType": "YulLiteral",
																				"src": "4172:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "4168:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4168:3:13"
																		},
																		"nativeSrc": "4168:7:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4168:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4148:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4148:3:13"
																},
																"nativeSrc": "4148:28:13",
																"nodeType": "YulFunctionCall",
																"src": "4148:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4138:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4138:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "4080:102:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4111:5:13",
														"nodeType": "YulTypedName",
														"src": "4111:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4121:6:13",
														"nodeType": "YulTypedName",
														"src": "4121:6:13",
														"type": ""
													}
												],
												"src": "4080:102:13"
											},
											{
												"body": {
													"nativeSrc": "4280:285:13",
													"nodeType": "YulBlock",
													"src": "4280:285:13",
													"statements": [
														{
															"nativeSrc": "4290:53:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4290:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4337:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "4337:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "4304:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "4304:32:13"
																},
																"nativeSrc": "4304:39:13",
																"nodeType": "YulFunctionCall",
																"src": "4304:39:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4294:6:13",
																	"nodeType": "YulTypedName",
																	"src": "4294:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4352:78:13",
															"nodeType": "YulAssignment",
															"src": "4352:78:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4418:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4418:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4423:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4423:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4359:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "4359:58:13"
																},
																"nativeSrc": "4359:71:13",
																"nodeType": "YulFunctionCall",
																"src": "4359:71:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4352:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4352:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4478:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "4478:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4485:4:13",
																				"nodeType": "YulLiteral",
																				"src": "4485:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4474:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4474:3:13"
																		},
																		"nativeSrc": "4474:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4474:16:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "4492:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4492:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4497:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4497:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "4439:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "4439:34:13"
																},
																"nativeSrc": "4439:65:13",
																"nodeType": "YulFunctionCall",
																"src": "4439:65:13"
															},
															"nativeSrc": "4439:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "4439:65:13"
														},
														{
															"nativeSrc": "4513:46:13",
															"nodeType": "YulAssignment",
															"src": "4513:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4524:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4524:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4551:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4551:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "4529:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "4529:21:13"
																		},
																		"nativeSrc": "4529:29:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4529:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4520:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4520:3:13"
																},
																"nativeSrc": "4520:39:13",
																"nodeType": "YulFunctionCall",
																"src": "4520:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4513:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4513:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4188:377:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4261:5:13",
														"nodeType": "YulTypedName",
														"src": "4261:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4268:3:13",
														"nodeType": "YulTypedName",
														"src": "4268:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4276:3:13",
														"nodeType": "YulTypedName",
														"src": "4276:3:13",
														"type": ""
													}
												],
												"src": "4188:377:13"
											},
											{
												"body": {
													"nativeSrc": "4689:195:13",
													"nodeType": "YulBlock",
													"src": "4689:195:13",
													"statements": [
														{
															"nativeSrc": "4699:26:13",
															"nodeType": "YulAssignment",
															"src": "4699:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4711:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4711:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4722:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4722:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4707:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4707:3:13"
																},
																"nativeSrc": "4707:18:13",
																"nodeType": "YulFunctionCall",
																"src": "4707:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4699:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4699:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4746:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4746:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4757:1:13",
																				"nodeType": "YulLiteral",
																				"src": "4757:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4742:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4742:3:13"
																		},
																		"nativeSrc": "4742:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4742:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4765:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "4765:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4771:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4771:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4761:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4761:3:13"
																		},
																		"nativeSrc": "4761:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4761:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4735:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4735:6:13"
																},
																"nativeSrc": "4735:47:13",
																"nodeType": "YulFunctionCall",
																"src": "4735:47:13"
															},
															"nativeSrc": "4735:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "4735:47:13"
														},
														{
															"nativeSrc": "4791:86:13",
															"nodeType": "YulAssignment",
															"src": "4791:86:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4863:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4863:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "4872:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4872:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4799:63:13",
																	"nodeType": "YulIdentifier",
																	"src": "4799:63:13"
																},
																"nativeSrc": "4799:78:13",
																"nodeType": "YulFunctionCall",
																"src": "4799:78:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4791:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4791:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4571:313:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4661:9:13",
														"nodeType": "YulTypedName",
														"src": "4661:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4673:6:13",
														"nodeType": "YulTypedName",
														"src": "4673:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4684:4:13",
														"nodeType": "YulTypedName",
														"src": "4684:4:13",
														"type": ""
													}
												],
												"src": "4571:313:13"
											},
											{
												"body": {
													"nativeSrc": "4973:391:13",
													"nodeType": "YulBlock",
													"src": "4973:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "5019:83:13",
																"nodeType": "YulBlock",
																"src": "5019:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5021:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "5021:77:13"
																			},
																			"nativeSrc": "5021:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5021:79:13"
																		},
																		"nativeSrc": "5021:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5021:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4994:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4994:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5003:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5003:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4990:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4990:3:13"
																		},
																		"nativeSrc": "4990:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4990:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5015:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5015:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4986:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4986:3:13"
																},
																"nativeSrc": "4986:32:13",
																"nodeType": "YulFunctionCall",
																"src": "4986:32:13"
															},
															"nativeSrc": "4983:119:13",
															"nodeType": "YulIf",
															"src": "4983:119:13"
														},
														{
															"nativeSrc": "5112:117:13",
															"nodeType": "YulBlock",
															"src": "5112:117:13",
															"statements": [
																{
																	"nativeSrc": "5127:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5127:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5141:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5141:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5131:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5131:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5156:63:13",
																	"nodeType": "YulAssignment",
																	"src": "5156:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5191:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5191:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5202:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5202:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5187:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5187:3:13"
																				},
																				"nativeSrc": "5187:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5187:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5211:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5211:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5166:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "5166:20:13"
																		},
																		"nativeSrc": "5166:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5166:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5156:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5156:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5239:118:13",
															"nodeType": "YulBlock",
															"src": "5239:118:13",
															"statements": [
																{
																	"nativeSrc": "5254:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5254:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5268:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5268:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5258:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5258:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5284:63:13",
																	"nodeType": "YulAssignment",
																	"src": "5284:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5319:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5319:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5330:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5330:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5315:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5315:3:13"
																				},
																				"nativeSrc": "5315:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5315:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5339:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5339:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5294:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "5294:20:13"
																		},
																		"nativeSrc": "5294:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5294:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5284:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5284:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "4890:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4935:9:13",
														"nodeType": "YulTypedName",
														"src": "4935:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4946:7:13",
														"nodeType": "YulTypedName",
														"src": "4946:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4958:6:13",
														"nodeType": "YulTypedName",
														"src": "4958:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4966:6:13",
														"nodeType": "YulTypedName",
														"src": "4966:6:13",
														"type": ""
													}
												],
												"src": "4890:474:13"
											},
											{
												"body": {
													"nativeSrc": "5459:28:13",
													"nodeType": "YulBlock",
													"src": "5459:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5476:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5476:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5479:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5479:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5469:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5469:6:13"
																},
																"nativeSrc": "5469:12:13",
																"nodeType": "YulFunctionCall",
																"src": "5469:12:13"
															},
															"nativeSrc": "5469:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "5469:12:13"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "5370:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "5370:117:13"
											},
											{
												"body": {
													"nativeSrc": "5521:152:13",
													"nodeType": "YulBlock",
													"src": "5521:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5538:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5538:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5541:77:13",
																		"nodeType": "YulLiteral",
																		"src": "5541:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5531:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5531:6:13"
																},
																"nativeSrc": "5531:88:13",
																"nodeType": "YulFunctionCall",
																"src": "5531:88:13"
															},
															"nativeSrc": "5531:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "5531:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5635:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5635:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5638:4:13",
																		"nodeType": "YulLiteral",
																		"src": "5638:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5628:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5628:6:13"
																},
																"nativeSrc": "5628:15:13",
																"nodeType": "YulFunctionCall",
																"src": "5628:15:13"
															},
															"nativeSrc": "5628:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "5628:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5659:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5659:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5662:4:13",
																		"nodeType": "YulLiteral",
																		"src": "5662:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5652:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5652:6:13"
																},
																"nativeSrc": "5652:15:13",
																"nodeType": "YulFunctionCall",
																"src": "5652:15:13"
															},
															"nativeSrc": "5652:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "5652:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "5493:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "5493:180:13"
											},
											{
												"body": {
													"nativeSrc": "5722:238:13",
													"nodeType": "YulBlock",
													"src": "5722:238:13",
													"statements": [
														{
															"nativeSrc": "5732:58:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5732:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5754:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5754:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "5784:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "5784:4:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "5762:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "5762:21:13"
																		},
																		"nativeSrc": "5762:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5762:27:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5750:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5750:3:13"
																},
																"nativeSrc": "5750:40:13",
																"nodeType": "YulFunctionCall",
																"src": "5750:40:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "5736:10:13",
																	"nodeType": "YulTypedName",
																	"src": "5736:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5901:22:13",
																"nodeType": "YulBlock",
																"src": "5901:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5903:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "5903:16:13"
																			},
																			"nativeSrc": "5903:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5903:18:13"
																		},
																		"nativeSrc": "5903:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5903:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5844:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "5844:10:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5856:18:13",
																				"nodeType": "YulLiteral",
																				"src": "5856:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5841:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "5841:2:13"
																		},
																		"nativeSrc": "5841:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5841:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5880:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "5880:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "5892:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5892:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5877:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "5877:2:13"
																		},
																		"nativeSrc": "5877:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5877:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5838:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5838:2:13"
																},
																"nativeSrc": "5838:62:13",
																"nodeType": "YulFunctionCall",
																"src": "5838:62:13"
															},
															"nativeSrc": "5835:88:13",
															"nodeType": "YulIf",
															"src": "5835:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5939:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5939:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "5943:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "5943:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5932:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5932:6:13"
																},
																"nativeSrc": "5932:22:13",
																"nodeType": "YulFunctionCall",
																"src": "5932:22:13"
															},
															"nativeSrc": "5932:22:13",
															"nodeType": "YulExpressionStatement",
															"src": "5932:22:13"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "5679:281:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5708:6:13",
														"nodeType": "YulTypedName",
														"src": "5708:6:13",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "5716:4:13",
														"nodeType": "YulTypedName",
														"src": "5716:4:13",
														"type": ""
													}
												],
												"src": "5679:281:13"
											},
											{
												"body": {
													"nativeSrc": "6007:88:13",
													"nodeType": "YulBlock",
													"src": "6007:88:13",
													"statements": [
														{
															"nativeSrc": "6017:30:13",
															"nodeType": "YulAssignment",
															"src": "6017:30:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "6027:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "6027:18:13"
																},
																"nativeSrc": "6027:20:13",
																"nodeType": "YulFunctionCall",
																"src": "6027:20:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "6017:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6017:6:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6076:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6076:6:13"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "6084:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "6084:4:13"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "6056:19:13",
																	"nodeType": "YulIdentifier",
																	"src": "6056:19:13"
																},
																"nativeSrc": "6056:33:13",
																"nodeType": "YulFunctionCall",
																"src": "6056:33:13"
															},
															"nativeSrc": "6056:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "6056:33:13"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "5966:129:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "5991:4:13",
														"nodeType": "YulTypedName",
														"src": "5991:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "6000:6:13",
														"nodeType": "YulTypedName",
														"src": "6000:6:13",
														"type": ""
													}
												],
												"src": "5966:129:13"
											},
											{
												"body": {
													"nativeSrc": "6183:229:13",
													"nodeType": "YulBlock",
													"src": "6183:229:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6288:22:13",
																"nodeType": "YulBlock",
																"src": "6288:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6290:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "6290:16:13"
																			},
																			"nativeSrc": "6290:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6290:18:13"
																		},
																		"nativeSrc": "6290:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6290:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6260:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6260:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6268:18:13",
																		"nodeType": "YulLiteral",
																		"src": "6268:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6257:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "6257:2:13"
																},
																"nativeSrc": "6257:30:13",
																"nodeType": "YulFunctionCall",
																"src": "6257:30:13"
															},
															"nativeSrc": "6254:56:13",
															"nodeType": "YulIf",
															"src": "6254:56:13"
														},
														{
															"nativeSrc": "6320:25:13",
															"nodeType": "YulAssignment",
															"src": "6320:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6332:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6332:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6340:4:13",
																		"nodeType": "YulLiteral",
																		"src": "6340:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "6328:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6328:3:13"
																},
																"nativeSrc": "6328:17:13",
																"nodeType": "YulFunctionCall",
																"src": "6328:17:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6320:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6320:4:13"
																}
															]
														},
														{
															"nativeSrc": "6382:23:13",
															"nodeType": "YulAssignment",
															"src": "6382:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "6394:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "6394:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6400:4:13",
																		"nodeType": "YulLiteral",
																		"src": "6400:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6390:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6390:3:13"
																},
																"nativeSrc": "6390:15:13",
																"nodeType": "YulFunctionCall",
																"src": "6390:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6382:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6382:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "6101:311:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "6167:6:13",
														"nodeType": "YulTypedName",
														"src": "6167:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "6178:4:13",
														"nodeType": "YulTypedName",
														"src": "6178:4:13",
														"type": ""
													}
												],
												"src": "6101:311:13"
											},
											{
												"body": {
													"nativeSrc": "6507:28:13",
													"nodeType": "YulBlock",
													"src": "6507:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6524:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6524:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6527:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6527:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6517:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6517:6:13"
																},
																"nativeSrc": "6517:12:13",
																"nodeType": "YulFunctionCall",
																"src": "6517:12:13"
															},
															"nativeSrc": "6517:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "6517:12:13"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "6418:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "6418:117:13"
											},
											{
												"body": {
													"nativeSrc": "6660:608:13",
													"nodeType": "YulBlock",
													"src": "6660:608:13",
													"statements": [
														{
															"nativeSrc": "6670:90:13",
															"nodeType": "YulAssignment",
															"src": "6670:90:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6752:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6752:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "6695:56:13",
																			"nodeType": "YulIdentifier",
																			"src": "6695:56:13"
																		},
																		"nativeSrc": "6695:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6695:64:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "6679:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "6679:15:13"
																},
																"nativeSrc": "6679:81:13",
																"nodeType": "YulFunctionCall",
																"src": "6679:81:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6670:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "6670:5:13"
																}
															]
														},
														{
															"nativeSrc": "6769:16:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6769:16:13",
															"value": {
																"name": "array",
																"nativeSrc": "6780:5:13",
																"nodeType": "YulIdentifier",
																"src": "6780:5:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "6773:3:13",
																	"nodeType": "YulTypedName",
																	"src": "6773:3:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6802:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6802:5:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6809:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6809:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6795:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6795:6:13"
																},
																"nativeSrc": "6795:21:13",
																"nodeType": "YulFunctionCall",
																"src": "6795:21:13"
															},
															"nativeSrc": "6795:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "6795:21:13"
														},
														{
															"nativeSrc": "6825:23:13",
															"nodeType": "YulAssignment",
															"src": "6825:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6836:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6836:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6843:4:13",
																		"nodeType": "YulLiteral",
																		"src": "6843:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6832:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6832:3:13"
																},
																"nativeSrc": "6832:16:13",
																"nodeType": "YulFunctionCall",
																"src": "6832:16:13"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "6825:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6825:3:13"
																}
															]
														},
														{
															"nativeSrc": "6858:44:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6858:44:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6876:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6876:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6888:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6888:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6896:4:13",
																				"nodeType": "YulLiteral",
																				"src": "6896:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "6884:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6884:3:13"
																		},
																		"nativeSrc": "6884:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6884:17:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6872:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6872:3:13"
																},
																"nativeSrc": "6872:30:13",
																"nodeType": "YulFunctionCall",
																"src": "6872:30:13"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "6862:6:13",
																	"nodeType": "YulTypedName",
																	"src": "6862:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6930:103:13",
																"nodeType": "YulBlock",
																"src": "6930:103:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "6944:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "6944:77:13"
																			},
																			"nativeSrc": "6944:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6944:79:13"
																		},
																		"nativeSrc": "6944:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6944:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "6917:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6917:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6925:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6925:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6914:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "6914:2:13"
																},
																"nativeSrc": "6914:15:13",
																"nodeType": "YulFunctionCall",
																"src": "6914:15:13"
															},
															"nativeSrc": "6911:122:13",
															"nodeType": "YulIf",
															"src": "6911:122:13"
														},
														{
															"body": {
																"nativeSrc": "7118:144:13",
																"nodeType": "YulBlock",
																"src": "7118:144:13",
																"statements": [
																	{
																		"nativeSrc": "7133:21:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7133:21:13",
																		"value": {
																			"name": "src",
																			"nativeSrc": "7151:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7151:3:13"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "7137:10:13",
																				"nodeType": "YulTypedName",
																				"src": "7137:10:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "7175:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7175:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "7201:10:13",
																							"nodeType": "YulIdentifier",
																							"src": "7201:10:13"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "7213:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "7213:3:13"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nativeSrc": "7180:20:13",
																						"nodeType": "YulIdentifier",
																						"src": "7180:20:13"
																					},
																					"nativeSrc": "7180:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "7180:37:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7168:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7168:6:13"
																			},
																			"nativeSrc": "7168:50:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7168:50:13"
																		},
																		"nativeSrc": "7168:50:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7168:50:13"
																	},
																	{
																		"nativeSrc": "7231:21:13",
																		"nodeType": "YulAssignment",
																		"src": "7231:21:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "7242:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7242:3:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7247:4:13",
																					"nodeType": "YulLiteral",
																					"src": "7247:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7238:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "7238:3:13"
																			},
																			"nativeSrc": "7238:14:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7238:14:13"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "7231:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "7231:3:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7071:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7071:3:13"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "7076:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7076:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7068:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "7068:2:13"
																},
																"nativeSrc": "7068:15:13",
																"nodeType": "YulFunctionCall",
																"src": "7068:15:13"
															},
															"nativeSrc": "7042:220:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7084:25:13",
																"nodeType": "YulBlock",
																"src": "7084:25:13",
																"statements": [
																	{
																		"nativeSrc": "7086:21:13",
																		"nodeType": "YulAssignment",
																		"src": "7086:21:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "7097:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7097:3:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7102:4:13",
																					"nodeType": "YulLiteral",
																					"src": "7102:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7093:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "7093:3:13"
																			},
																			"nativeSrc": "7093:14:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7093:14:13"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "7086:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "7086:3:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7046:21:13",
																"nodeType": "YulBlock",
																"src": "7046:21:13",
																"statements": [
																	{
																		"nativeSrc": "7048:17:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7048:17:13",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "7059:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "7059:6:13"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "7052:3:13",
																				"nodeType": "YulTypedName",
																				"src": "7052:3:13",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "7042:220:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "6558:710:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6630:6:13",
														"nodeType": "YulTypedName",
														"src": "6630:6:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6638:6:13",
														"nodeType": "YulTypedName",
														"src": "6638:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6646:3:13",
														"nodeType": "YulTypedName",
														"src": "6646:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6654:5:13",
														"nodeType": "YulTypedName",
														"src": "6654:5:13",
														"type": ""
													}
												],
												"src": "6558:710:13"
											},
											{
												"body": {
													"nativeSrc": "7368:293:13",
													"nodeType": "YulBlock",
													"src": "7368:293:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "7417:83:13",
																"nodeType": "YulBlock",
																"src": "7417:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "7419:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "7419:77:13"
																			},
																			"nativeSrc": "7419:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7419:79:13"
																		},
																		"nativeSrc": "7419:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7419:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "7396:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "7396:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7404:4:13",
																						"nodeType": "YulLiteral",
																						"src": "7404:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7392:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7392:3:13"
																				},
																				"nativeSrc": "7392:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7392:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "7411:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "7411:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "7388:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7388:3:13"
																		},
																		"nativeSrc": "7388:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7388:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7381:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7381:6:13"
																},
																"nativeSrc": "7381:35:13",
																"nodeType": "YulFunctionCall",
																"src": "7381:35:13"
															},
															"nativeSrc": "7378:122:13",
															"nodeType": "YulIf",
															"src": "7378:122:13"
														},
														{
															"nativeSrc": "7509:34:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7509:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7536:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7536:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7523:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "7523:12:13"
																},
																"nativeSrc": "7523:20:13",
																"nodeType": "YulFunctionCall",
																"src": "7523:20:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7513:6:13",
																	"nodeType": "YulTypedName",
																	"src": "7513:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7552:103:13",
															"nodeType": "YulAssignment",
															"src": "7552:103:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7628:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7628:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7636:4:13",
																				"nodeType": "YulLiteral",
																				"src": "7636:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7624:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7624:3:13"
																		},
																		"nativeSrc": "7624:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7624:17:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7643:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7643:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7651:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7651:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "7561:62:13",
																	"nodeType": "YulIdentifier",
																	"src": "7561:62:13"
																},
																"nativeSrc": "7561:94:13",
																"nodeType": "YulFunctionCall",
																"src": "7561:94:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7552:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "7552:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "7291:370:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7346:6:13",
														"nodeType": "YulTypedName",
														"src": "7346:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7354:3:13",
														"nodeType": "YulTypedName",
														"src": "7354:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7362:5:13",
														"nodeType": "YulTypedName",
														"src": "7362:5:13",
														"type": ""
													}
												],
												"src": "7291:370:13"
											},
											{
												"body": {
													"nativeSrc": "7756:28:13",
													"nodeType": "YulBlock",
													"src": "7756:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7773:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7773:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7776:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7776:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7766:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7766:6:13"
																},
																"nativeSrc": "7766:12:13",
																"nodeType": "YulFunctionCall",
																"src": "7766:12:13"
															},
															"nativeSrc": "7766:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "7766:12:13"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "7667:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "7667:117:13"
											},
											{
												"body": {
													"nativeSrc": "7856:241:13",
													"nodeType": "YulBlock",
													"src": "7856:241:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "7961:22:13",
																"nodeType": "YulBlock",
																"src": "7961:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7963:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "7963:16:13"
																			},
																			"nativeSrc": "7963:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7963:18:13"
																		},
																		"nativeSrc": "7963:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7963:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7933:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7933:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7941:18:13",
																		"nodeType": "YulLiteral",
																		"src": "7941:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7930:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "7930:2:13"
																},
																"nativeSrc": "7930:30:13",
																"nodeType": "YulFunctionCall",
																"src": "7930:30:13"
															},
															"nativeSrc": "7927:56:13",
															"nodeType": "YulIf",
															"src": "7927:56:13"
														},
														{
															"nativeSrc": "7993:37:13",
															"nodeType": "YulAssignment",
															"src": "7993:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8023:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8023:6:13"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "8001:21:13",
																	"nodeType": "YulIdentifier",
																	"src": "8001:21:13"
																},
																"nativeSrc": "8001:29:13",
																"nodeType": "YulFunctionCall",
																"src": "8001:29:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7993:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7993:4:13"
																}
															]
														},
														{
															"nativeSrc": "8067:23:13",
															"nodeType": "YulAssignment",
															"src": "8067:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "8079:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "8079:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8085:4:13",
																		"nodeType": "YulLiteral",
																		"src": "8085:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8075:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8075:3:13"
																},
																"nativeSrc": "8075:15:13",
																"nodeType": "YulFunctionCall",
																"src": "8075:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8067:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8067:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "7790:307:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "7840:6:13",
														"nodeType": "YulTypedName",
														"src": "7840:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "7851:4:13",
														"nodeType": "YulTypedName",
														"src": "7851:4:13",
														"type": ""
													}
												],
												"src": "7790:307:13"
											},
											{
												"body": {
													"nativeSrc": "8167:82:13",
													"nodeType": "YulBlock",
													"src": "8167:82:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "8190:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8190:3:13"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "8195:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8195:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8200:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8200:6:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "8177:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "8177:12:13"
																},
																"nativeSrc": "8177:30:13",
																"nodeType": "YulFunctionCall",
																"src": "8177:30:13"
															},
															"nativeSrc": "8177:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "8177:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "8227:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "8227:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8232:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8232:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8223:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8223:3:13"
																		},
																		"nativeSrc": "8223:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8223:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8241:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8241:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8216:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8216:6:13"
																},
																"nativeSrc": "8216:27:13",
																"nodeType": "YulFunctionCall",
																"src": "8216:27:13"
															},
															"nativeSrc": "8216:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "8216:27:13"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "8103:146:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8149:3:13",
														"nodeType": "YulTypedName",
														"src": "8149:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "8154:3:13",
														"nodeType": "YulTypedName",
														"src": "8154:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8159:6:13",
														"nodeType": "YulTypedName",
														"src": "8159:6:13",
														"type": ""
													}
												],
												"src": "8103:146:13"
											},
											{
												"body": {
													"nativeSrc": "8338:340:13",
													"nodeType": "YulBlock",
													"src": "8338:340:13",
													"statements": [
														{
															"nativeSrc": "8348:74:13",
															"nodeType": "YulAssignment",
															"src": "8348:74:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8414:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8414:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "8373:40:13",
																			"nodeType": "YulIdentifier",
																			"src": "8373:40:13"
																		},
																		"nativeSrc": "8373:48:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8373:48:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "8357:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "8357:15:13"
																},
																"nativeSrc": "8357:65:13",
																"nodeType": "YulFunctionCall",
																"src": "8357:65:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8348:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "8348:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8438:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "8438:5:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8445:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8445:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8431:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8431:6:13"
																},
																"nativeSrc": "8431:21:13",
																"nodeType": "YulFunctionCall",
																"src": "8431:21:13"
															},
															"nativeSrc": "8431:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "8431:21:13"
														},
														{
															"nativeSrc": "8461:27:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8461:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8476:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "8476:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8483:4:13",
																		"nodeType": "YulLiteral",
																		"src": "8483:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8472:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8472:3:13"
																},
																"nativeSrc": "8472:16:13",
																"nodeType": "YulFunctionCall",
																"src": "8472:16:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "8465:3:13",
																	"nodeType": "YulTypedName",
																	"src": "8465:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8526:83:13",
																"nodeType": "YulBlock",
																"src": "8526:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "8528:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "8528:77:13"
																			},
																			"nativeSrc": "8528:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8528:79:13"
																		},
																		"nativeSrc": "8528:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8528:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "8507:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "8507:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8512:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8512:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8503:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8503:3:13"
																		},
																		"nativeSrc": "8503:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8503:16:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8521:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8521:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8500:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "8500:2:13"
																},
																"nativeSrc": "8500:25:13",
																"nodeType": "YulFunctionCall",
																"src": "8500:25:13"
															},
															"nativeSrc": "8497:112:13",
															"nodeType": "YulIf",
															"src": "8497:112:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8655:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8655:3:13"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "8660:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8660:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8665:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8665:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "8618:36:13",
																	"nodeType": "YulIdentifier",
																	"src": "8618:36:13"
																},
																"nativeSrc": "8618:54:13",
																"nodeType": "YulFunctionCall",
																"src": "8618:54:13"
															},
															"nativeSrc": "8618:54:13",
															"nodeType": "YulExpressionStatement",
															"src": "8618:54:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "8255:423:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8311:3:13",
														"nodeType": "YulTypedName",
														"src": "8311:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8316:6:13",
														"nodeType": "YulTypedName",
														"src": "8316:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8324:3:13",
														"nodeType": "YulTypedName",
														"src": "8324:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8332:5:13",
														"nodeType": "YulTypedName",
														"src": "8332:5:13",
														"type": ""
													}
												],
												"src": "8255:423:13"
											},
											{
												"body": {
													"nativeSrc": "8758:277:13",
													"nodeType": "YulBlock",
													"src": "8758:277:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "8807:83:13",
																"nodeType": "YulBlock",
																"src": "8807:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "8809:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "8809:77:13"
																			},
																			"nativeSrc": "8809:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8809:79:13"
																		},
																		"nativeSrc": "8809:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8809:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8786:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "8786:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8794:4:13",
																						"nodeType": "YulLiteral",
																						"src": "8794:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8782:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "8782:3:13"
																				},
																				"nativeSrc": "8782:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8782:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "8801:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "8801:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8778:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8778:3:13"
																		},
																		"nativeSrc": "8778:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8778:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8771:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8771:6:13"
																},
																"nativeSrc": "8771:35:13",
																"nodeType": "YulFunctionCall",
																"src": "8771:35:13"
															},
															"nativeSrc": "8768:122:13",
															"nodeType": "YulIf",
															"src": "8768:122:13"
														},
														{
															"nativeSrc": "8899:34:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8899:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8926:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8926:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8913:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "8913:12:13"
																},
																"nativeSrc": "8913:20:13",
																"nodeType": "YulFunctionCall",
																"src": "8913:20:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8903:6:13",
																	"nodeType": "YulTypedName",
																	"src": "8903:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8942:87:13",
															"nodeType": "YulAssignment",
															"src": "8942:87:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9002:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9002:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9010:4:13",
																				"nodeType": "YulLiteral",
																				"src": "9010:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8998:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8998:3:13"
																		},
																		"nativeSrc": "8998:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8998:17:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9017:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9017:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9025:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9025:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "8951:46:13",
																	"nodeType": "YulIdentifier",
																	"src": "8951:46:13"
																},
																"nativeSrc": "8951:78:13",
																"nodeType": "YulFunctionCall",
																"src": "8951:78:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8942:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "8942:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "8697:338:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8736:6:13",
														"nodeType": "YulTypedName",
														"src": "8736:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8744:3:13",
														"nodeType": "YulTypedName",
														"src": "8744:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8752:5:13",
														"nodeType": "YulTypedName",
														"src": "8752:5:13",
														"type": ""
													}
												],
												"src": "8697:338:13"
											},
											{
												"body": {
													"nativeSrc": "9234:1316:13",
													"nodeType": "YulBlock",
													"src": "9234:1316:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "9281:83:13",
																"nodeType": "YulBlock",
																"src": "9281:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9283:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "9283:77:13"
																			},
																			"nativeSrc": "9283:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9283:79:13"
																		},
																		"nativeSrc": "9283:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9283:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9255:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9255:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9264:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9264:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9251:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9251:3:13"
																		},
																		"nativeSrc": "9251:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9251:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9276:3:13",
																		"nodeType": "YulLiteral",
																		"src": "9276:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9247:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9247:3:13"
																},
																"nativeSrc": "9247:33:13",
																"nodeType": "YulFunctionCall",
																"src": "9247:33:13"
															},
															"nativeSrc": "9244:120:13",
															"nodeType": "YulIf",
															"src": "9244:120:13"
														},
														{
															"nativeSrc": "9374:117:13",
															"nodeType": "YulBlock",
															"src": "9374:117:13",
															"statements": [
																{
																	"nativeSrc": "9389:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9389:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9403:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9403:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9393:6:13",
																			"nodeType": "YulTypedName",
																			"src": "9393:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9418:63:13",
																	"nodeType": "YulAssignment",
																	"src": "9418:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9453:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "9453:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9464:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "9464:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9449:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9449:3:13"
																				},
																				"nativeSrc": "9449:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9449:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9473:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9473:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9428:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "9428:20:13"
																		},
																		"nativeSrc": "9428:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9428:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9418:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "9418:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9501:118:13",
															"nodeType": "YulBlock",
															"src": "9501:118:13",
															"statements": [
																{
																	"nativeSrc": "9516:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9516:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9530:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9530:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9520:6:13",
																			"nodeType": "YulTypedName",
																			"src": "9520:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9546:63:13",
																	"nodeType": "YulAssignment",
																	"src": "9546:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9581:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "9581:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9592:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "9592:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9577:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9577:3:13"
																				},
																				"nativeSrc": "9577:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9577:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9601:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9601:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9556:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "9556:20:13"
																		},
																		"nativeSrc": "9556:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9556:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9546:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "9546:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9629:303:13",
															"nodeType": "YulBlock",
															"src": "9629:303:13",
															"statements": [
																{
																	"nativeSrc": "9644:46:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9644:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9675:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "9675:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9686:2:13",
																						"nodeType": "YulLiteral",
																						"src": "9686:2:13",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9671:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9671:3:13"
																				},
																				"nativeSrc": "9671:18:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9671:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9658:12:13",
																			"nodeType": "YulIdentifier",
																			"src": "9658:12:13"
																		},
																		"nativeSrc": "9658:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9658:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9648:6:13",
																			"nodeType": "YulTypedName",
																			"src": "9648:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9737:83:13",
																		"nodeType": "YulBlock",
																		"src": "9737:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9739:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "9739:77:13"
																					},
																					"nativeSrc": "9739:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "9739:79:13"
																				},
																				"nativeSrc": "9739:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "9739:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9709:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9709:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9717:18:13",
																				"nodeType": "YulLiteral",
																				"src": "9717:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9706:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "9706:2:13"
																		},
																		"nativeSrc": "9706:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9706:30:13"
																	},
																	"nativeSrc": "9703:117:13",
																	"nodeType": "YulIf",
																	"src": "9703:117:13"
																},
																{
																	"nativeSrc": "9834:88:13",
																	"nodeType": "YulAssignment",
																	"src": "9834:88:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9894:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "9894:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9905:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "9905:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9890:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9890:3:13"
																				},
																				"nativeSrc": "9890:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9890:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9914:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9914:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "9844:45:13",
																			"nodeType": "YulIdentifier",
																			"src": "9844:45:13"
																		},
																		"nativeSrc": "9844:78:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9844:78:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "9834:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "9834:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9942:303:13",
															"nodeType": "YulBlock",
															"src": "9942:303:13",
															"statements": [
																{
																	"nativeSrc": "9957:46:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9957:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9988:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "9988:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9999:2:13",
																						"nodeType": "YulLiteral",
																						"src": "9999:2:13",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9984:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9984:3:13"
																				},
																				"nativeSrc": "9984:18:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9984:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9971:12:13",
																			"nodeType": "YulIdentifier",
																			"src": "9971:12:13"
																		},
																		"nativeSrc": "9971:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9971:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9961:6:13",
																			"nodeType": "YulTypedName",
																			"src": "9961:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "10050:83:13",
																		"nodeType": "YulBlock",
																		"src": "10050:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "10052:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "10052:77:13"
																					},
																					"nativeSrc": "10052:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "10052:79:13"
																				},
																				"nativeSrc": "10052:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "10052:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10022:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10022:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10030:18:13",
																				"nodeType": "YulLiteral",
																				"src": "10030:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10019:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "10019:2:13"
																		},
																		"nativeSrc": "10019:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10019:30:13"
																	},
																	"nativeSrc": "10016:117:13",
																	"nodeType": "YulIf",
																	"src": "10016:117:13"
																},
																{
																	"nativeSrc": "10147:88:13",
																	"nodeType": "YulAssignment",
																	"src": "10147:88:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10207:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "10207:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10218:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "10218:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10203:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "10203:3:13"
																				},
																				"nativeSrc": "10203:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10203:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10227:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "10227:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "10157:45:13",
																			"nodeType": "YulIdentifier",
																			"src": "10157:45:13"
																		},
																		"nativeSrc": "10157:78:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10157:78:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "10147:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "10147:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10255:288:13",
															"nodeType": "YulBlock",
															"src": "10255:288:13",
															"statements": [
																{
																	"nativeSrc": "10270:47:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10270:47:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10301:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "10301:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10312:3:13",
																						"nodeType": "YulLiteral",
																						"src": "10312:3:13",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10297:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "10297:3:13"
																				},
																				"nativeSrc": "10297:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10297:19:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "10284:12:13",
																			"nodeType": "YulIdentifier",
																			"src": "10284:12:13"
																		},
																		"nativeSrc": "10284:33:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10284:33:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10274:6:13",
																			"nodeType": "YulTypedName",
																			"src": "10274:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "10364:83:13",
																		"nodeType": "YulBlock",
																		"src": "10364:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "10366:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "10366:77:13"
																					},
																					"nativeSrc": "10366:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "10366:79:13"
																				},
																				"nativeSrc": "10366:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "10366:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10336:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10336:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10344:18:13",
																				"nodeType": "YulLiteral",
																				"src": "10344:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10333:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "10333:2:13"
																		},
																		"nativeSrc": "10333:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10333:30:13"
																	},
																	"nativeSrc": "10330:117:13",
																	"nodeType": "YulIf",
																	"src": "10330:117:13"
																},
																{
																	"nativeSrc": "10461:72:13",
																	"nodeType": "YulAssignment",
																	"src": "10461:72:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10505:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "10505:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10516:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "10516:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10501:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "10501:3:13"
																				},
																				"nativeSrc": "10501:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10501:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10525:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "10525:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "10471:29:13",
																			"nodeType": "YulIdentifier",
																			"src": "10471:29:13"
																		},
																		"nativeSrc": "10471:62:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10471:62:13"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "10461:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "10461:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nativeSrc": "9041:1509:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9172:9:13",
														"nodeType": "YulTypedName",
														"src": "9172:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9183:7:13",
														"nodeType": "YulTypedName",
														"src": "9183:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9195:6:13",
														"nodeType": "YulTypedName",
														"src": "9195:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9203:6:13",
														"nodeType": "YulTypedName",
														"src": "9203:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9211:6:13",
														"nodeType": "YulTypedName",
														"src": "9211:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9219:6:13",
														"nodeType": "YulTypedName",
														"src": "9219:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "9227:6:13",
														"nodeType": "YulTypedName",
														"src": "9227:6:13",
														"type": ""
													}
												],
												"src": "9041:1509:13"
											},
											{
												"body": {
													"nativeSrc": "10638:229:13",
													"nodeType": "YulBlock",
													"src": "10638:229:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "10743:22:13",
																"nodeType": "YulBlock",
																"src": "10743:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "10745:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "10745:16:13"
																			},
																			"nativeSrc": "10745:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10745:18:13"
																		},
																		"nativeSrc": "10745:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10745:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10715:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10715:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10723:18:13",
																		"nodeType": "YulLiteral",
																		"src": "10723:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10712:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "10712:2:13"
																},
																"nativeSrc": "10712:30:13",
																"nodeType": "YulFunctionCall",
																"src": "10712:30:13"
															},
															"nativeSrc": "10709:56:13",
															"nodeType": "YulIf",
															"src": "10709:56:13"
														},
														{
															"nativeSrc": "10775:25:13",
															"nodeType": "YulAssignment",
															"src": "10775:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10787:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10787:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10795:4:13",
																		"nodeType": "YulLiteral",
																		"src": "10795:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10783:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10783:3:13"
																},
																"nativeSrc": "10783:17:13",
																"nodeType": "YulFunctionCall",
																"src": "10783:17:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10775:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10775:4:13"
																}
															]
														},
														{
															"nativeSrc": "10837:23:13",
															"nodeType": "YulAssignment",
															"src": "10837:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "10849:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "10849:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10855:4:13",
																		"nodeType": "YulLiteral",
																		"src": "10855:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10845:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10845:3:13"
																},
																"nativeSrc": "10845:15:13",
																"nodeType": "YulFunctionCall",
																"src": "10845:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10837:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10837:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "10556:311:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "10622:6:13",
														"nodeType": "YulTypedName",
														"src": "10622:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "10633:4:13",
														"nodeType": "YulTypedName",
														"src": "10633:4:13",
														"type": ""
													}
												],
												"src": "10556:311:13"
											},
											{
												"body": {
													"nativeSrc": "10992:608:13",
													"nodeType": "YulBlock",
													"src": "10992:608:13",
													"statements": [
														{
															"nativeSrc": "11002:90:13",
															"nodeType": "YulAssignment",
															"src": "11002:90:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "11084:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11084:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "11027:56:13",
																			"nodeType": "YulIdentifier",
																			"src": "11027:56:13"
																		},
																		"nativeSrc": "11027:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11027:64:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "11011:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "11011:15:13"
																},
																"nativeSrc": "11011:81:13",
																"nodeType": "YulFunctionCall",
																"src": "11011:81:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "11002:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "11002:5:13"
																}
															]
														},
														{
															"nativeSrc": "11101:16:13",
															"nodeType": "YulVariableDeclaration",
															"src": "11101:16:13",
															"value": {
																"name": "array",
																"nativeSrc": "11112:5:13",
																"nodeType": "YulIdentifier",
																"src": "11112:5:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "11105:3:13",
																	"nodeType": "YulTypedName",
																	"src": "11105:3:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "11134:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "11134:5:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11141:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11141:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11127:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11127:6:13"
																},
																"nativeSrc": "11127:21:13",
																"nodeType": "YulFunctionCall",
																"src": "11127:21:13"
															},
															"nativeSrc": "11127:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "11127:21:13"
														},
														{
															"nativeSrc": "11157:23:13",
															"nodeType": "YulAssignment",
															"src": "11157:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "11168:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "11168:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11175:4:13",
																		"nodeType": "YulLiteral",
																		"src": "11175:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11164:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11164:3:13"
																},
																"nativeSrc": "11164:16:13",
																"nodeType": "YulFunctionCall",
																"src": "11164:16:13"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "11157:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11157:3:13"
																}
															]
														},
														{
															"nativeSrc": "11190:44:13",
															"nodeType": "YulVariableDeclaration",
															"src": "11190:44:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11208:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11208:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "11220:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11220:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11228:4:13",
																				"nodeType": "YulLiteral",
																				"src": "11228:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "11216:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11216:3:13"
																		},
																		"nativeSrc": "11216:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11216:17:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11204:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11204:3:13"
																},
																"nativeSrc": "11204:30:13",
																"nodeType": "YulFunctionCall",
																"src": "11204:30:13"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "11194:6:13",
																	"nodeType": "YulTypedName",
																	"src": "11194:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11262:103:13",
																"nodeType": "YulBlock",
																"src": "11262:103:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "11276:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "11276:77:13"
																			},
																			"nativeSrc": "11276:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11276:79:13"
																		},
																		"nativeSrc": "11276:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "11276:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "11249:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11249:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11257:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11257:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11246:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "11246:2:13"
																},
																"nativeSrc": "11246:15:13",
																"nodeType": "YulFunctionCall",
																"src": "11246:15:13"
															},
															"nativeSrc": "11243:122:13",
															"nodeType": "YulIf",
															"src": "11243:122:13"
														},
														{
															"body": {
																"nativeSrc": "11450:144:13",
																"nodeType": "YulBlock",
																"src": "11450:144:13",
																"statements": [
																	{
																		"nativeSrc": "11465:21:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "11465:21:13",
																		"value": {
																			"name": "src",
																			"nativeSrc": "11483:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11483:3:13"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "11469:10:13",
																				"nodeType": "YulTypedName",
																				"src": "11469:10:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "11507:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11507:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "11533:10:13",
																							"nodeType": "YulIdentifier",
																							"src": "11533:10:13"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "11545:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "11545:3:13"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nativeSrc": "11512:20:13",
																						"nodeType": "YulIdentifier",
																						"src": "11512:20:13"
																					},
																					"nativeSrc": "11512:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "11512:37:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "11500:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11500:6:13"
																			},
																			"nativeSrc": "11500:50:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11500:50:13"
																		},
																		"nativeSrc": "11500:50:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "11500:50:13"
																	},
																	{
																		"nativeSrc": "11563:21:13",
																		"nodeType": "YulAssignment",
																		"src": "11563:21:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "11574:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11574:3:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11579:4:13",
																					"nodeType": "YulLiteral",
																					"src": "11579:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "11570:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "11570:3:13"
																			},
																			"nativeSrc": "11570:14:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11570:14:13"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "11563:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "11563:3:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "11403:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11403:3:13"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "11408:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11408:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "11400:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "11400:2:13"
																},
																"nativeSrc": "11400:15:13",
																"nodeType": "YulFunctionCall",
																"src": "11400:15:13"
															},
															"nativeSrc": "11374:220:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "11416:25:13",
																"nodeType": "YulBlock",
																"src": "11416:25:13",
																"statements": [
																	{
																		"nativeSrc": "11418:21:13",
																		"nodeType": "YulAssignment",
																		"src": "11418:21:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "11429:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11429:3:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11434:4:13",
																					"nodeType": "YulLiteral",
																					"src": "11434:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "11425:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "11425:3:13"
																			},
																			"nativeSrc": "11425:14:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11425:14:13"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "11418:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "11418:3:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "11378:21:13",
																"nodeType": "YulBlock",
																"src": "11378:21:13",
																"statements": [
																	{
																		"nativeSrc": "11380:17:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "11380:17:13",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "11391:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "11391:6:13"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "11384:3:13",
																				"nodeType": "YulTypedName",
																				"src": "11384:3:13",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "11374:220:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "10890:710:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10962:6:13",
														"nodeType": "YulTypedName",
														"src": "10962:6:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10970:6:13",
														"nodeType": "YulTypedName",
														"src": "10970:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10978:3:13",
														"nodeType": "YulTypedName",
														"src": "10978:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "10986:5:13",
														"nodeType": "YulTypedName",
														"src": "10986:5:13",
														"type": ""
													}
												],
												"src": "10890:710:13"
											},
											{
												"body": {
													"nativeSrc": "11700:293:13",
													"nodeType": "YulBlock",
													"src": "11700:293:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "11749:83:13",
																"nodeType": "YulBlock",
																"src": "11749:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "11751:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "11751:77:13"
																			},
																			"nativeSrc": "11751:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11751:79:13"
																		},
																		"nativeSrc": "11751:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "11751:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "11728:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "11728:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11736:4:13",
																						"nodeType": "YulLiteral",
																						"src": "11736:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11724:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11724:3:13"
																				},
																				"nativeSrc": "11724:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11724:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "11743:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "11743:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "11720:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11720:3:13"
																		},
																		"nativeSrc": "11720:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11720:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11713:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11713:6:13"
																},
																"nativeSrc": "11713:35:13",
																"nodeType": "YulFunctionCall",
																"src": "11713:35:13"
															},
															"nativeSrc": "11710:122:13",
															"nodeType": "YulIf",
															"src": "11710:122:13"
														},
														{
															"nativeSrc": "11841:34:13",
															"nodeType": "YulVariableDeclaration",
															"src": "11841:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11868:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11868:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "11855:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "11855:12:13"
																},
																"nativeSrc": "11855:20:13",
																"nodeType": "YulFunctionCall",
																"src": "11855:20:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11845:6:13",
																	"nodeType": "YulTypedName",
																	"src": "11845:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11884:103:13",
															"nodeType": "YulAssignment",
															"src": "11884:103:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11960:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11960:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11968:4:13",
																				"nodeType": "YulLiteral",
																				"src": "11968:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11956:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11956:3:13"
																		},
																		"nativeSrc": "11956:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11956:17:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11975:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11975:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11983:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11983:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "11893:62:13",
																	"nodeType": "YulIdentifier",
																	"src": "11893:62:13"
																},
																"nativeSrc": "11893:94:13",
																"nodeType": "YulFunctionCall",
																"src": "11893:94:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "11884:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "11884:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "11623:370:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11678:6:13",
														"nodeType": "YulTypedName",
														"src": "11678:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11686:3:13",
														"nodeType": "YulTypedName",
														"src": "11686:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "11694:5:13",
														"nodeType": "YulTypedName",
														"src": "11694:5:13",
														"type": ""
													}
												],
												"src": "11623:370:13"
											},
											{
												"body": {
													"nativeSrc": "12132:761:13",
													"nodeType": "YulBlock",
													"src": "12132:761:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "12178:83:13",
																"nodeType": "YulBlock",
																"src": "12178:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12180:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "12180:77:13"
																			},
																			"nativeSrc": "12180:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "12180:79:13"
																		},
																		"nativeSrc": "12180:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "12180:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12153:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "12153:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12162:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12162:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12149:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12149:3:13"
																		},
																		"nativeSrc": "12149:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12149:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12174:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12174:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12145:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12145:3:13"
																},
																"nativeSrc": "12145:32:13",
																"nodeType": "YulFunctionCall",
																"src": "12145:32:13"
															},
															"nativeSrc": "12142:119:13",
															"nodeType": "YulIf",
															"src": "12142:119:13"
														},
														{
															"nativeSrc": "12271:302:13",
															"nodeType": "YulBlock",
															"src": "12271:302:13",
															"statements": [
																{
																	"nativeSrc": "12286:45:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12286:45:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12317:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "12317:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12328:1:13",
																						"nodeType": "YulLiteral",
																						"src": "12328:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12313:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "12313:3:13"
																				},
																				"nativeSrc": "12313:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12313:17:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "12300:12:13",
																			"nodeType": "YulIdentifier",
																			"src": "12300:12:13"
																		},
																		"nativeSrc": "12300:31:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12300:31:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12290:6:13",
																			"nodeType": "YulTypedName",
																			"src": "12290:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "12378:83:13",
																		"nodeType": "YulBlock",
																		"src": "12378:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "12380:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "12380:77:13"
																					},
																					"nativeSrc": "12380:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "12380:79:13"
																				},
																				"nativeSrc": "12380:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "12380:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12350:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "12350:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12358:18:13",
																				"nodeType": "YulLiteral",
																				"src": "12358:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "12347:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "12347:2:13"
																		},
																		"nativeSrc": "12347:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12347:30:13"
																	},
																	"nativeSrc": "12344:117:13",
																	"nodeType": "YulIf",
																	"src": "12344:117:13"
																},
																{
																	"nativeSrc": "12475:88:13",
																	"nodeType": "YulAssignment",
																	"src": "12475:88:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12535:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "12535:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12546:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "12546:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12531:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "12531:3:13"
																				},
																				"nativeSrc": "12531:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12531:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12555:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "12555:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "12485:45:13",
																			"nodeType": "YulIdentifier",
																			"src": "12485:45:13"
																		},
																		"nativeSrc": "12485:78:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12485:78:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12475:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "12475:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12583:303:13",
															"nodeType": "YulBlock",
															"src": "12583:303:13",
															"statements": [
																{
																	"nativeSrc": "12598:46:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12598:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12629:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "12629:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12640:2:13",
																						"nodeType": "YulLiteral",
																						"src": "12640:2:13",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12625:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "12625:3:13"
																				},
																				"nativeSrc": "12625:18:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12625:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "12612:12:13",
																			"nodeType": "YulIdentifier",
																			"src": "12612:12:13"
																		},
																		"nativeSrc": "12612:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12612:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12602:6:13",
																			"nodeType": "YulTypedName",
																			"src": "12602:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "12691:83:13",
																		"nodeType": "YulBlock",
																		"src": "12691:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "12693:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "12693:77:13"
																					},
																					"nativeSrc": "12693:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "12693:79:13"
																				},
																				"nativeSrc": "12693:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "12693:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12663:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "12663:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12671:18:13",
																				"nodeType": "YulLiteral",
																				"src": "12671:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "12660:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "12660:2:13"
																		},
																		"nativeSrc": "12660:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12660:30:13"
																	},
																	"nativeSrc": "12657:117:13",
																	"nodeType": "YulIf",
																	"src": "12657:117:13"
																},
																{
																	"nativeSrc": "12788:88:13",
																	"nodeType": "YulAssignment",
																	"src": "12788:88:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12848:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "12848:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12859:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "12859:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12844:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "12844:3:13"
																				},
																				"nativeSrc": "12844:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12844:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12868:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "12868:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "12798:45:13",
																			"nodeType": "YulIdentifier",
																			"src": "12798:45:13"
																		},
																		"nativeSrc": "12798:78:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12798:78:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12788:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "12788:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "11999:894:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12094:9:13",
														"nodeType": "YulTypedName",
														"src": "12094:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12105:7:13",
														"nodeType": "YulTypedName",
														"src": "12105:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12117:6:13",
														"nodeType": "YulTypedName",
														"src": "12117:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12125:6:13",
														"nodeType": "YulTypedName",
														"src": "12125:6:13",
														"type": ""
													}
												],
												"src": "11999:894:13"
											},
											{
												"body": {
													"nativeSrc": "12973:40:13",
													"nodeType": "YulBlock",
													"src": "12973:40:13",
													"statements": [
														{
															"nativeSrc": "12984:22:13",
															"nodeType": "YulAssignment",
															"src": "12984:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13000:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "13000:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12994:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "12994:5:13"
																},
																"nativeSrc": "12994:12:13",
																"nodeType": "YulFunctionCall",
																"src": "12994:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "12984:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12984:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "12899:114:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12956:5:13",
														"nodeType": "YulTypedName",
														"src": "12956:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "12966:6:13",
														"nodeType": "YulTypedName",
														"src": "12966:6:13",
														"type": ""
													}
												],
												"src": "12899:114:13"
											},
											{
												"body": {
													"nativeSrc": "13130:73:13",
													"nodeType": "YulBlock",
													"src": "13130:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13147:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13147:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13152:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13152:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13140:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13140:6:13"
																},
																"nativeSrc": "13140:19:13",
																"nodeType": "YulFunctionCall",
																"src": "13140:19:13"
															},
															"nativeSrc": "13140:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "13140:19:13"
														},
														{
															"nativeSrc": "13168:29:13",
															"nodeType": "YulAssignment",
															"src": "13168:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13187:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13187:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13192:4:13",
																		"nodeType": "YulLiteral",
																		"src": "13192:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13183:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13183:3:13"
																},
																"nativeSrc": "13183:14:13",
																"nodeType": "YulFunctionCall",
																"src": "13183:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "13168:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "13168:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "13019:184:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13102:3:13",
														"nodeType": "YulTypedName",
														"src": "13102:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "13107:6:13",
														"nodeType": "YulTypedName",
														"src": "13107:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "13118:11:13",
														"nodeType": "YulTypedName",
														"src": "13118:11:13",
														"type": ""
													}
												],
												"src": "13019:184:13"
											},
											{
												"body": {
													"nativeSrc": "13281:60:13",
													"nodeType": "YulBlock",
													"src": "13281:60:13",
													"statements": [
														{
															"nativeSrc": "13291:11:13",
															"nodeType": "YulAssignment",
															"src": "13291:11:13",
															"value": {
																"name": "ptr",
																"nativeSrc": "13299:3:13",
																"nodeType": "YulIdentifier",
																"src": "13299:3:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "13291:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13291:4:13"
																}
															]
														},
														{
															"nativeSrc": "13312:22:13",
															"nodeType": "YulAssignment",
															"src": "13312:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "13324:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13324:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13329:4:13",
																		"nodeType": "YulLiteral",
																		"src": "13329:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13320:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13320:3:13"
																},
																"nativeSrc": "13320:14:13",
																"nodeType": "YulFunctionCall",
																"src": "13320:14:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "13312:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13312:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "13209:132:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "13268:3:13",
														"nodeType": "YulTypedName",
														"src": "13268:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "13276:4:13",
														"nodeType": "YulTypedName",
														"src": "13276:4:13",
														"type": ""
													}
												],
												"src": "13209:132:13"
											},
											{
												"body": {
													"nativeSrc": "13402:53:13",
													"nodeType": "YulBlock",
													"src": "13402:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13419:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13419:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13442:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "13442:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "13424:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "13424:17:13"
																		},
																		"nativeSrc": "13424:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13424:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13412:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13412:6:13"
																},
																"nativeSrc": "13412:37:13",
																"nodeType": "YulFunctionCall",
																"src": "13412:37:13"
															},
															"nativeSrc": "13412:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "13412:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "13347:108:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13390:5:13",
														"nodeType": "YulTypedName",
														"src": "13390:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13397:3:13",
														"nodeType": "YulTypedName",
														"src": "13397:3:13",
														"type": ""
													}
												],
												"src": "13347:108:13"
											},
											{
												"body": {
													"nativeSrc": "13541:99:13",
													"nodeType": "YulBlock",
													"src": "13541:99:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13585:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13585:6:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13593:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13593:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nativeSrc": "13551:33:13",
																	"nodeType": "YulIdentifier",
																	"src": "13551:33:13"
																},
																"nativeSrc": "13551:46:13",
																"nodeType": "YulFunctionCall",
																"src": "13551:46:13"
															},
															"nativeSrc": "13551:46:13",
															"nodeType": "YulExpressionStatement",
															"src": "13551:46:13"
														},
														{
															"nativeSrc": "13606:28:13",
															"nodeType": "YulAssignment",
															"src": "13606:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13624:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13624:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13629:4:13",
																		"nodeType": "YulLiteral",
																		"src": "13629:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13620:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13620:3:13"
																},
																"nativeSrc": "13620:14:13",
																"nodeType": "YulFunctionCall",
																"src": "13620:14:13"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "13606:10:13",
																	"nodeType": "YulIdentifier",
																	"src": "13606:10:13"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nativeSrc": "13461:179:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "13514:6:13",
														"nodeType": "YulTypedName",
														"src": "13514:6:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13522:3:13",
														"nodeType": "YulTypedName",
														"src": "13522:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "13530:10:13",
														"nodeType": "YulTypedName",
														"src": "13530:10:13",
														"type": ""
													}
												],
												"src": "13461:179:13"
											},
											{
												"body": {
													"nativeSrc": "13721:38:13",
													"nodeType": "YulBlock",
													"src": "13721:38:13",
													"statements": [
														{
															"nativeSrc": "13731:22:13",
															"nodeType": "YulAssignment",
															"src": "13731:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "13743:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13743:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13748:4:13",
																		"nodeType": "YulLiteral",
																		"src": "13748:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13739:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13739:3:13"
																},
																"nativeSrc": "13739:14:13",
																"nodeType": "YulFunctionCall",
																"src": "13739:14:13"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "13731:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13731:4:13"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "13646:113:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "13708:3:13",
														"nodeType": "YulTypedName",
														"src": "13708:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "13716:4:13",
														"nodeType": "YulTypedName",
														"src": "13716:4:13",
														"type": ""
													}
												],
												"src": "13646:113:13"
											},
											{
												"body": {
													"nativeSrc": "13919:608:13",
													"nodeType": "YulBlock",
													"src": "13919:608:13",
													"statements": [
														{
															"nativeSrc": "13929:68:13",
															"nodeType": "YulVariableDeclaration",
															"src": "13929:68:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13991:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "13991:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "13943:47:13",
																	"nodeType": "YulIdentifier",
																	"src": "13943:47:13"
																},
																"nativeSrc": "13943:54:13",
																"nodeType": "YulFunctionCall",
																"src": "13943:54:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "13933:6:13",
																	"nodeType": "YulTypedName",
																	"src": "13933:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14006:93:13",
															"nodeType": "YulAssignment",
															"src": "14006:93:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14087:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14087:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14092:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14092:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "14013:73:13",
																	"nodeType": "YulIdentifier",
																	"src": "14013:73:13"
																},
																"nativeSrc": "14013:86:13",
																"nodeType": "YulFunctionCall",
																"src": "14013:86:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14006:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14006:3:13"
																}
															]
														},
														{
															"nativeSrc": "14108:71:13",
															"nodeType": "YulVariableDeclaration",
															"src": "14108:71:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14173:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "14173:5:13"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "14123:49:13",
																	"nodeType": "YulIdentifier",
																	"src": "14123:49:13"
																},
																"nativeSrc": "14123:56:13",
																"nodeType": "YulFunctionCall",
																"src": "14123:56:13"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "14112:7:13",
																	"nodeType": "YulTypedName",
																	"src": "14112:7:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14188:21:13",
															"nodeType": "YulVariableDeclaration",
															"src": "14188:21:13",
															"value": {
																"name": "baseRef",
																"nativeSrc": "14202:7:13",
																"nodeType": "YulIdentifier",
																"src": "14202:7:13"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "14192:6:13",
																	"nodeType": "YulTypedName",
																	"src": "14192:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14278:224:13",
																"nodeType": "YulBlock",
																"src": "14278:224:13",
																"statements": [
																	{
																		"nativeSrc": "14292:34:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "14292:34:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "14319:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "14319:6:13"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "14313:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "14313:5:13"
																			},
																			"nativeSrc": "14313:13:13",
																			"nodeType": "YulFunctionCall",
																			"src": "14313:13:13"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "14296:13:13",
																				"nodeType": "YulTypedName",
																				"src": "14296:13:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "14339:70:13",
																		"nodeType": "YulAssignment",
																		"src": "14339:70:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "14390:13:13",
																					"nodeType": "YulIdentifier",
																					"src": "14390:13:13"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "14405:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "14405:3:13"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nativeSrc": "14346:43:13",
																				"nodeType": "YulIdentifier",
																				"src": "14346:43:13"
																			},
																			"nativeSrc": "14346:63:13",
																			"nodeType": "YulFunctionCall",
																			"src": "14346:63:13"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "14339:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "14339:3:13"
																			}
																		]
																	},
																	{
																		"nativeSrc": "14422:70:13",
																		"nodeType": "YulAssignment",
																		"src": "14422:70:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "14485:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "14485:6:13"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nativeSrc": "14432:52:13",
																				"nodeType": "YulIdentifier",
																				"src": "14432:52:13"
																			},
																			"nativeSrc": "14432:60:13",
																			"nodeType": "YulFunctionCall",
																			"src": "14432:60:13"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "14422:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "14422:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "14240:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "14240:1:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14243:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14243:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "14237:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "14237:2:13"
																},
																"nativeSrc": "14237:13:13",
																"nodeType": "YulFunctionCall",
																"src": "14237:13:13"
															},
															"nativeSrc": "14218:284:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "14251:18:13",
																"nodeType": "YulBlock",
																"src": "14251:18:13",
																"statements": [
																	{
																		"nativeSrc": "14253:14:13",
																		"nodeType": "YulAssignment",
																		"src": "14253:14:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "14262:1:13",
																					"nodeType": "YulIdentifier",
																					"src": "14262:1:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14265:1:13",
																					"nodeType": "YulLiteral",
																					"src": "14265:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "14258:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "14258:3:13"
																			},
																			"nativeSrc": "14258:9:13",
																			"nodeType": "YulFunctionCall",
																			"src": "14258:9:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "14253:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "14253:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "14222:14:13",
																"nodeType": "YulBlock",
																"src": "14222:14:13",
																"statements": [
																	{
																		"nativeSrc": "14224:10:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "14224:10:13",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "14233:1:13",
																			"nodeType": "YulLiteral",
																			"src": "14233:1:13",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "14228:1:13",
																				"nodeType": "YulTypedName",
																				"src": "14228:1:13",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "14218:284:13"
														},
														{
															"nativeSrc": "14511:10:13",
															"nodeType": "YulAssignment",
															"src": "14511:10:13",
															"value": {
																"name": "pos",
																"nativeSrc": "14518:3:13",
																"nodeType": "YulIdentifier",
																"src": "14518:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14511:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14511:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "13795:732:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13898:5:13",
														"nodeType": "YulTypedName",
														"src": "13898:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13905:3:13",
														"nodeType": "YulTypedName",
														"src": "13905:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13914:3:13",
														"nodeType": "YulTypedName",
														"src": "13914:3:13",
														"type": ""
													}
												],
												"src": "13795:732:13"
											},
											{
												"body": {
													"nativeSrc": "14681:225:13",
													"nodeType": "YulBlock",
													"src": "14681:225:13",
													"statements": [
														{
															"nativeSrc": "14691:26:13",
															"nodeType": "YulAssignment",
															"src": "14691:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14703:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "14703:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14714:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14714:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14699:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14699:3:13"
																},
																"nativeSrc": "14699:18:13",
																"nodeType": "YulFunctionCall",
																"src": "14699:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14691:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "14691:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14738:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14738:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14749:1:13",
																				"nodeType": "YulLiteral",
																				"src": "14749:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14734:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14734:3:13"
																		},
																		"nativeSrc": "14734:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14734:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14757:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "14757:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14763:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14763:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14753:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14753:3:13"
																		},
																		"nativeSrc": "14753:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14753:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14727:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14727:6:13"
																},
																"nativeSrc": "14727:47:13",
																"nodeType": "YulFunctionCall",
																"src": "14727:47:13"
															},
															"nativeSrc": "14727:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "14727:47:13"
														},
														{
															"nativeSrc": "14783:116:13",
															"nodeType": "YulAssignment",
															"src": "14783:116:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14885:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14885:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "14894:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "14894:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "14791:93:13",
																	"nodeType": "YulIdentifier",
																	"src": "14791:93:13"
																},
																"nativeSrc": "14791:108:13",
																"nodeType": "YulFunctionCall",
																"src": "14791:108:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14783:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "14783:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "14533:373:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14653:9:13",
														"nodeType": "YulTypedName",
														"src": "14653:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14665:6:13",
														"nodeType": "YulTypedName",
														"src": "14665:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14676:4:13",
														"nodeType": "YulTypedName",
														"src": "14676:4:13",
														"type": ""
													}
												],
												"src": "14533:373:13"
											},
											{
												"body": {
													"nativeSrc": "14977:53:13",
													"nodeType": "YulBlock",
													"src": "14977:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14994:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14994:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15017:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "15017:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "14999:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "14999:17:13"
																		},
																		"nativeSrc": "14999:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14999:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14987:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14987:6:13"
																},
																"nativeSrc": "14987:37:13",
																"nodeType": "YulFunctionCall",
																"src": "14987:37:13"
															},
															"nativeSrc": "14987:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "14987:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "14912:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14965:5:13",
														"nodeType": "YulTypedName",
														"src": "14965:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14972:3:13",
														"nodeType": "YulTypedName",
														"src": "14972:3:13",
														"type": ""
													}
												],
												"src": "14912:118:13"
											},
											{
												"body": {
													"nativeSrc": "15134:124:13",
													"nodeType": "YulBlock",
													"src": "15134:124:13",
													"statements": [
														{
															"nativeSrc": "15144:26:13",
															"nodeType": "YulAssignment",
															"src": "15144:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15156:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "15156:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15167:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15167:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15152:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15152:3:13"
																},
																"nativeSrc": "15152:18:13",
																"nodeType": "YulFunctionCall",
																"src": "15152:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15144:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "15144:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15224:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "15224:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15237:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15237:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15248:1:13",
																				"nodeType": "YulLiteral",
																				"src": "15248:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15233:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15233:3:13"
																		},
																		"nativeSrc": "15233:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15233:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15180:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "15180:43:13"
																},
																"nativeSrc": "15180:71:13",
																"nodeType": "YulFunctionCall",
																"src": "15180:71:13"
															},
															"nativeSrc": "15180:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "15180:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "15036:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15106:9:13",
														"nodeType": "YulTypedName",
														"src": "15106:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15118:6:13",
														"nodeType": "YulTypedName",
														"src": "15118:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15129:4:13",
														"nodeType": "YulTypedName",
														"src": "15129:4:13",
														"type": ""
													}
												],
												"src": "15036:222:13"
											},
											{
												"body": {
													"nativeSrc": "15304:76:13",
													"nodeType": "YulBlock",
													"src": "15304:76:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "15358:16:13",
																"nodeType": "YulBlock",
																"src": "15358:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "15367:1:13",
																					"nodeType": "YulLiteral",
																					"src": "15367:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15370:1:13",
																					"nodeType": "YulLiteral",
																					"src": "15370:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "15360:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "15360:6:13"
																			},
																			"nativeSrc": "15360:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "15360:12:13"
																		},
																		"nativeSrc": "15360:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "15360:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15327:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "15327:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15349:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "15349:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "15334:14:13",
																					"nodeType": "YulIdentifier",
																					"src": "15334:14:13"
																				},
																				"nativeSrc": "15334:21:13",
																				"nodeType": "YulFunctionCall",
																				"src": "15334:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "15324:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "15324:2:13"
																		},
																		"nativeSrc": "15324:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15324:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15317:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15317:6:13"
																},
																"nativeSrc": "15317:40:13",
																"nodeType": "YulFunctionCall",
																"src": "15317:40:13"
															},
															"nativeSrc": "15314:60:13",
															"nodeType": "YulIf",
															"src": "15314:60:13"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "15264:116:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15297:5:13",
														"nodeType": "YulTypedName",
														"src": "15297:5:13",
														"type": ""
													}
												],
												"src": "15264:116:13"
											},
											{
												"body": {
													"nativeSrc": "15435:84:13",
													"nodeType": "YulBlock",
													"src": "15435:84:13",
													"statements": [
														{
															"nativeSrc": "15445:29:13",
															"nodeType": "YulAssignment",
															"src": "15445:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "15467:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "15467:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "15454:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "15454:12:13"
																},
																"nativeSrc": "15454:20:13",
																"nodeType": "YulFunctionCall",
																"src": "15454:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "15445:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "15445:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15507:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "15507:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "15483:23:13",
																	"nodeType": "YulIdentifier",
																	"src": "15483:23:13"
																},
																"nativeSrc": "15483:30:13",
																"nodeType": "YulFunctionCall",
																"src": "15483:30:13"
															},
															"nativeSrc": "15483:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "15483:30:13"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "15386:133:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "15413:6:13",
														"nodeType": "YulTypedName",
														"src": "15413:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15421:3:13",
														"nodeType": "YulTypedName",
														"src": "15421:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "15429:5:13",
														"nodeType": "YulTypedName",
														"src": "15429:5:13",
														"type": ""
													}
												],
												"src": "15386:133:13"
											},
											{
												"body": {
													"nativeSrc": "15605:388:13",
													"nodeType": "YulBlock",
													"src": "15605:388:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "15651:83:13",
																"nodeType": "YulBlock",
																"src": "15651:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "15653:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "15653:77:13"
																			},
																			"nativeSrc": "15653:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "15653:79:13"
																		},
																		"nativeSrc": "15653:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "15653:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15626:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "15626:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15635:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15635:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15622:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15622:3:13"
																		},
																		"nativeSrc": "15622:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15622:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15647:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15647:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "15618:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15618:3:13"
																},
																"nativeSrc": "15618:32:13",
																"nodeType": "YulFunctionCall",
																"src": "15618:32:13"
															},
															"nativeSrc": "15615:119:13",
															"nodeType": "YulIf",
															"src": "15615:119:13"
														},
														{
															"nativeSrc": "15744:117:13",
															"nodeType": "YulBlock",
															"src": "15744:117:13",
															"statements": [
																{
																	"nativeSrc": "15759:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15759:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15773:1:13",
																		"nodeType": "YulLiteral",
																		"src": "15773:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15763:6:13",
																			"nodeType": "YulTypedName",
																			"src": "15763:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15788:63:13",
																	"nodeType": "YulAssignment",
																	"src": "15788:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15823:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "15823:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15834:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "15834:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15819:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "15819:3:13"
																				},
																				"nativeSrc": "15819:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "15819:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15843:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "15843:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "15798:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "15798:20:13"
																		},
																		"nativeSrc": "15798:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15798:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "15788:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "15788:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "15871:115:13",
															"nodeType": "YulBlock",
															"src": "15871:115:13",
															"statements": [
																{
																	"nativeSrc": "15886:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15886:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15900:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15900:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15890:6:13",
																			"nodeType": "YulTypedName",
																			"src": "15890:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15916:60:13",
																	"nodeType": "YulAssignment",
																	"src": "15916:60:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15948:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "15948:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15959:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "15959:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15944:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "15944:3:13"
																				},
																				"nativeSrc": "15944:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "15944:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15968:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "15968:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "15926:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "15926:17:13"
																		},
																		"nativeSrc": "15926:50:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15926:50:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "15916:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "15916:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "15525:468:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15567:9:13",
														"nodeType": "YulTypedName",
														"src": "15567:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "15578:7:13",
														"nodeType": "YulTypedName",
														"src": "15578:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "15590:6:13",
														"nodeType": "YulTypedName",
														"src": "15590:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15598:6:13",
														"nodeType": "YulTypedName",
														"src": "15598:6:13",
														"type": ""
													}
												],
												"src": "15525:468:13"
											},
											{
												"body": {
													"nativeSrc": "16082:391:13",
													"nodeType": "YulBlock",
													"src": "16082:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "16128:83:13",
																"nodeType": "YulBlock",
																"src": "16128:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "16130:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "16130:77:13"
																			},
																			"nativeSrc": "16130:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "16130:79:13"
																		},
																		"nativeSrc": "16130:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "16130:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16103:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "16103:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16112:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "16112:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16099:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16099:3:13"
																		},
																		"nativeSrc": "16099:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16099:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16124:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16124:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "16095:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16095:3:13"
																},
																"nativeSrc": "16095:32:13",
																"nodeType": "YulFunctionCall",
																"src": "16095:32:13"
															},
															"nativeSrc": "16092:119:13",
															"nodeType": "YulIf",
															"src": "16092:119:13"
														},
														{
															"nativeSrc": "16221:117:13",
															"nodeType": "YulBlock",
															"src": "16221:117:13",
															"statements": [
																{
																	"nativeSrc": "16236:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16236:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16250:1:13",
																		"nodeType": "YulLiteral",
																		"src": "16250:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16240:6:13",
																			"nodeType": "YulTypedName",
																			"src": "16240:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16265:63:13",
																	"nodeType": "YulAssignment",
																	"src": "16265:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16300:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "16300:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16311:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "16311:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16296:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "16296:3:13"
																				},
																				"nativeSrc": "16296:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "16296:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16320:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "16320:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "16275:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "16275:20:13"
																		},
																		"nativeSrc": "16275:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16275:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "16265:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "16265:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16348:118:13",
															"nodeType": "YulBlock",
															"src": "16348:118:13",
															"statements": [
																{
																	"nativeSrc": "16363:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16363:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16377:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16377:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16367:6:13",
																			"nodeType": "YulTypedName",
																			"src": "16367:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16393:63:13",
																	"nodeType": "YulAssignment",
																	"src": "16393:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16428:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "16428:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16439:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "16439:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16424:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "16424:3:13"
																				},
																				"nativeSrc": "16424:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "16424:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16448:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "16448:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "16403:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "16403:20:13"
																		},
																		"nativeSrc": "16403:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16403:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "16393:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "16393:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "15999:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16044:9:13",
														"nodeType": "YulTypedName",
														"src": "16044:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "16055:7:13",
														"nodeType": "YulTypedName",
														"src": "16055:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "16067:6:13",
														"nodeType": "YulTypedName",
														"src": "16067:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16075:6:13",
														"nodeType": "YulTypedName",
														"src": "16075:6:13",
														"type": ""
													}
												],
												"src": "15999:474:13"
											},
											{
												"body": {
													"nativeSrc": "16622:946:13",
													"nodeType": "YulBlock",
													"src": "16622:946:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "16669:83:13",
																"nodeType": "YulBlock",
																"src": "16669:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "16671:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "16671:77:13"
																			},
																			"nativeSrc": "16671:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "16671:79:13"
																		},
																		"nativeSrc": "16671:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "16671:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16643:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "16643:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16652:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "16652:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16639:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16639:3:13"
																		},
																		"nativeSrc": "16639:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16639:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16664:3:13",
																		"nodeType": "YulLiteral",
																		"src": "16664:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "16635:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16635:3:13"
																},
																"nativeSrc": "16635:33:13",
																"nodeType": "YulFunctionCall",
																"src": "16635:33:13"
															},
															"nativeSrc": "16632:120:13",
															"nodeType": "YulIf",
															"src": "16632:120:13"
														},
														{
															"nativeSrc": "16762:117:13",
															"nodeType": "YulBlock",
															"src": "16762:117:13",
															"statements": [
																{
																	"nativeSrc": "16777:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16777:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16791:1:13",
																		"nodeType": "YulLiteral",
																		"src": "16791:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16781:6:13",
																			"nodeType": "YulTypedName",
																			"src": "16781:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16806:63:13",
																	"nodeType": "YulAssignment",
																	"src": "16806:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16841:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "16841:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16852:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "16852:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16837:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "16837:3:13"
																				},
																				"nativeSrc": "16837:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "16837:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16861:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "16861:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "16816:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "16816:20:13"
																		},
																		"nativeSrc": "16816:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16816:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "16806:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "16806:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16889:118:13",
															"nodeType": "YulBlock",
															"src": "16889:118:13",
															"statements": [
																{
																	"nativeSrc": "16904:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16904:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16918:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16918:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16908:6:13",
																			"nodeType": "YulTypedName",
																			"src": "16908:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16934:63:13",
																	"nodeType": "YulAssignment",
																	"src": "16934:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16969:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "16969:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16980:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "16980:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16965:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "16965:3:13"
																				},
																				"nativeSrc": "16965:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "16965:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16989:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "16989:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "16944:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "16944:20:13"
																		},
																		"nativeSrc": "16944:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16944:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "16934:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "16934:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "17017:118:13",
															"nodeType": "YulBlock",
															"src": "17017:118:13",
															"statements": [
																{
																	"nativeSrc": "17032:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17032:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17046:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17046:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17036:6:13",
																			"nodeType": "YulTypedName",
																			"src": "17036:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17062:63:13",
																	"nodeType": "YulAssignment",
																	"src": "17062:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17097:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "17097:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17108:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "17108:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17093:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "17093:3:13"
																				},
																				"nativeSrc": "17093:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "17093:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17117:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "17117:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "17072:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "17072:20:13"
																		},
																		"nativeSrc": "17072:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17072:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "17062:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "17062:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "17145:118:13",
															"nodeType": "YulBlock",
															"src": "17145:118:13",
															"statements": [
																{
																	"nativeSrc": "17160:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17160:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17174:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17174:2:13",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17164:6:13",
																			"nodeType": "YulTypedName",
																			"src": "17164:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17190:63:13",
																	"nodeType": "YulAssignment",
																	"src": "17190:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17225:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "17225:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17236:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "17236:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17221:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "17221:3:13"
																				},
																				"nativeSrc": "17221:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "17221:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17245:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "17245:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "17200:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "17200:20:13"
																		},
																		"nativeSrc": "17200:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17200:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "17190:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "17190:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "17273:288:13",
															"nodeType": "YulBlock",
															"src": "17273:288:13",
															"statements": [
																{
																	"nativeSrc": "17288:47:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17288:47:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17319:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "17319:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "17330:3:13",
																						"nodeType": "YulLiteral",
																						"src": "17330:3:13",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17315:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "17315:3:13"
																				},
																				"nativeSrc": "17315:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "17315:19:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "17302:12:13",
																			"nodeType": "YulIdentifier",
																			"src": "17302:12:13"
																		},
																		"nativeSrc": "17302:33:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17302:33:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17292:6:13",
																			"nodeType": "YulTypedName",
																			"src": "17292:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "17382:83:13",
																		"nodeType": "YulBlock",
																		"src": "17382:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "17384:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "17384:77:13"
																					},
																					"nativeSrc": "17384:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "17384:79:13"
																				},
																				"nativeSrc": "17384:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "17384:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "17354:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "17354:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17362:18:13",
																				"nodeType": "YulLiteral",
																				"src": "17362:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "17351:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "17351:2:13"
																		},
																		"nativeSrc": "17351:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17351:30:13"
																	},
																	"nativeSrc": "17348:117:13",
																	"nodeType": "YulIf",
																	"src": "17348:117:13"
																},
																{
																	"nativeSrc": "17479:72:13",
																	"nodeType": "YulAssignment",
																	"src": "17479:72:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17523:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "17523:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17534:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "17534:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17519:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "17519:3:13"
																				},
																				"nativeSrc": "17519:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "17519:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17543:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "17543:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "17489:29:13",
																			"nodeType": "YulIdentifier",
																			"src": "17489:29:13"
																		},
																		"nativeSrc": "17489:62:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17489:62:13"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "17479:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "17479:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nativeSrc": "16479:1089:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16560:9:13",
														"nodeType": "YulTypedName",
														"src": "16560:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "16571:7:13",
														"nodeType": "YulTypedName",
														"src": "16571:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "16583:6:13",
														"nodeType": "YulTypedName",
														"src": "16583:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16591:6:13",
														"nodeType": "YulTypedName",
														"src": "16591:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "16599:6:13",
														"nodeType": "YulTypedName",
														"src": "16599:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "16607:6:13",
														"nodeType": "YulTypedName",
														"src": "16607:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "16615:6:13",
														"nodeType": "YulTypedName",
														"src": "16615:6:13",
														"type": ""
													}
												],
												"src": "16479:1089:13"
											},
											{
												"body": {
													"nativeSrc": "17640:263:13",
													"nodeType": "YulBlock",
													"src": "17640:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "17686:83:13",
																"nodeType": "YulBlock",
																"src": "17686:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "17688:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "17688:77:13"
																			},
																			"nativeSrc": "17688:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "17688:79:13"
																		},
																		"nativeSrc": "17688:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "17688:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17661:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "17661:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17670:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17670:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17657:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17657:3:13"
																		},
																		"nativeSrc": "17657:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17657:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17682:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17682:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "17653:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17653:3:13"
																},
																"nativeSrc": "17653:32:13",
																"nodeType": "YulFunctionCall",
																"src": "17653:32:13"
															},
															"nativeSrc": "17650:119:13",
															"nodeType": "YulIf",
															"src": "17650:119:13"
														},
														{
															"nativeSrc": "17779:117:13",
															"nodeType": "YulBlock",
															"src": "17779:117:13",
															"statements": [
																{
																	"nativeSrc": "17794:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17794:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17808:1:13",
																		"nodeType": "YulLiteral",
																		"src": "17808:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17798:6:13",
																			"nodeType": "YulTypedName",
																			"src": "17798:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17823:63:13",
																	"nodeType": "YulAssignment",
																	"src": "17823:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17858:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "17858:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17869:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "17869:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17854:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "17854:3:13"
																				},
																				"nativeSrc": "17854:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "17854:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17878:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "17878:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "17833:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "17833:20:13"
																		},
																		"nativeSrc": "17833:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17833:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "17823:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "17823:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "17574:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17610:9:13",
														"nodeType": "YulTypedName",
														"src": "17610:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "17621:7:13",
														"nodeType": "YulTypedName",
														"src": "17621:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "17633:6:13",
														"nodeType": "YulTypedName",
														"src": "17633:6:13",
														"type": ""
													}
												],
												"src": "17574:329:13"
											},
											{
												"body": {
													"nativeSrc": "17937:152:13",
													"nodeType": "YulBlock",
													"src": "17937:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17954:1:13",
																		"nodeType": "YulLiteral",
																		"src": "17954:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17957:77:13",
																		"nodeType": "YulLiteral",
																		"src": "17957:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17947:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17947:6:13"
																},
																"nativeSrc": "17947:88:13",
																"nodeType": "YulFunctionCall",
																"src": "17947:88:13"
															},
															"nativeSrc": "17947:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "17947:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18051:1:13",
																		"nodeType": "YulLiteral",
																		"src": "18051:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18054:4:13",
																		"nodeType": "YulLiteral",
																		"src": "18054:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18044:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18044:6:13"
																},
																"nativeSrc": "18044:15:13",
																"nodeType": "YulFunctionCall",
																"src": "18044:15:13"
															},
															"nativeSrc": "18044:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "18044:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18075:1:13",
																		"nodeType": "YulLiteral",
																		"src": "18075:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18078:4:13",
																		"nodeType": "YulLiteral",
																		"src": "18078:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "18068:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18068:6:13"
																},
																"nativeSrc": "18068:15:13",
																"nodeType": "YulFunctionCall",
																"src": "18068:15:13"
															},
															"nativeSrc": "18068:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "18068:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "17909:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "17909:180:13"
											},
											{
												"body": {
													"nativeSrc": "18146:269:13",
													"nodeType": "YulBlock",
													"src": "18146:269:13",
													"statements": [
														{
															"nativeSrc": "18156:22:13",
															"nodeType": "YulAssignment",
															"src": "18156:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "18170:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "18170:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18176:1:13",
																		"nodeType": "YulLiteral",
																		"src": "18176:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "18166:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18166:3:13"
																},
																"nativeSrc": "18166:12:13",
																"nodeType": "YulFunctionCall",
																"src": "18166:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "18156:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18156:6:13"
																}
															]
														},
														{
															"nativeSrc": "18187:38:13",
															"nodeType": "YulVariableDeclaration",
															"src": "18187:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "18217:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "18217:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18223:1:13",
																		"nodeType": "YulLiteral",
																		"src": "18223:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "18213:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18213:3:13"
																},
																"nativeSrc": "18213:12:13",
																"nodeType": "YulFunctionCall",
																"src": "18213:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "18191:18:13",
																	"nodeType": "YulTypedName",
																	"src": "18191:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18264:51:13",
																"nodeType": "YulBlock",
																"src": "18264:51:13",
																"statements": [
																	{
																		"nativeSrc": "18278:27:13",
																		"nodeType": "YulAssignment",
																		"src": "18278:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "18292:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "18292:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18300:4:13",
																					"nodeType": "YulLiteral",
																					"src": "18300:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "18288:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "18288:3:13"
																			},
																			"nativeSrc": "18288:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "18288:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "18278:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "18278:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "18244:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "18244:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "18237:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18237:6:13"
																},
																"nativeSrc": "18237:26:13",
																"nodeType": "YulFunctionCall",
																"src": "18237:26:13"
															},
															"nativeSrc": "18234:81:13",
															"nodeType": "YulIf",
															"src": "18234:81:13"
														},
														{
															"body": {
																"nativeSrc": "18367:42:13",
																"nodeType": "YulBlock",
																"src": "18367:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "18381:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "18381:16:13"
																			},
																			"nativeSrc": "18381:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "18381:18:13"
																		},
																		"nativeSrc": "18381:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "18381:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "18331:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "18331:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "18354:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "18354:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18362:2:13",
																				"nodeType": "YulLiteral",
																				"src": "18362:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "18351:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "18351:2:13"
																		},
																		"nativeSrc": "18351:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18351:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "18328:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "18328:2:13"
																},
																"nativeSrc": "18328:38:13",
																"nodeType": "YulFunctionCall",
																"src": "18328:38:13"
															},
															"nativeSrc": "18325:84:13",
															"nodeType": "YulIf",
															"src": "18325:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "18095:320:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "18130:4:13",
														"nodeType": "YulTypedName",
														"src": "18130:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "18139:6:13",
														"nodeType": "YulTypedName",
														"src": "18139:6:13",
														"type": ""
													}
												],
												"src": "18095:320:13"
											},
											{
												"body": {
													"nativeSrc": "18449:152:13",
													"nodeType": "YulBlock",
													"src": "18449:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18466:1:13",
																		"nodeType": "YulLiteral",
																		"src": "18466:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18469:77:13",
																		"nodeType": "YulLiteral",
																		"src": "18469:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18459:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18459:6:13"
																},
																"nativeSrc": "18459:88:13",
																"nodeType": "YulFunctionCall",
																"src": "18459:88:13"
															},
															"nativeSrc": "18459:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "18459:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18563:1:13",
																		"nodeType": "YulLiteral",
																		"src": "18563:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18566:4:13",
																		"nodeType": "YulLiteral",
																		"src": "18566:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18556:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18556:6:13"
																},
																"nativeSrc": "18556:15:13",
																"nodeType": "YulFunctionCall",
																"src": "18556:15:13"
															},
															"nativeSrc": "18556:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "18556:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18587:1:13",
																		"nodeType": "YulLiteral",
																		"src": "18587:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18590:4:13",
																		"nodeType": "YulLiteral",
																		"src": "18590:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "18580:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18580:6:13"
																},
																"nativeSrc": "18580:15:13",
																"nodeType": "YulFunctionCall",
																"src": "18580:15:13"
															},
															"nativeSrc": "18580:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "18580:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "18421:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "18421:180:13"
											},
											{
												"body": {
													"nativeSrc": "18651:147:13",
													"nodeType": "YulBlock",
													"src": "18651:147:13",
													"statements": [
														{
															"nativeSrc": "18661:25:13",
															"nodeType": "YulAssignment",
															"src": "18661:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18684:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "18684:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18666:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "18666:17:13"
																},
																"nativeSrc": "18666:20:13",
																"nodeType": "YulFunctionCall",
																"src": "18666:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "18661:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "18661:1:13"
																}
															]
														},
														{
															"nativeSrc": "18695:25:13",
															"nodeType": "YulAssignment",
															"src": "18695:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "18718:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "18718:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18700:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "18700:17:13"
																},
																"nativeSrc": "18700:20:13",
																"nodeType": "YulFunctionCall",
																"src": "18700:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "18695:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "18695:1:13"
																}
															]
														},
														{
															"nativeSrc": "18729:16:13",
															"nodeType": "YulAssignment",
															"src": "18729:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18740:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "18740:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "18743:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "18743:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18736:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18736:3:13"
																},
																"nativeSrc": "18736:9:13",
																"nodeType": "YulFunctionCall",
																"src": "18736:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "18729:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18729:3:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18769:22:13",
																"nodeType": "YulBlock",
																"src": "18769:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "18771:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "18771:16:13"
																			},
																			"nativeSrc": "18771:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "18771:18:13"
																		},
																		"nativeSrc": "18771:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "18771:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18761:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "18761:1:13"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "18764:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18764:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18758:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "18758:2:13"
																},
																"nativeSrc": "18758:10:13",
																"nodeType": "YulFunctionCall",
																"src": "18758:10:13"
															},
															"nativeSrc": "18755:36:13",
															"nodeType": "YulIf",
															"src": "18755:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "18607:191:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "18638:1:13",
														"nodeType": "YulTypedName",
														"src": "18638:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "18641:1:13",
														"nodeType": "YulTypedName",
														"src": "18641:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "18647:3:13",
														"nodeType": "YulTypedName",
														"src": "18647:3:13",
														"type": ""
													}
												],
												"src": "18607:191:13"
											},
											{
												"body": {
													"nativeSrc": "18930:206:13",
													"nodeType": "YulBlock",
													"src": "18930:206:13",
													"statements": [
														{
															"nativeSrc": "18940:26:13",
															"nodeType": "YulAssignment",
															"src": "18940:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18952:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "18952:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18963:2:13",
																		"nodeType": "YulLiteral",
																		"src": "18963:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18948:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18948:3:13"
																},
																"nativeSrc": "18948:18:13",
																"nodeType": "YulFunctionCall",
																"src": "18948:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18940:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "18940:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19020:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19020:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19033:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "19033:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19044:1:13",
																				"nodeType": "YulLiteral",
																				"src": "19044:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19029:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19029:3:13"
																		},
																		"nativeSrc": "19029:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19029:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18976:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "18976:43:13"
																},
																"nativeSrc": "18976:71:13",
																"nodeType": "YulFunctionCall",
																"src": "18976:71:13"
															},
															"nativeSrc": "18976:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "18976:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19101:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19101:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19114:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "19114:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19125:2:13",
																				"nodeType": "YulLiteral",
																				"src": "19125:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19110:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19110:3:13"
																		},
																		"nativeSrc": "19110:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19110:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19057:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "19057:43:13"
																},
																"nativeSrc": "19057:72:13",
																"nodeType": "YulFunctionCall",
																"src": "19057:72:13"
															},
															"nativeSrc": "19057:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "19057:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "18804:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18894:9:13",
														"nodeType": "YulTypedName",
														"src": "18894:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18906:6:13",
														"nodeType": "YulTypedName",
														"src": "18906:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18914:6:13",
														"nodeType": "YulTypedName",
														"src": "18914:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18925:4:13",
														"nodeType": "YulTypedName",
														"src": "18925:4:13",
														"type": ""
													}
												],
												"src": "18804:332:13"
											},
											{
												"body": {
													"nativeSrc": "19268:206:13",
													"nodeType": "YulBlock",
													"src": "19268:206:13",
													"statements": [
														{
															"nativeSrc": "19278:26:13",
															"nodeType": "YulAssignment",
															"src": "19278:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19290:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "19290:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19301:2:13",
																		"nodeType": "YulLiteral",
																		"src": "19301:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19286:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19286:3:13"
																},
																"nativeSrc": "19286:18:13",
																"nodeType": "YulFunctionCall",
																"src": "19286:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19278:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "19278:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19358:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19358:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19371:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "19371:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19382:1:13",
																				"nodeType": "YulLiteral",
																				"src": "19382:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19367:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19367:3:13"
																		},
																		"nativeSrc": "19367:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19367:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19314:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "19314:43:13"
																},
																"nativeSrc": "19314:71:13",
																"nodeType": "YulFunctionCall",
																"src": "19314:71:13"
															},
															"nativeSrc": "19314:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "19314:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19439:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19439:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19452:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "19452:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19463:2:13",
																				"nodeType": "YulLiteral",
																				"src": "19463:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19448:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19448:3:13"
																		},
																		"nativeSrc": "19448:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19448:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19395:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "19395:43:13"
																},
																"nativeSrc": "19395:72:13",
																"nodeType": "YulFunctionCall",
																"src": "19395:72:13"
															},
															"nativeSrc": "19395:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "19395:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "19142:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19232:9:13",
														"nodeType": "YulTypedName",
														"src": "19232:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19244:6:13",
														"nodeType": "YulTypedName",
														"src": "19244:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19252:6:13",
														"nodeType": "YulTypedName",
														"src": "19252:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19263:4:13",
														"nodeType": "YulTypedName",
														"src": "19263:4:13",
														"type": ""
													}
												],
												"src": "19142:332:13"
											},
											{
												"body": {
													"nativeSrc": "19508:152:13",
													"nodeType": "YulBlock",
													"src": "19508:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19525:1:13",
																		"nodeType": "YulLiteral",
																		"src": "19525:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19528:77:13",
																		"nodeType": "YulLiteral",
																		"src": "19528:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19518:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19518:6:13"
																},
																"nativeSrc": "19518:88:13",
																"nodeType": "YulFunctionCall",
																"src": "19518:88:13"
															},
															"nativeSrc": "19518:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "19518:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19622:1:13",
																		"nodeType": "YulLiteral",
																		"src": "19622:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19625:4:13",
																		"nodeType": "YulLiteral",
																		"src": "19625:4:13",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19615:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19615:6:13"
																},
																"nativeSrc": "19615:15:13",
																"nodeType": "YulFunctionCall",
																"src": "19615:15:13"
															},
															"nativeSrc": "19615:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "19615:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19646:1:13",
																		"nodeType": "YulLiteral",
																		"src": "19646:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19649:4:13",
																		"nodeType": "YulLiteral",
																		"src": "19649:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "19639:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19639:6:13"
																},
																"nativeSrc": "19639:15:13",
																"nodeType": "YulFunctionCall",
																"src": "19639:15:13"
															},
															"nativeSrc": "19639:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "19639:15:13"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "19480:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "19480:180:13"
											},
											{
												"body": {
													"nativeSrc": "19709:190:13",
													"nodeType": "YulBlock",
													"src": "19709:190:13",
													"statements": [
														{
															"nativeSrc": "19719:33:13",
															"nodeType": "YulAssignment",
															"src": "19719:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19746:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "19746:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19728:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "19728:17:13"
																},
																"nativeSrc": "19728:24:13",
																"nodeType": "YulFunctionCall",
																"src": "19728:24:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "19719:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "19719:5:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19842:22:13",
																"nodeType": "YulBlock",
																"src": "19842:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "19844:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "19844:16:13"
																			},
																			"nativeSrc": "19844:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "19844:18:13"
																		},
																		"nativeSrc": "19844:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "19844:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19767:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "19767:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19774:66:13",
																		"nodeType": "YulLiteral",
																		"src": "19774:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "19764:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "19764:2:13"
																},
																"nativeSrc": "19764:77:13",
																"nodeType": "YulFunctionCall",
																"src": "19764:77:13"
															},
															"nativeSrc": "19761:103:13",
															"nodeType": "YulIf",
															"src": "19761:103:13"
														},
														{
															"nativeSrc": "19873:20:13",
															"nodeType": "YulAssignment",
															"src": "19873:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19884:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "19884:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19891:1:13",
																		"nodeType": "YulLiteral",
																		"src": "19891:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19880:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19880:3:13"
																},
																"nativeSrc": "19880:13:13",
																"nodeType": "YulFunctionCall",
																"src": "19880:13:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "19873:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19873:3:13"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "19666:233:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19695:5:13",
														"nodeType": "YulTypedName",
														"src": "19695:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "19705:3:13",
														"nodeType": "YulTypedName",
														"src": "19705:3:13",
														"type": ""
													}
												],
												"src": "19666:233:13"
											},
											{
												"body": {
													"nativeSrc": "20011:64:13",
													"nodeType": "YulBlock",
													"src": "20011:64:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20033:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "20033:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20041:1:13",
																				"nodeType": "YulLiteral",
																				"src": "20041:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20029:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20029:3:13"
																		},
																		"nativeSrc": "20029:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20029:14:13"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "20045:22:13",
																		"nodeType": "YulLiteral",
																		"src": "20045:22:13",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20022:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20022:6:13"
																},
																"nativeSrc": "20022:46:13",
																"nodeType": "YulFunctionCall",
																"src": "20022:46:13"
															},
															"nativeSrc": "20022:46:13",
															"nodeType": "YulExpressionStatement",
															"src": "20022:46:13"
														}
													]
												},
												"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
												"nativeSrc": "19905:170:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20003:6:13",
														"nodeType": "YulTypedName",
														"src": "20003:6:13",
														"type": ""
													}
												],
												"src": "19905:170:13"
											},
											{
												"body": {
													"nativeSrc": "20227:220:13",
													"nodeType": "YulBlock",
													"src": "20227:220:13",
													"statements": [
														{
															"nativeSrc": "20237:74:13",
															"nodeType": "YulAssignment",
															"src": "20237:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20303:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "20303:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20308:2:13",
																		"nodeType": "YulLiteral",
																		"src": "20308:2:13",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20244:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "20244:58:13"
																},
																"nativeSrc": "20244:67:13",
																"nodeType": "YulFunctionCall",
																"src": "20244:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20237:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20237:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20409:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "20409:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																	"nativeSrc": "20320:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "20320:88:13"
																},
																"nativeSrc": "20320:93:13",
																"nodeType": "YulFunctionCall",
																"src": "20320:93:13"
															},
															"nativeSrc": "20320:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "20320:93:13"
														},
														{
															"nativeSrc": "20422:19:13",
															"nodeType": "YulAssignment",
															"src": "20422:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20433:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "20433:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20438:2:13",
																		"nodeType": "YulLiteral",
																		"src": "20438:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20429:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20429:3:13"
																},
																"nativeSrc": "20429:12:13",
																"nodeType": "YulFunctionCall",
																"src": "20429:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20422:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20422:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20081:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20215:3:13",
														"nodeType": "YulTypedName",
														"src": "20215:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20223:3:13",
														"nodeType": "YulTypedName",
														"src": "20223:3:13",
														"type": ""
													}
												],
												"src": "20081:366:13"
											},
											{
												"body": {
													"nativeSrc": "20624:248:13",
													"nodeType": "YulBlock",
													"src": "20624:248:13",
													"statements": [
														{
															"nativeSrc": "20634:26:13",
															"nodeType": "YulAssignment",
															"src": "20634:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20646:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "20646:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20657:2:13",
																		"nodeType": "YulLiteral",
																		"src": "20657:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20642:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20642:3:13"
																},
																"nativeSrc": "20642:18:13",
																"nodeType": "YulFunctionCall",
																"src": "20642:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20634:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "20634:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20681:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "20681:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20692:1:13",
																				"nodeType": "YulLiteral",
																				"src": "20692:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20677:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20677:3:13"
																		},
																		"nativeSrc": "20677:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20677:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20700:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "20700:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20706:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "20706:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20696:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20696:3:13"
																		},
																		"nativeSrc": "20696:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20696:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20670:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20670:6:13"
																},
																"nativeSrc": "20670:47:13",
																"nodeType": "YulFunctionCall",
																"src": "20670:47:13"
															},
															"nativeSrc": "20670:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "20670:47:13"
														},
														{
															"nativeSrc": "20726:139:13",
															"nodeType": "YulAssignment",
															"src": "20726:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20860:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "20860:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20734:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "20734:124:13"
																},
																"nativeSrc": "20734:131:13",
																"nodeType": "YulFunctionCall",
																"src": "20734:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20726:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "20726:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20453:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20604:9:13",
														"nodeType": "YulTypedName",
														"src": "20604:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20619:4:13",
														"nodeType": "YulTypedName",
														"src": "20619:4:13",
														"type": ""
													}
												],
												"src": "20453:419:13"
											},
											{
												"body": {
													"nativeSrc": "20923:149:13",
													"nodeType": "YulBlock",
													"src": "20923:149:13",
													"statements": [
														{
															"nativeSrc": "20933:25:13",
															"nodeType": "YulAssignment",
															"src": "20933:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20956:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "20956:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20938:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "20938:17:13"
																},
																"nativeSrc": "20938:20:13",
																"nodeType": "YulFunctionCall",
																"src": "20938:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "20933:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "20933:1:13"
																}
															]
														},
														{
															"nativeSrc": "20967:25:13",
															"nodeType": "YulAssignment",
															"src": "20967:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "20990:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "20990:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20972:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "20972:17:13"
																},
																"nativeSrc": "20972:20:13",
																"nodeType": "YulFunctionCall",
																"src": "20972:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "20967:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "20967:1:13"
																}
															]
														},
														{
															"nativeSrc": "21001:17:13",
															"nodeType": "YulAssignment",
															"src": "21001:17:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21013:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "21013:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "21016:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "21016:1:13"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "21009:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21009:3:13"
																},
																"nativeSrc": "21009:9:13",
																"nodeType": "YulFunctionCall",
																"src": "21009:9:13"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "21001:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "21001:4:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "21043:22:13",
																"nodeType": "YulBlock",
																"src": "21043:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "21045:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "21045:16:13"
																			},
																			"nativeSrc": "21045:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "21045:18:13"
																		},
																		"nativeSrc": "21045:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "21045:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "21034:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "21034:4:13"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "21040:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "21040:1:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "21031:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "21031:2:13"
																},
																"nativeSrc": "21031:11:13",
																"nodeType": "YulFunctionCall",
																"src": "21031:11:13"
															},
															"nativeSrc": "21028:37:13",
															"nodeType": "YulIf",
															"src": "21028:37:13"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "20878:194:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "20909:1:13",
														"nodeType": "YulTypedName",
														"src": "20909:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "20912:1:13",
														"nodeType": "YulTypedName",
														"src": "20912:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "20918:4:13",
														"nodeType": "YulTypedName",
														"src": "20918:4:13",
														"type": ""
													}
												],
												"src": "20878:194:13"
											},
											{
												"body": {
													"nativeSrc": "21260:371:13",
													"nodeType": "YulBlock",
													"src": "21260:371:13",
													"statements": [
														{
															"nativeSrc": "21270:27:13",
															"nodeType": "YulAssignment",
															"src": "21270:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21282:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "21282:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21293:3:13",
																		"nodeType": "YulLiteral",
																		"src": "21293:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21278:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21278:3:13"
																},
																"nativeSrc": "21278:19:13",
																"nodeType": "YulFunctionCall",
																"src": "21278:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21270:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "21270:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21351:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "21351:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21364:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "21364:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21375:1:13",
																				"nodeType": "YulLiteral",
																				"src": "21375:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21360:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21360:3:13"
																		},
																		"nativeSrc": "21360:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21360:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21307:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "21307:43:13"
																},
																"nativeSrc": "21307:71:13",
																"nodeType": "YulFunctionCall",
																"src": "21307:71:13"
															},
															"nativeSrc": "21307:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "21307:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21432:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "21432:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21445:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "21445:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21456:2:13",
																				"nodeType": "YulLiteral",
																				"src": "21456:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21441:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21441:3:13"
																		},
																		"nativeSrc": "21441:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21441:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21388:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "21388:43:13"
																},
																"nativeSrc": "21388:72:13",
																"nodeType": "YulFunctionCall",
																"src": "21388:72:13"
															},
															"nativeSrc": "21388:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "21388:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "21514:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "21514:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21527:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "21527:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21538:2:13",
																				"nodeType": "YulLiteral",
																				"src": "21538:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21523:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21523:3:13"
																		},
																		"nativeSrc": "21523:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21523:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21470:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "21470:43:13"
																},
																"nativeSrc": "21470:72:13",
																"nodeType": "YulFunctionCall",
																"src": "21470:72:13"
															},
															"nativeSrc": "21470:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "21470:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "21596:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "21596:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21609:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "21609:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21620:2:13",
																				"nodeType": "YulLiteral",
																				"src": "21620:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21605:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21605:3:13"
																		},
																		"nativeSrc": "21605:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21605:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21552:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "21552:43:13"
																},
																"nativeSrc": "21552:72:13",
																"nodeType": "YulFunctionCall",
																"src": "21552:72:13"
															},
															"nativeSrc": "21552:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "21552:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "21078:553:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21208:9:13",
														"nodeType": "YulTypedName",
														"src": "21208:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "21220:6:13",
														"nodeType": "YulTypedName",
														"src": "21220:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "21228:6:13",
														"nodeType": "YulTypedName",
														"src": "21228:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21236:6:13",
														"nodeType": "YulTypedName",
														"src": "21236:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21244:6:13",
														"nodeType": "YulTypedName",
														"src": "21244:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21255:4:13",
														"nodeType": "YulTypedName",
														"src": "21255:4:13",
														"type": ""
													}
												],
												"src": "21078:553:13"
											},
											{
												"body": {
													"nativeSrc": "21863:408:13",
													"nodeType": "YulBlock",
													"src": "21863:408:13",
													"statements": [
														{
															"nativeSrc": "21873:26:13",
															"nodeType": "YulAssignment",
															"src": "21873:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21885:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "21885:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21896:2:13",
																		"nodeType": "YulLiteral",
																		"src": "21896:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21881:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21881:3:13"
																},
																"nativeSrc": "21881:18:13",
																"nodeType": "YulFunctionCall",
																"src": "21881:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21873:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "21873:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21920:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "21920:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21931:1:13",
																				"nodeType": "YulLiteral",
																				"src": "21931:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21916:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21916:3:13"
																		},
																		"nativeSrc": "21916:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21916:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21939:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "21939:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21945:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "21945:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21935:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21935:3:13"
																		},
																		"nativeSrc": "21935:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21935:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21909:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "21909:6:13"
																},
																"nativeSrc": "21909:47:13",
																"nodeType": "YulFunctionCall",
																"src": "21909:47:13"
															},
															"nativeSrc": "21909:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "21909:47:13"
														},
														{
															"nativeSrc": "21965:116:13",
															"nodeType": "YulAssignment",
															"src": "21965:116:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22067:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "22067:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "22076:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "22076:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "21973:93:13",
																	"nodeType": "YulIdentifier",
																	"src": "21973:93:13"
																},
																"nativeSrc": "21973:108:13",
																"nodeType": "YulFunctionCall",
																"src": "21973:108:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21965:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "21965:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22102:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "22102:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22113:2:13",
																				"nodeType": "YulLiteral",
																				"src": "22113:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22098:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "22098:3:13"
																		},
																		"nativeSrc": "22098:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22098:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22122:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "22122:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22128:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "22128:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22118:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "22118:3:13"
																		},
																		"nativeSrc": "22118:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22118:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22091:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "22091:6:13"
																},
																"nativeSrc": "22091:48:13",
																"nodeType": "YulFunctionCall",
																"src": "22091:48:13"
															},
															"nativeSrc": "22091:48:13",
															"nodeType": "YulExpressionStatement",
															"src": "22091:48:13"
														},
														{
															"nativeSrc": "22148:116:13",
															"nodeType": "YulAssignment",
															"src": "22148:116:13",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "22250:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "22250:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "22259:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "22259:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "22156:93:13",
																	"nodeType": "YulIdentifier",
																	"src": "22156:93:13"
																},
																"nativeSrc": "22156:108:13",
																"nodeType": "YulFunctionCall",
																"src": "22156:108:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22148:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "22148:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "21637:634:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21827:9:13",
														"nodeType": "YulTypedName",
														"src": "21827:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21839:6:13",
														"nodeType": "YulTypedName",
														"src": "21839:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21847:6:13",
														"nodeType": "YulTypedName",
														"src": "21847:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21858:4:13",
														"nodeType": "YulTypedName",
														"src": "21858:4:13",
														"type": ""
													}
												],
												"src": "21637:634:13"
											},
											{
												"body": {
													"nativeSrc": "22335:40:13",
													"nodeType": "YulBlock",
													"src": "22335:40:13",
													"statements": [
														{
															"nativeSrc": "22346:22:13",
															"nodeType": "YulAssignment",
															"src": "22346:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "22362:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "22362:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "22356:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "22356:5:13"
																},
																"nativeSrc": "22356:12:13",
																"nodeType": "YulFunctionCall",
																"src": "22356:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "22346:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "22346:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "22277:98:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "22318:5:13",
														"nodeType": "YulTypedName",
														"src": "22318:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "22328:6:13",
														"nodeType": "YulTypedName",
														"src": "22328:6:13",
														"type": ""
													}
												],
												"src": "22277:98:13"
											},
											{
												"body": {
													"nativeSrc": "22476:73:13",
													"nodeType": "YulBlock",
													"src": "22476:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22493:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "22493:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "22498:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "22498:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22486:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "22486:6:13"
																},
																"nativeSrc": "22486:19:13",
																"nodeType": "YulFunctionCall",
																"src": "22486:19:13"
															},
															"nativeSrc": "22486:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "22486:19:13"
														},
														{
															"nativeSrc": "22514:29:13",
															"nodeType": "YulAssignment",
															"src": "22514:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22533:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "22533:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22538:4:13",
																		"nodeType": "YulLiteral",
																		"src": "22538:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22529:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "22529:3:13"
																},
																"nativeSrc": "22529:14:13",
																"nodeType": "YulFunctionCall",
																"src": "22529:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "22514:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "22514:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "22381:168:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22448:3:13",
														"nodeType": "YulTypedName",
														"src": "22448:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "22453:6:13",
														"nodeType": "YulTypedName",
														"src": "22453:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "22464:11:13",
														"nodeType": "YulTypedName",
														"src": "22464:11:13",
														"type": ""
													}
												],
												"src": "22381:168:13"
											},
											{
												"body": {
													"nativeSrc": "22645:283:13",
													"nodeType": "YulBlock",
													"src": "22645:283:13",
													"statements": [
														{
															"nativeSrc": "22655:52:13",
															"nodeType": "YulVariableDeclaration",
															"src": "22655:52:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "22701:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "22701:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "22669:31:13",
																	"nodeType": "YulIdentifier",
																	"src": "22669:31:13"
																},
																"nativeSrc": "22669:38:13",
																"nodeType": "YulFunctionCall",
																"src": "22669:38:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "22659:6:13",
																	"nodeType": "YulTypedName",
																	"src": "22659:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "22716:77:13",
															"nodeType": "YulAssignment",
															"src": "22716:77:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22781:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "22781:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "22786:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "22786:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "22723:57:13",
																	"nodeType": "YulIdentifier",
																	"src": "22723:57:13"
																},
																"nativeSrc": "22723:70:13",
																"nodeType": "YulFunctionCall",
																"src": "22723:70:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22716:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "22716:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "22841:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "22841:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22848:4:13",
																				"nodeType": "YulLiteral",
																				"src": "22848:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22837:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "22837:3:13"
																		},
																		"nativeSrc": "22837:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22837:16:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "22855:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "22855:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "22860:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "22860:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "22802:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "22802:34:13"
																},
																"nativeSrc": "22802:65:13",
																"nodeType": "YulFunctionCall",
																"src": "22802:65:13"
															},
															"nativeSrc": "22802:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "22802:65:13"
														},
														{
															"nativeSrc": "22876:46:13",
															"nodeType": "YulAssignment",
															"src": "22876:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22887:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "22887:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "22914:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "22914:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "22892:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "22892:21:13"
																		},
																		"nativeSrc": "22892:29:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22892:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22883:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "22883:3:13"
																},
																"nativeSrc": "22883:39:13",
																"nodeType": "YulFunctionCall",
																"src": "22883:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22876:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "22876:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "22555:373:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "22626:5:13",
														"nodeType": "YulTypedName",
														"src": "22626:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "22633:3:13",
														"nodeType": "YulTypedName",
														"src": "22633:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22641:3:13",
														"nodeType": "YulTypedName",
														"src": "22641:3:13",
														"type": ""
													}
												],
												"src": "22555:373:13"
											},
											{
												"body": {
													"nativeSrc": "23162:523:13",
													"nodeType": "YulBlock",
													"src": "23162:523:13",
													"statements": [
														{
															"nativeSrc": "23172:27:13",
															"nodeType": "YulAssignment",
															"src": "23172:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23184:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "23184:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23195:3:13",
																		"nodeType": "YulLiteral",
																		"src": "23195:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23180:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "23180:3:13"
																},
																"nativeSrc": "23180:19:13",
																"nodeType": "YulFunctionCall",
																"src": "23180:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23172:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "23172:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "23253:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "23253:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23266:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "23266:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23277:1:13",
																				"nodeType": "YulLiteral",
																				"src": "23277:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23262:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "23262:3:13"
																		},
																		"nativeSrc": "23262:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23262:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "23209:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "23209:43:13"
																},
																"nativeSrc": "23209:71:13",
																"nodeType": "YulFunctionCall",
																"src": "23209:71:13"
															},
															"nativeSrc": "23209:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "23209:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "23334:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "23334:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23347:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "23347:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23358:2:13",
																				"nodeType": "YulLiteral",
																				"src": "23358:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23343:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "23343:3:13"
																		},
																		"nativeSrc": "23343:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23343:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "23290:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "23290:43:13"
																},
																"nativeSrc": "23290:72:13",
																"nodeType": "YulFunctionCall",
																"src": "23290:72:13"
															},
															"nativeSrc": "23290:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "23290:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "23416:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "23416:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23429:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "23429:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23440:2:13",
																				"nodeType": "YulLiteral",
																				"src": "23440:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23425:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "23425:3:13"
																		},
																		"nativeSrc": "23425:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23425:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "23372:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "23372:43:13"
																},
																"nativeSrc": "23372:72:13",
																"nodeType": "YulFunctionCall",
																"src": "23372:72:13"
															},
															"nativeSrc": "23372:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "23372:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "23498:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "23498:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23511:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "23511:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23522:2:13",
																				"nodeType": "YulLiteral",
																				"src": "23522:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23507:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "23507:3:13"
																		},
																		"nativeSrc": "23507:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23507:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "23454:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "23454:43:13"
																},
																"nativeSrc": "23454:72:13",
																"nodeType": "YulFunctionCall",
																"src": "23454:72:13"
															},
															"nativeSrc": "23454:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "23454:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23547:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "23547:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23558:3:13",
																				"nodeType": "YulLiteral",
																				"src": "23558:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23543:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "23543:3:13"
																		},
																		"nativeSrc": "23543:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23543:19:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23568:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "23568:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23574:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "23574:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23564:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "23564:3:13"
																		},
																		"nativeSrc": "23564:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23564:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23536:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "23536:6:13"
																},
																"nativeSrc": "23536:49:13",
																"nodeType": "YulFunctionCall",
																"src": "23536:49:13"
															},
															"nativeSrc": "23536:49:13",
															"nodeType": "YulExpressionStatement",
															"src": "23536:49:13"
														},
														{
															"nativeSrc": "23594:84:13",
															"nodeType": "YulAssignment",
															"src": "23594:84:13",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "23664:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "23664:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "23673:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "23673:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "23602:61:13",
																	"nodeType": "YulIdentifier",
																	"src": "23602:61:13"
																},
																"nativeSrc": "23602:76:13",
																"nodeType": "YulFunctionCall",
																"src": "23602:76:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23594:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "23594:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "22934:751:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23102:9:13",
														"nodeType": "YulTypedName",
														"src": "23102:9:13",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "23114:6:13",
														"nodeType": "YulTypedName",
														"src": "23114:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "23122:6:13",
														"nodeType": "YulTypedName",
														"src": "23122:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "23130:6:13",
														"nodeType": "YulTypedName",
														"src": "23130:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "23138:6:13",
														"nodeType": "YulTypedName",
														"src": "23138:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "23146:6:13",
														"nodeType": "YulTypedName",
														"src": "23146:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23157:4:13",
														"nodeType": "YulTypedName",
														"src": "23157:4:13",
														"type": ""
													}
												],
												"src": "22934:751:13"
											},
											{
												"body": {
													"nativeSrc": "23753:79:13",
													"nodeType": "YulBlock",
													"src": "23753:79:13",
													"statements": [
														{
															"nativeSrc": "23763:22:13",
															"nodeType": "YulAssignment",
															"src": "23763:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "23778:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "23778:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "23772:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "23772:5:13"
																},
																"nativeSrc": "23772:13:13",
																"nodeType": "YulFunctionCall",
																"src": "23772:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "23763:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "23763:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "23820:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "23820:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "23794:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "23794:25:13"
																},
																"nativeSrc": "23794:32:13",
																"nodeType": "YulFunctionCall",
																"src": "23794:32:13"
															},
															"nativeSrc": "23794:32:13",
															"nodeType": "YulExpressionStatement",
															"src": "23794:32:13"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "23691:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "23731:6:13",
														"nodeType": "YulTypedName",
														"src": "23731:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "23739:3:13",
														"nodeType": "YulTypedName",
														"src": "23739:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "23747:5:13",
														"nodeType": "YulTypedName",
														"src": "23747:5:13",
														"type": ""
													}
												],
												"src": "23691:141:13"
											},
											{
												"body": {
													"nativeSrc": "23914:273:13",
													"nodeType": "YulBlock",
													"src": "23914:273:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "23960:83:13",
																"nodeType": "YulBlock",
																"src": "23960:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "23962:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "23962:77:13"
																			},
																			"nativeSrc": "23962:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "23962:79:13"
																		},
																		"nativeSrc": "23962:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "23962:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "23935:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "23935:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23944:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "23944:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23931:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "23931:3:13"
																		},
																		"nativeSrc": "23931:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23931:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23956:2:13",
																		"nodeType": "YulLiteral",
																		"src": "23956:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "23927:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "23927:3:13"
																},
																"nativeSrc": "23927:32:13",
																"nodeType": "YulFunctionCall",
																"src": "23927:32:13"
															},
															"nativeSrc": "23924:119:13",
															"nodeType": "YulIf",
															"src": "23924:119:13"
														},
														{
															"nativeSrc": "24053:127:13",
															"nodeType": "YulBlock",
															"src": "24053:127:13",
															"statements": [
																{
																	"nativeSrc": "24068:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "24068:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "24082:1:13",
																		"nodeType": "YulLiteral",
																		"src": "24082:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "24072:6:13",
																			"nodeType": "YulTypedName",
																			"src": "24072:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "24097:73:13",
																	"nodeType": "YulAssignment",
																	"src": "24097:73:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "24142:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "24142:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "24153:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "24153:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "24138:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "24138:3:13"
																				},
																				"nativeSrc": "24138:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "24138:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "24162:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "24162:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "24107:30:13",
																			"nodeType": "YulIdentifier",
																			"src": "24107:30:13"
																		},
																		"nativeSrc": "24107:63:13",
																		"nodeType": "YulFunctionCall",
																		"src": "24107:63:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "24097:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "24097:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "23838:349:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23884:9:13",
														"nodeType": "YulTypedName",
														"src": "23884:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "23895:7:13",
														"nodeType": "YulTypedName",
														"src": "23895:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "23907:6:13",
														"nodeType": "YulTypedName",
														"src": "23907:6:13",
														"type": ""
													}
												],
												"src": "23838:349:13"
											},
											{
												"body": {
													"nativeSrc": "24521:725:13",
													"nodeType": "YulBlock",
													"src": "24521:725:13",
													"statements": [
														{
															"nativeSrc": "24531:27:13",
															"nodeType": "YulAssignment",
															"src": "24531:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24543:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "24543:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24554:3:13",
																		"nodeType": "YulLiteral",
																		"src": "24554:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24539:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "24539:3:13"
																},
																"nativeSrc": "24539:19:13",
																"nodeType": "YulFunctionCall",
																"src": "24539:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24531:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "24531:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "24612:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "24612:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24625:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "24625:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24636:1:13",
																				"nodeType": "YulLiteral",
																				"src": "24636:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24621:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "24621:3:13"
																		},
																		"nativeSrc": "24621:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "24621:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "24568:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "24568:43:13"
																},
																"nativeSrc": "24568:71:13",
																"nodeType": "YulFunctionCall",
																"src": "24568:71:13"
															},
															"nativeSrc": "24568:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "24568:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "24693:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "24693:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24706:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "24706:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24717:2:13",
																				"nodeType": "YulLiteral",
																				"src": "24717:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24702:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "24702:3:13"
																		},
																		"nativeSrc": "24702:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "24702:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "24649:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "24649:43:13"
																},
																"nativeSrc": "24649:72:13",
																"nodeType": "YulFunctionCall",
																"src": "24649:72:13"
															},
															"nativeSrc": "24649:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "24649:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24742:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "24742:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24753:2:13",
																				"nodeType": "YulLiteral",
																				"src": "24753:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24738:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "24738:3:13"
																		},
																		"nativeSrc": "24738:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "24738:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "24762:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "24762:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24768:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "24768:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24758:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "24758:3:13"
																		},
																		"nativeSrc": "24758:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "24758:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24731:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "24731:6:13"
																},
																"nativeSrc": "24731:48:13",
																"nodeType": "YulFunctionCall",
																"src": "24731:48:13"
															},
															"nativeSrc": "24731:48:13",
															"nodeType": "YulExpressionStatement",
															"src": "24731:48:13"
														},
														{
															"nativeSrc": "24788:116:13",
															"nodeType": "YulAssignment",
															"src": "24788:116:13",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "24890:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "24890:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "24899:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "24899:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "24796:93:13",
																	"nodeType": "YulIdentifier",
																	"src": "24796:93:13"
																},
																"nativeSrc": "24796:108:13",
																"nodeType": "YulFunctionCall",
																"src": "24796:108:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24788:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "24788:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24925:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "24925:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24936:2:13",
																				"nodeType": "YulLiteral",
																				"src": "24936:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24921:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "24921:3:13"
																		},
																		"nativeSrc": "24921:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "24921:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "24945:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "24945:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24951:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "24951:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24941:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "24941:3:13"
																		},
																		"nativeSrc": "24941:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "24941:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24914:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "24914:6:13"
																},
																"nativeSrc": "24914:48:13",
																"nodeType": "YulFunctionCall",
																"src": "24914:48:13"
															},
															"nativeSrc": "24914:48:13",
															"nodeType": "YulExpressionStatement",
															"src": "24914:48:13"
														},
														{
															"nativeSrc": "24971:116:13",
															"nodeType": "YulAssignment",
															"src": "24971:116:13",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "25073:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "25073:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "25082:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "25082:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "24979:93:13",
																	"nodeType": "YulIdentifier",
																	"src": "24979:93:13"
																},
																"nativeSrc": "24979:108:13",
																"nodeType": "YulFunctionCall",
																"src": "24979:108:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24971:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "24971:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25108:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "25108:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25119:3:13",
																				"nodeType": "YulLiteral",
																				"src": "25119:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25104:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "25104:3:13"
																		},
																		"nativeSrc": "25104:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "25104:19:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "25129:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "25129:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "25135:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "25135:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "25125:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "25125:3:13"
																		},
																		"nativeSrc": "25125:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "25125:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25097:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "25097:6:13"
																},
																"nativeSrc": "25097:49:13",
																"nodeType": "YulFunctionCall",
																"src": "25097:49:13"
															},
															"nativeSrc": "25097:49:13",
															"nodeType": "YulExpressionStatement",
															"src": "25097:49:13"
														},
														{
															"nativeSrc": "25155:84:13",
															"nodeType": "YulAssignment",
															"src": "25155:84:13",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "25225:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "25225:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "25234:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "25234:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "25163:61:13",
																	"nodeType": "YulIdentifier",
																	"src": "25163:61:13"
																},
																"nativeSrc": "25163:76:13",
																"nodeType": "YulFunctionCall",
																"src": "25163:76:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25155:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "25155:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "24193:1053:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24461:9:13",
														"nodeType": "YulTypedName",
														"src": "24461:9:13",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "24473:6:13",
														"nodeType": "YulTypedName",
														"src": "24473:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "24481:6:13",
														"nodeType": "YulTypedName",
														"src": "24481:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "24489:6:13",
														"nodeType": "YulTypedName",
														"src": "24489:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "24497:6:13",
														"nodeType": "YulTypedName",
														"src": "24497:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "24505:6:13",
														"nodeType": "YulTypedName",
														"src": "24505:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24516:4:13",
														"nodeType": "YulTypedName",
														"src": "24516:4:13",
														"type": ""
													}
												],
												"src": "24193:1053:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100e7575f3560e01c8063715018a61161008a578063a22cb46511610064578063a22cb46514610257578063e985e9c514610273578063f242432a146102a3578063f2fde38b146102bf576100e7565b8063715018a6146102135780638225b2471461021d5780638da5cb5b14610239576100e7565b806320cbf5f9116100c657806320cbf5f91461017b5780632693ebf2146101975780632eb2c2d6146101c75780634e1273f4146101e3576100e7565b8062fdd58e146100eb57806301ffc9a71461011b5780630e89341c1461014b575b5f80fd5b61010560048036038101906101009190611835565b6102db565b6040516101129190611882565b60405180910390f35b610135600480360381019061013091906118f0565b610330565b6040516101429190611935565b60405180910390f35b6101656004803603810190610160919061194e565b610411565b6040516101729190611a03565b60405180910390f35b61019560048036038101906101909190611a23565b6104a3565b005b6101b160048036038101906101ac919061194e565b6104f0565b6040516101be9190611882565b60405180910390f35b6101e160048036038101906101dc9190611c51565b610505565b005b6101fd60048036038101906101f89190611ddc565b6105ac565b60405161020a9190611f09565b60405180910390f35b61021b6106b9565b005b61023760048036038101906102329190611a23565b6106cc565b005b610241610756565b60405161024e9190611f38565b60405180910390f35b610271600480360381019061026c9190611f7b565b61077e565b005b61028d60048036038101906102889190611fb9565b610794565b60405161029a9190611935565b60405180910390f35b6102bd60048036038101906102b89190611ff7565b610822565b005b6102d960048036038101906102d4919061208a565b6108c9565b005b5f805f8381526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f7fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103fa57507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061040a57506104098261094d565b5b9050919050565b606060028054610420906120e2565b80601f016020809104026020016040519081016040528092919081815260200182805461044c906120e2565b80156104975780601f1061046e57610100808354040283529160200191610497565b820191905f5260205f20905b81548152906001019060200180831161047a57829003601f168201915b50505050509050919050565b6104ab6109b6565b6104c533838360405180602001604052805f815250610a3d565b8060045f8481526020019081526020015f205f8282546104e5919061213f565b925050819055505050565b6004602052805f5260405f205f915090505481565b5f61050e610ad2565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415801561055357506105518682610794565b155b156105975780866040517fe237d92200000000000000000000000000000000000000000000000000000000815260040161058e929190612172565b60405180910390fd5b6105a48686868686610ad9565b505050505050565b606081518351146105f857815183516040517f5b0599910000000000000000000000000000000000000000000000000000000081526004016105ef929190612199565b60405180910390fd5b5f835167ffffffffffffffff81111561061457610613611a65565b5b6040519080825280602002602001820160405280156106425781602001602082028036833780820191505090505b5090505f5b84518110156106ae5761067e6106668287610bcd90919063ffffffff16565b6106798387610be090919063ffffffff16565b6102db565b828281518110610691576106906121c0565b5b602002602001018181525050806106a7906121ed565b9050610647565b508091505092915050565b6106c16109b6565b6106ca5f610bf3565b565b6106d46109b6565b806106df33846102db565b1015610720576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107179061227e565b60405180910390fd5b61072b338383610cb6565b8060045f8481526020019081526020015f205f82825461074b919061229c565b925050819055505050565b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610790610789610ad2565b8383610d58565b5050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f61082b610ad2565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614158015610870575061086e8682610794565b155b156108b45780866040517fe237d9220000000000000000000000000000000000000000000000000000000081526004016108ab929190612172565b60405180910390fd5b6108c18686868686610ec1565b505050505050565b6108d16109b6565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610941575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016109389190611f38565b60405180910390fd5b61094a81610bf3565b50565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109be610ad2565b73ffffffffffffffffffffffffffffffffffffffff166109dc610756565b73ffffffffffffffffffffffffffffffffffffffff1614610a3b576109ff610ad2565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610a329190611f38565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610aad575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610aa49190611f38565b60405180910390fd5b5f80610ab98585610fc7565b91509150610aca5f87848487610ff7565b505050505050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610b49575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610b409190611f38565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610bb9575f6040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610bb09190611f38565b60405180910390fd5b610bc68585858585610ff7565b5050505050565b5f60208202602084010151905092915050565b5f60208202602084010151905092915050565b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d26575f6040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610d1d9190611f38565b60405180910390fd5b5f80610d328484610fc7565b91509150610d51855f848460405180602001604052805f815250610ff7565b5050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610dc8575f6040517fced3e100000000000000000000000000000000000000000000000000000000008152600401610dbf9190611f38565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610eb49190611935565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610f31575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610f289190611f38565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610fa1575f6040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610f989190611f38565b60405180910390fd5b5f80610fad8585610fc7565b91509150610fbe8787848487610ff7565b50505050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b611003858585856110a3565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161461109c575f61103f610ad2565b9050600184510361108b575f61105e5f86610be090919063ffffffff16565b90505f6110745f86610be090919063ffffffff16565b9050611084838989858589611439565b505061109a565b6110998187878787876115e8565b5b505b5050505050565b80518251146110ed57815181516040517f5b0599910000000000000000000000000000000000000000000000000000000081526004016110e4929190612199565b60405180910390fd5b5f6110f6610ad2565b90505f5b83518110156112f8575f6111178286610be090919063ffffffff16565b90505f61112d8386610be090919063ffffffff16565b90505f73ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614611250575f805f8481526020019081526020015f205f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156111fc57888183856040517f03dee4c50000000000000000000000000000000000000000000000000000000081526004016111f394939291906122cf565b60405180910390fd5b8181035f808581526020019081526020015f205f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16146112e557805f808481526020019081526020015f205f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546112dd919061213f565b925050819055505b5050806112f1906121ed565b90506110fa565b5060018351036113b3575f6113165f85610be090919063ffffffff16565b90505f61132c5f85610be090919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6285856040516113a4929190612199565b60405180910390a45050611432565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051611429929190612312565b60405180910390a45b5050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b11156115e0578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401611499959493929190612399565b6020604051808303815f875af19250505080156114d457506040513d601f19601f820116820180604052508101906114d19190612405565b60015b611555573d805f8114611502576040519150601f19603f3d011682016040523d82523d5f602084013e611507565b606091505b505f81510361154d57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016115449190611f38565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146115de57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016115d59190611f38565b60405180910390fd5b505b505050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b111561178f578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401611648959493929190612430565b6020604051808303815f875af192505050801561168357506040513d601f19601f820116820180604052508101906116809190612405565b60015b611704573d805f81146116b1576040519150601f19603f3d011682016040523d82523d5f602084013e6116b6565b606091505b505f8151036116fc57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016116f39190611f38565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461178d57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016117849190611f38565b60405180910390fd5b505b505050505050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6117d1826117a8565b9050919050565b6117e1816117c7565b81146117eb575f80fd5b50565b5f813590506117fc816117d8565b92915050565b5f819050919050565b61181481611802565b811461181e575f80fd5b50565b5f8135905061182f8161180b565b92915050565b5f806040838503121561184b5761184a6117a0565b5b5f611858858286016117ee565b925050602061186985828601611821565b9150509250929050565b61187c81611802565b82525050565b5f6020820190506118955f830184611873565b92915050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6118cf8161189b565b81146118d9575f80fd5b50565b5f813590506118ea816118c6565b92915050565b5f60208284031215611905576119046117a0565b5b5f611912848285016118dc565b91505092915050565b5f8115159050919050565b61192f8161191b565b82525050565b5f6020820190506119485f830184611926565b92915050565b5f60208284031215611963576119626117a0565b5b5f61197084828501611821565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156119b0578082015181840152602081019050611995565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6119d582611979565b6119df8185611983565b93506119ef818560208601611993565b6119f8816119bb565b840191505092915050565b5f6020820190508181035f830152611a1b81846119cb565b905092915050565b5f8060408385031215611a3957611a386117a0565b5b5f611a4685828601611821565b9250506020611a5785828601611821565b9150509250929050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611a9b826119bb565b810181811067ffffffffffffffff82111715611aba57611ab9611a65565b5b80604052505050565b5f611acc611797565b9050611ad88282611a92565b919050565b5f67ffffffffffffffff821115611af757611af6611a65565b5b602082029050602081019050919050565b5f80fd5b5f611b1e611b1984611add565b611ac3565b90508083825260208201905060208402830185811115611b4157611b40611b08565b5b835b81811015611b6a5780611b568882611821565b845260208401935050602081019050611b43565b5050509392505050565b5f82601f830112611b8857611b87611a61565b5b8135611b98848260208601611b0c565b91505092915050565b5f80fd5b5f67ffffffffffffffff821115611bbf57611bbe611a65565b5b611bc8826119bb565b9050602081019050919050565b828183375f83830152505050565b5f611bf5611bf084611ba5565b611ac3565b905082815260208101848484011115611c1157611c10611ba1565b5b611c1c848285611bd5565b509392505050565b5f82601f830112611c3857611c37611a61565b5b8135611c48848260208601611be3565b91505092915050565b5f805f805f60a08688031215611c6a57611c696117a0565b5b5f611c77888289016117ee565b9550506020611c88888289016117ee565b945050604086013567ffffffffffffffff811115611ca957611ca86117a4565b5b611cb588828901611b74565b935050606086013567ffffffffffffffff811115611cd657611cd56117a4565b5b611ce288828901611b74565b925050608086013567ffffffffffffffff811115611d0357611d026117a4565b5b611d0f88828901611c24565b9150509295509295909350565b5f67ffffffffffffffff821115611d3657611d35611a65565b5b602082029050602081019050919050565b5f611d59611d5484611d1c565b611ac3565b90508083825260208201905060208402830185811115611d7c57611d7b611b08565b5b835b81811015611da55780611d9188826117ee565b845260208401935050602081019050611d7e565b5050509392505050565b5f82601f830112611dc357611dc2611a61565b5b8135611dd3848260208601611d47565b91505092915050565b5f8060408385031215611df257611df16117a0565b5b5f83013567ffffffffffffffff811115611e0f57611e0e6117a4565b5b611e1b85828601611daf565b925050602083013567ffffffffffffffff811115611e3c57611e3b6117a4565b5b611e4885828601611b74565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b611e8481611802565b82525050565b5f611e958383611e7b565b60208301905092915050565b5f602082019050919050565b5f611eb782611e52565b611ec18185611e5c565b9350611ecc83611e6c565b805f5b83811015611efc578151611ee38882611e8a565b9750611eee83611ea1565b925050600181019050611ecf565b5085935050505092915050565b5f6020820190508181035f830152611f218184611ead565b905092915050565b611f32816117c7565b82525050565b5f602082019050611f4b5f830184611f29565b92915050565b611f5a8161191b565b8114611f64575f80fd5b50565b5f81359050611f7581611f51565b92915050565b5f8060408385031215611f9157611f906117a0565b5b5f611f9e858286016117ee565b9250506020611faf85828601611f67565b9150509250929050565b5f8060408385031215611fcf57611fce6117a0565b5b5f611fdc858286016117ee565b9250506020611fed858286016117ee565b9150509250929050565b5f805f805f60a086880312156120105761200f6117a0565b5b5f61201d888289016117ee565b955050602061202e888289016117ee565b945050604061203f88828901611821565b935050606061205088828901611821565b925050608086013567ffffffffffffffff811115612071576120706117a4565b5b61207d88828901611c24565b9150509295509295909350565b5f6020828403121561209f5761209e6117a0565b5b5f6120ac848285016117ee565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806120f957607f821691505b60208210810361210c5761210b6120b5565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61214982611802565b915061215483611802565b925082820190508082111561216c5761216b612112565b5b92915050565b5f6040820190506121855f830185611f29565b6121926020830184611f29565b9392505050565b5f6040820190506121ac5f830185611873565b6121b96020830184611873565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f6121f782611802565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361222957612228612112565b5b600182019050919050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f612268601483611983565b915061227382612234565b602082019050919050565b5f6020820190508181035f8301526122958161225c565b9050919050565b5f6122a682611802565b91506122b183611802565b92508282039050818111156122c9576122c8612112565b5b92915050565b5f6080820190506122e25f830187611f29565b6122ef6020830186611873565b6122fc6040830185611873565b6123096060830184611873565b95945050505050565b5f6040820190508181035f83015261232a8185611ead565b9050818103602083015261233e8184611ead565b90509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f61236b82612347565b6123758185612351565b9350612385818560208601611993565b61238e816119bb565b840191505092915050565b5f60a0820190506123ac5f830188611f29565b6123b96020830187611f29565b6123c66040830186611873565b6123d36060830185611873565b81810360808301526123e58184612361565b90509695505050505050565b5f815190506123ff816118c6565b92915050565b5f6020828403121561241a576124196117a0565b5b5f612427848285016123f1565b91505092915050565b5f60a0820190506124435f830188611f29565b6124506020830187611f29565b81810360408301526124628186611ead565b905081810360608301526124768185611ead565b9050818103608083015261248a8184612361565b9050969550505050505056fea2646970667358221220a7c3e62f98c941e17a4a16cce07e8f0152547b7fc9e5bfc3adb4357100520b5864736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2BF JUMPI PUSH2 0xE7 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x8225B247 EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x239 JUMPI PUSH2 0xE7 JUMP JUMPDEST DUP1 PUSH4 0x20CBF5F9 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x20CBF5F9 EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x2693EBF2 EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x1E3 JUMPI PUSH2 0xE7 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x14B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x105 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x100 SWAP2 SWAP1 PUSH2 0x1835 JUMP JUMPDEST PUSH2 0x2DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x112 SWAP2 SWAP1 PUSH2 0x1882 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x135 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x18F0 JUMP JUMPDEST PUSH2 0x330 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x1935 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x165 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x194E JUMP JUMPDEST PUSH2 0x411 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x1A03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x195 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x1A23 JUMP JUMPDEST PUSH2 0x4A3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x194E JUMP JUMPDEST PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x1882 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x1C51 JUMP JUMPDEST PUSH2 0x505 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0x1DDC JUMP JUMPDEST PUSH2 0x5AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x1F09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21B PUSH2 0x6B9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x237 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x1A23 JUMP JUMPDEST PUSH2 0x6CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x241 PUSH2 0x756 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24E SWAP2 SWAP1 PUSH2 0x1F38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x271 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x1F7B JUMP JUMPDEST PUSH2 0x77E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x1FB9 JUMP JUMPDEST PUSH2 0x794 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x1935 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x1FF7 JUMP JUMPDEST PUSH2 0x822 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x208A JUMP JUMPDEST PUSH2 0x8C9 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3FA JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x40A JUMPI POP PUSH2 0x409 DUP3 PUSH2 0x94D JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x420 SWAP1 PUSH2 0x20E2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x44C SWAP1 PUSH2 0x20E2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x497 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x46E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x497 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x47A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4AB PUSH2 0x9B6 JUMP JUMPDEST PUSH2 0x4C5 CALLER DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xA3D JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4E5 SWAP2 SWAP1 PUSH2 0x213F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x50E PUSH2 0xAD2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x553 JUMPI POP PUSH2 0x551 DUP7 DUP3 PUSH2 0x794 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x597 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58E SWAP3 SWAP2 SWAP1 PUSH2 0x2172 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5A4 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xAD9 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x5F8 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EF SWAP3 SWAP2 SWAP1 PUSH2 0x2199 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x614 JUMPI PUSH2 0x613 PUSH2 0x1A65 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x642 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6AE JUMPI PUSH2 0x67E PUSH2 0x666 DUP3 DUP8 PUSH2 0xBCD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x679 DUP4 DUP8 PUSH2 0xBE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2DB JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x691 JUMPI PUSH2 0x690 PUSH2 0x21C0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x6A7 SWAP1 PUSH2 0x21ED JUMP JUMPDEST SWAP1 POP PUSH2 0x647 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6C1 PUSH2 0x9B6 JUMP JUMPDEST PUSH2 0x6CA PUSH0 PUSH2 0xBF3 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x6D4 PUSH2 0x9B6 JUMP JUMPDEST DUP1 PUSH2 0x6DF CALLER DUP5 PUSH2 0x2DB JUMP JUMPDEST LT ISZERO PUSH2 0x720 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x717 SWAP1 PUSH2 0x227E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x72B CALLER DUP4 DUP4 PUSH2 0xCB6 JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x74B SWAP2 SWAP1 PUSH2 0x229C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x790 PUSH2 0x789 PUSH2 0xAD2 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xD58 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x82B PUSH2 0xAD2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x870 JUMPI POP PUSH2 0x86E DUP7 DUP3 PUSH2 0x794 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x8B4 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AB SWAP3 SWAP2 SWAP1 PUSH2 0x2172 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8C1 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xEC1 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x8D1 PUSH2 0x9B6 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x941 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x938 SWAP2 SWAP1 PUSH2 0x1F38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x94A DUP2 PUSH2 0xBF3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9BE PUSH2 0xAD2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9DC PUSH2 0x756 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA3B JUMPI PUSH2 0x9FF PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA32 SWAP2 SWAP1 PUSH2 0x1F38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAAD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA4 SWAP2 SWAP1 PUSH2 0x1F38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0xAB9 DUP6 DUP6 PUSH2 0xFC7 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xACA PUSH0 DUP8 DUP5 DUP5 DUP8 PUSH2 0xFF7 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB49 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP2 SWAP1 PUSH2 0x1F38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBB9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB0 SWAP2 SWAP1 PUSH2 0x1F38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBC6 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xFF7 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD26 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD1D SWAP2 SWAP1 PUSH2 0x1F38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0xD32 DUP5 DUP5 PUSH2 0xFC7 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xD51 DUP6 PUSH0 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xFF7 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDC8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBF SWAP2 SWAP1 PUSH2 0x1F38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xEB4 SWAP2 SWAP1 PUSH2 0x1935 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF31 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF28 SWAP2 SWAP1 PUSH2 0x1F38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFA1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF98 SWAP2 SWAP1 PUSH2 0x1F38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0xFAD DUP6 DUP6 PUSH2 0xFC7 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xFBE DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0xFF7 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1003 DUP6 DUP6 DUP6 DUP6 PUSH2 0x10A3 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x109C JUMPI PUSH0 PUSH2 0x103F PUSH2 0xAD2 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0x108B JUMPI PUSH0 PUSH2 0x105E PUSH0 DUP7 PUSH2 0xBE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1074 PUSH0 DUP7 PUSH2 0xBE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1084 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x1439 JUMP JUMPDEST POP POP PUSH2 0x109A JUMP JUMPDEST PUSH2 0x1099 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x15E8 JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x10ED JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E4 SWAP3 SWAP2 SWAP1 PUSH2 0x2199 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x10F6 PUSH2 0xAD2 JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x12F8 JUMPI PUSH0 PUSH2 0x1117 DUP3 DUP7 PUSH2 0xBE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x112D DUP4 DUP7 PUSH2 0xBE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1250 JUMPI PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x11FC JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F3 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12E5 JUMPI DUP1 PUSH0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x12DD SWAP2 SWAP1 PUSH2 0x213F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH2 0x12F1 SWAP1 PUSH2 0x21ED JUMP JUMPDEST SWAP1 POP PUSH2 0x10FA JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH2 0x13B3 JUMPI PUSH0 PUSH2 0x1316 PUSH0 DUP6 PUSH2 0xBE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x132C PUSH0 DUP6 PUSH2 0xBE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x13A4 SWAP3 SWAP2 SWAP1 PUSH2 0x2199 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x1432 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1429 SWAP3 SWAP2 SWAP1 PUSH2 0x2312 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x15E0 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1499 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2399 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x14D4 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14D1 SWAP2 SWAP1 PUSH2 0x2405 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1555 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1502 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1507 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x154D JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1544 SWAP2 SWAP1 PUSH2 0x1F38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x15DE JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15D5 SWAP2 SWAP1 PUSH2 0x1F38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x178F JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1648 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2430 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1683 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1680 SWAP2 SWAP1 PUSH2 0x2405 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1704 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x16B1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x16B6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x16FC JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16F3 SWAP2 SWAP1 PUSH2 0x1F38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x178D JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1784 SWAP2 SWAP1 PUSH2 0x1F38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17D1 DUP3 PUSH2 0x17A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17E1 DUP2 PUSH2 0x17C7 JUMP JUMPDEST DUP2 EQ PUSH2 0x17EB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17FC DUP2 PUSH2 0x17D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1814 DUP2 PUSH2 0x1802 JUMP JUMPDEST DUP2 EQ PUSH2 0x181E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x182F DUP2 PUSH2 0x180B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x184B JUMPI PUSH2 0x184A PUSH2 0x17A0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1858 DUP6 DUP3 DUP7 ADD PUSH2 0x17EE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1869 DUP6 DUP3 DUP7 ADD PUSH2 0x1821 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x187C DUP2 PUSH2 0x1802 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1895 PUSH0 DUP4 ADD DUP5 PUSH2 0x1873 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18CF DUP2 PUSH2 0x189B JUMP JUMPDEST DUP2 EQ PUSH2 0x18D9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18EA DUP2 PUSH2 0x18C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1905 JUMPI PUSH2 0x1904 PUSH2 0x17A0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1912 DUP5 DUP3 DUP6 ADD PUSH2 0x18DC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x192F DUP2 PUSH2 0x191B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1948 PUSH0 DUP4 ADD DUP5 PUSH2 0x1926 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1963 JUMPI PUSH2 0x1962 PUSH2 0x17A0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1970 DUP5 DUP3 DUP6 ADD PUSH2 0x1821 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x19B0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1995 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19D5 DUP3 PUSH2 0x1979 JUMP JUMPDEST PUSH2 0x19DF DUP2 DUP6 PUSH2 0x1983 JUMP JUMPDEST SWAP4 POP PUSH2 0x19EF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1993 JUMP JUMPDEST PUSH2 0x19F8 DUP2 PUSH2 0x19BB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A1B DUP2 DUP5 PUSH2 0x19CB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A39 JUMPI PUSH2 0x1A38 PUSH2 0x17A0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A46 DUP6 DUP3 DUP7 ADD PUSH2 0x1821 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A57 DUP6 DUP3 DUP7 ADD PUSH2 0x1821 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1A9B DUP3 PUSH2 0x19BB JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1ABA JUMPI PUSH2 0x1AB9 PUSH2 0x1A65 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1ACC PUSH2 0x1797 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AD8 DUP3 DUP3 PUSH2 0x1A92 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1AF7 JUMPI PUSH2 0x1AF6 PUSH2 0x1A65 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x1B1E PUSH2 0x1B19 DUP5 PUSH2 0x1ADD JUMP JUMPDEST PUSH2 0x1AC3 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1B41 JUMPI PUSH2 0x1B40 PUSH2 0x1B08 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1B6A JUMPI DUP1 PUSH2 0x1B56 DUP9 DUP3 PUSH2 0x1821 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1B43 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B88 JUMPI PUSH2 0x1B87 PUSH2 0x1A61 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1B98 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1B0C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1BBF JUMPI PUSH2 0x1BBE PUSH2 0x1A65 JUMP JUMPDEST JUMPDEST PUSH2 0x1BC8 DUP3 PUSH2 0x19BB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BF5 PUSH2 0x1BF0 DUP5 PUSH2 0x1BA5 JUMP JUMPDEST PUSH2 0x1AC3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1C11 JUMPI PUSH2 0x1C10 PUSH2 0x1BA1 JUMP JUMPDEST JUMPDEST PUSH2 0x1C1C DUP5 DUP3 DUP6 PUSH2 0x1BD5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C38 JUMPI PUSH2 0x1C37 PUSH2 0x1A61 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1C48 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1BE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1C6A JUMPI PUSH2 0x1C69 PUSH2 0x17A0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C77 DUP9 DUP3 DUP10 ADD PUSH2 0x17EE JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1C88 DUP9 DUP3 DUP10 ADD PUSH2 0x17EE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CA9 JUMPI PUSH2 0x1CA8 PUSH2 0x17A4 JUMP JUMPDEST JUMPDEST PUSH2 0x1CB5 DUP9 DUP3 DUP10 ADD PUSH2 0x1B74 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CD6 JUMPI PUSH2 0x1CD5 PUSH2 0x17A4 JUMP JUMPDEST JUMPDEST PUSH2 0x1CE2 DUP9 DUP3 DUP10 ADD PUSH2 0x1B74 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D03 JUMPI PUSH2 0x1D02 PUSH2 0x17A4 JUMP JUMPDEST JUMPDEST PUSH2 0x1D0F DUP9 DUP3 DUP10 ADD PUSH2 0x1C24 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1D36 JUMPI PUSH2 0x1D35 PUSH2 0x1A65 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D59 PUSH2 0x1D54 DUP5 PUSH2 0x1D1C JUMP JUMPDEST PUSH2 0x1AC3 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1D7C JUMPI PUSH2 0x1D7B PUSH2 0x1B08 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1DA5 JUMPI DUP1 PUSH2 0x1D91 DUP9 DUP3 PUSH2 0x17EE JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D7E JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1DC3 JUMPI PUSH2 0x1DC2 PUSH2 0x1A61 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1DD3 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1D47 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DF2 JUMPI PUSH2 0x1DF1 PUSH2 0x17A0 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E0F JUMPI PUSH2 0x1E0E PUSH2 0x17A4 JUMP JUMPDEST JUMPDEST PUSH2 0x1E1B DUP6 DUP3 DUP7 ADD PUSH2 0x1DAF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E3C JUMPI PUSH2 0x1E3B PUSH2 0x17A4 JUMP JUMPDEST JUMPDEST PUSH2 0x1E48 DUP6 DUP3 DUP7 ADD PUSH2 0x1B74 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E84 DUP2 PUSH2 0x1802 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E95 DUP4 DUP4 PUSH2 0x1E7B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1EB7 DUP3 PUSH2 0x1E52 JUMP JUMPDEST PUSH2 0x1EC1 DUP2 DUP6 PUSH2 0x1E5C JUMP JUMPDEST SWAP4 POP PUSH2 0x1ECC DUP4 PUSH2 0x1E6C JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1EFC JUMPI DUP2 MLOAD PUSH2 0x1EE3 DUP9 DUP3 PUSH2 0x1E8A JUMP JUMPDEST SWAP8 POP PUSH2 0x1EEE DUP4 PUSH2 0x1EA1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1ECF JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F21 DUP2 DUP5 PUSH2 0x1EAD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F32 DUP2 PUSH2 0x17C7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F4B PUSH0 DUP4 ADD DUP5 PUSH2 0x1F29 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F5A DUP2 PUSH2 0x191B JUMP JUMPDEST DUP2 EQ PUSH2 0x1F64 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F75 DUP2 PUSH2 0x1F51 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F91 JUMPI PUSH2 0x1F90 PUSH2 0x17A0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F9E DUP6 DUP3 DUP7 ADD PUSH2 0x17EE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FAF DUP6 DUP3 DUP7 ADD PUSH2 0x1F67 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FCF JUMPI PUSH2 0x1FCE PUSH2 0x17A0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FDC DUP6 DUP3 DUP7 ADD PUSH2 0x17EE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FED DUP6 DUP3 DUP7 ADD PUSH2 0x17EE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2010 JUMPI PUSH2 0x200F PUSH2 0x17A0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x201D DUP9 DUP3 DUP10 ADD PUSH2 0x17EE JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x202E DUP9 DUP3 DUP10 ADD PUSH2 0x17EE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x203F DUP9 DUP3 DUP10 ADD PUSH2 0x1821 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2050 DUP9 DUP3 DUP10 ADD PUSH2 0x1821 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2071 JUMPI PUSH2 0x2070 PUSH2 0x17A4 JUMP JUMPDEST JUMPDEST PUSH2 0x207D DUP9 DUP3 DUP10 ADD PUSH2 0x1C24 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x209F JUMPI PUSH2 0x209E PUSH2 0x17A0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20AC DUP5 DUP3 DUP6 ADD PUSH2 0x17EE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x20F9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x210C JUMPI PUSH2 0x210B PUSH2 0x20B5 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2149 DUP3 PUSH2 0x1802 JUMP JUMPDEST SWAP2 POP PUSH2 0x2154 DUP4 PUSH2 0x1802 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x216C JUMPI PUSH2 0x216B PUSH2 0x2112 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2185 PUSH0 DUP4 ADD DUP6 PUSH2 0x1F29 JUMP JUMPDEST PUSH2 0x2192 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F29 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x21AC PUSH0 DUP4 ADD DUP6 PUSH2 0x1873 JUMP JUMPDEST PUSH2 0x21B9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1873 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x21F7 DUP3 PUSH2 0x1802 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2229 JUMPI PUSH2 0x2228 PUSH2 0x2112 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2268 PUSH1 0x14 DUP4 PUSH2 0x1983 JUMP JUMPDEST SWAP2 POP PUSH2 0x2273 DUP3 PUSH2 0x2234 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2295 DUP2 PUSH2 0x225C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x22A6 DUP3 PUSH2 0x1802 JUMP JUMPDEST SWAP2 POP PUSH2 0x22B1 DUP4 PUSH2 0x1802 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x22C9 JUMPI PUSH2 0x22C8 PUSH2 0x2112 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x22E2 PUSH0 DUP4 ADD DUP8 PUSH2 0x1F29 JUMP JUMPDEST PUSH2 0x22EF PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1873 JUMP JUMPDEST PUSH2 0x22FC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1873 JUMP JUMPDEST PUSH2 0x2309 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1873 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x232A DUP2 DUP6 PUSH2 0x1EAD JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x233E DUP2 DUP5 PUSH2 0x1EAD JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x236B DUP3 PUSH2 0x2347 JUMP JUMPDEST PUSH2 0x2375 DUP2 DUP6 PUSH2 0x2351 JUMP JUMPDEST SWAP4 POP PUSH2 0x2385 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1993 JUMP JUMPDEST PUSH2 0x238E DUP2 PUSH2 0x19BB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x23AC PUSH0 DUP4 ADD DUP9 PUSH2 0x1F29 JUMP JUMPDEST PUSH2 0x23B9 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1F29 JUMP JUMPDEST PUSH2 0x23C6 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1873 JUMP JUMPDEST PUSH2 0x23D3 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1873 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x23E5 DUP2 DUP5 PUSH2 0x2361 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x23FF DUP2 PUSH2 0x18C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x241A JUMPI PUSH2 0x2419 PUSH2 0x17A0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2427 DUP5 DUP3 DUP6 ADD PUSH2 0x23F1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2443 PUSH0 DUP4 ADD DUP9 PUSH2 0x1F29 JUMP JUMPDEST PUSH2 0x2450 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1F29 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2462 DUP2 DUP7 PUSH2 0x1EAD JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2476 DUP2 DUP6 PUSH2 0x1EAD JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x248A DUP2 DUP5 PUSH2 0x2361 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA7 0xC3 0xE6 0x2F SWAP9 0xC9 COINBASE 0xE1 PUSH27 0x4A16CCE07E8F0152547B7FC9E5BFC3ADB4357100520B5864736F6C PUSH4 0x43000815 STOP CALLER ",
							"sourceMap": "171:742:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2247:132:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1380:305;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2084:103;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;498:164:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;254:46;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4014:429:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2536:552;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;668:243:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3156:144:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3367:157;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3591:351;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2247:132:2;2324:7;2350:9;:13;2360:2;2350:13;;;;;;;;;;;:22;2364:7;2350:22;;;;;;;;;;;;;;;;2343:29;;2247:132;;;;:::o;1380:305::-;1482:4;1532:26;1517:41;;;:11;:41;;;;:109;;;;1589:37;1574:52;;;:11;:52;;;;1517:109;:161;;;;1642:36;1666:11;1642:23;:36::i;:::-;1517:161;1498:180;;1380:305;;;:::o;2084:103::-;2144:13;2176:4;2169:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2084:103;;;:::o;498:164:12:-;1531:13:0;:11;:13::i;:::-;577:38:12::1;583:10;595:7;604:6;577:38;;;;;;;;;;;::::0;:5:::1;:38::i;:::-;649:6;625:11;:20;637:7;625:20;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;498:164:::0;;:::o;254:46::-;;;;;;;;;;;;;;;;;:::o;4014:429:2:-;4208:14;4225:12;:10;:12::i;:::-;4208:29;;4259:6;4251:14;;:4;:14;;;;:49;;;;;4270:30;4287:4;4293:6;4270:16;:30::i;:::-;4269:31;4251:49;4247:129;;;4352:6;4360:4;4323:42;;;;;;;;;;;;:::i;:::-;;;;;;;;4247:129;4385:51;4408:4;4414:2;4418:3;4423:6;4431:4;4385:22;:51::i;:::-;4198:245;4014:429;;;;;:::o;2536:552::-;2660:16;2711:3;:10;2692:8;:15;:29;2688:121;;2770:3;:10;2782:8;:15;2744:54;;;;;;;;;;;;:::i;:::-;;;;;;;;2688:121;2819:30;2866:8;:15;2852:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2819:63;;2898:9;2893:158;2917:8;:15;2913:1;:19;2893:158;;;2972:68;2982:30;3010:1;2982:8;:27;;:30;;;;:::i;:::-;3014:25;3037:1;3014:3;:22;;:25;;;;:::i;:::-;2972:9;:68::i;:::-;2953:13;2967:1;2953:16;;;;;;;;:::i;:::-;;;;;;;:87;;;;;2934:3;;;;:::i;:::-;;;2893:158;;;;3068:13;3061:20;;;2536:552;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;668:243:12:-;1531:13:0;:11;:13::i;:::-;789:6:12::1;755:30;765:10;777:7;755:9;:30::i;:::-;:40;;747:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;830:34;836:10;848:7;857:6;830:5;:34::i;:::-;898:6;874:11;:20;886:7;874:20;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;668:243:::0;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;3156:144:2:-;3241:52;3260:12;:10;:12::i;:::-;3274:8;3284;3241:18;:52::i;:::-;3156:144;;:::o;3367:157::-;3457:4;3480:18;:27;3499:7;3480:27;;;;;;;;;;;;;;;:37;3508:8;3480:37;;;;;;;;;;;;;;;;;;;;;;;;;3473:44;;3367:157;;;;:::o;3591:351::-;3714:14;3731:12;:10;:12::i;:::-;3714:29;;3765:6;3757:14;;:4;:14;;;;:49;;;;;3776:30;3793:4;3799:6;3776:16;:30::i;:::-;3775:31;3757:49;3753:129;;;3858:6;3866:4;3829:42;;;;;;;;;;;;:::i;:::-;;;;;;;;3753:129;3891:44;3909:4;3915:2;3919;3923:5;3930:4;3891:17;:44::i;:::-;3704:238;3591:351;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;762:146:9:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;10746:346:2:-;10856:1;10842:16;;:2;:16;;;10838:88;;10912:1;10881:34;;;;;;;;;;;:::i;:::-;;;;;;;;10838:88;10936:20;10958:23;10985:29;11004:2;11008:5;10985:18;:29::i;:::-;10935:79;;;;11024:61;11059:1;11063:2;11067:3;11072:6;11080:4;11024:26;:61::i;:::-;10828:264;;10746:346;;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;9015:445:2:-;9222:1;9208:16;;:2;:16;;;9204:88;;9278:1;9247:34;;;;;;;;;;;:::i;:::-;;;;;;;;9204:88;9321:1;9305:18;;:4;:18;;;9301:88;;9375:1;9346:32;;;;;;;;;;;:::i;:::-;;;;;;;;9301:88;9398:55;9425:4;9431:2;9435:3;9440:6;9448:4;9398:26;:55::i;:::-;9015:445;;;;;:::o;4603:197:6:-;4689:11;4777:4;4772:3;4768:14;4761:4;4756:3;4752:14;4748:35;4742:42;4735:49;;4603:197;;;;:::o;4204:::-;4290:11;4378:4;4373:3;4369:14;4362:4;4357:3;4353:14;4349:35;4343:42;4336:49;;4204:197;;;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;12099:329:2:-;12194:1;12178:18;;:4;:18;;;12174:88;;12248:1;12219:32;;;;;;;;;;;:::i;:::-;;;;;;;;12174:88;12272:20;12294:23;12321:29;12340:2;12344:5;12321:18;:29::i;:::-;12271:79;;;;12360:61;12387:4;12401:1;12405:3;12410:6;12360:61;;;;;;;;;;;;:26;:61::i;:::-;12164:264;;12099:329;;;:::o;13268:315::-;13395:1;13375:22;;:8;:22;;;13371:94;;13451:1;13420:34;;;;;;;;;;;:::i;:::-;;;;;;;;13371:94;13512:8;13474:18;:25;13493:5;13474:25;;;;;;;;;;;;;;;:35;13500:8;13474:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13557:8;13535:41;;13550:5;13535:41;;;13567:8;13535:41;;;;;;:::i;:::-;;;;;;;;13268:315;;;:::o;8151:463::-;8287:1;8273:16;;:2;:16;;;8269:88;;8343:1;8312:34;;;;;;;;;;;:::i;:::-;;;;;;;;8269:88;8386:1;8370:18;;:4;:18;;;8366:88;;8440:1;8411:32;;;;;;;;;;;:::i;:::-;;;;;;;;8366:88;8464:20;8486:23;8513:29;8532:2;8536:5;8513:18;:29::i;:::-;8463:79;;;;8552:55;8579:4;8585:2;8589:3;8594:6;8602:4;8552:26;:55::i;:::-;8259:355;;8151:463;;;;;:::o;16080:849::-;16188:23;16213;16374:4;16368:11;16358:21;;16444:1;16436:6;16429:17;16582:8;16575:4;16567:6;16563:17;16556:35;16704:4;16696:6;16692:17;16682:27;;16737:1;16729:6;16722:17;16778:8;16771:4;16763:6;16759:17;16752:35;16907:4;16899:6;16895:17;16889:4;16882:31;16080:849;;;;;:::o;7004:690::-;7205:30;7213:4;7219:2;7223:3;7228:6;7205:7;:30::i;:::-;7263:1;7249:16;;:2;:16;;;7245:443;;7281:16;7300:12;:10;:12::i;:::-;7281:31;;7344:1;7330:3;:10;:15;7326:352;;7365:10;7378:25;7401:1;7378:3;:22;;:25;;;;:::i;:::-;7365:38;;7421:13;7437:28;7463:1;7437:6;:25;;:28;;;;:::i;:::-;7421:44;;7483:67;7514:8;7524:4;7530:2;7534;7538:5;7545:4;7483:30;:67::i;:::-;7347:218;;7326:352;;;7589:74;7625:8;7635:4;7641:2;7645:3;7650:6;7658:4;7589:35;:74::i;:::-;7326:352;7267:421;7245:443;7004:690;;;;;:::o;5144:1281::-;5279:6;:13;5265:3;:10;:27;5261:117;;5341:3;:10;5353:6;:13;5315:52;;;;;;;;;;;;:::i;:::-;;;;;;;;5261:117;5388:16;5407:12;:10;:12::i;:::-;5388:31;;5435:9;5430:691;5454:3;:10;5450:1;:14;5430:691;;;5485:10;5498:25;5521:1;5498:3;:22;;:25;;;;:::i;:::-;5485:38;;5537:13;5553:28;5579:1;5553:6;:25;;:28;;;;:::i;:::-;5537:44;;5616:1;5600:18;;:4;:18;;;5596:420;;5638:19;5660:9;:13;5670:2;5660:13;;;;;;;;;;;:19;5674:4;5660:19;;;;;;;;;;;;;;;;5638:41;;5715:5;5701:11;:19;5697:129;;;5778:4;5784:11;5797:5;5804:2;5751:56;;;;;;;;;;;;;;:::i;:::-;;;;;;;;5697:129;5978:5;5964:11;:19;5942:9;:13;5952:2;5942:13;;;;;;;;;;;:19;5956:4;5942:19;;;;;;;;;;;;;;;:41;;;;5620:396;5596:420;6048:1;6034:16;;:2;:16;;;6030:81;;6091:5;6070:9;:13;6080:2;6070:13;;;;;;;;;;;:17;6084:2;6070:17;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;6030:81;5471:650;;5466:3;;;;:::i;:::-;;;5430:691;;;;6149:1;6135:3;:10;:15;6131:288;;6166:10;6179:25;6202:1;6179:3;:22;;:25;;;;:::i;:::-;6166:38;;6218:13;6234:28;6260:1;6234:6;:25;;:28;;;;:::i;:::-;6218:44;;6312:2;6281:45;;6306:4;6281:45;;6296:8;6281:45;;;6316:2;6320:5;6281:45;;;;;;;:::i;:::-;;;;;;;;6152:185;;6131:288;;;6392:2;6362:46;;6386:4;6362:46;;6376:8;6362:46;;;6396:3;6401:6;6362:46;;;;;;;:::i;:::-;;;;;;;;6131:288;5251:1174;5144:1281;;;;:::o;13761:974::-;13984:1;13967:2;:14;;;:18;13963:766;;;14022:2;14005:38;;;14044:8;14054:4;14060:2;14064:5;14071:4;14005:71;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14001:718;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14377:1;14360:6;:13;:18;14356:349;;14487:2;14464:26;;;;;;;;;;;:::i;:::-;;;;;;;;14356:349;14657:6;14651:13;14642:6;14638:2;14634:15;14627:38;14001:718;14137:43;;;14125:55;;;:8;:55;;;;14121:174;;14273:2;14250:26;;;;;;;;;;;:::i;:::-;;;;;;;;14121:174;14077:232;13963:766;13761:974;;;;;;:::o;14923:1041::-;15171:1;15154:2;:14;;;:18;15150:808;;;15209:2;15192:43;;;15236:8;15246:4;15252:3;15257:6;15265:4;15192:78;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;15188:760;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15606:1;15589:6;:13;:18;15585:349;;15716:2;15693:26;;;;;;;;;;;:::i;:::-;;;;;;;;15585:349;15886:6;15880:13;15871:6;15867:2;15863:15;15856:38;15188:760;15361:48;;;15349:60;;;:8;:60;;;;15345:179;;15502:2;15479:26;;;;;;;;;;;:::i;:::-;;;;;;;;15345:179;15271:267;15150:808;14923:1041;;;;;;:::o;7:75:13:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:149::-;2065:7;2105:66;2098:5;2094:78;2083:89;;2029:149;;;:::o;2184:120::-;2256:23;2273:5;2256:23;:::i;:::-;2249:5;2246:34;2236:62;;2294:1;2291;2284:12;2236:62;2184:120;:::o;2310:137::-;2355:5;2393:6;2380:20;2371:29;;2409:32;2435:5;2409:32;:::i;:::-;2310:137;;;;:::o;2453:327::-;2511:6;2560:2;2548:9;2539:7;2535:23;2531:32;2528:119;;;2566:79;;:::i;:::-;2528:119;2686:1;2711:52;2755:7;2746:6;2735:9;2731:22;2711:52;:::i;:::-;2701:62;;2657:116;2453:327;;;;:::o;2786:90::-;2820:7;2863:5;2856:13;2849:21;2838:32;;2786:90;;;:::o;2882:109::-;2963:21;2978:5;2963:21;:::i;:::-;2958:3;2951:34;2882:109;;:::o;2997:210::-;3084:4;3122:2;3111:9;3107:18;3099:26;;3135:65;3197:1;3186:9;3182:17;3173:6;3135:65;:::i;:::-;2997:210;;;;:::o;3213:329::-;3272:6;3321:2;3309:9;3300:7;3296:23;3292:32;3289:119;;;3327:79;;:::i;:::-;3289:119;3447:1;3472:53;3517:7;3508:6;3497:9;3493:22;3472:53;:::i;:::-;3462:63;;3418:117;3213:329;;;;:::o;3548:99::-;3600:6;3634:5;3628:12;3618:22;;3548:99;;;:::o;3653:169::-;3737:11;3771:6;3766:3;3759:19;3811:4;3806:3;3802:14;3787:29;;3653:169;;;;:::o;3828:246::-;3909:1;3919:113;3933:6;3930:1;3927:13;3919:113;;;4018:1;4013:3;4009:11;4003:18;3999:1;3994:3;3990:11;3983:39;3955:2;3952:1;3948:10;3943:15;;3919:113;;;4066:1;4057:6;4052:3;4048:16;4041:27;3890:184;3828:246;;;:::o;4080:102::-;4121:6;4172:2;4168:7;4163:2;4156:5;4152:14;4148:28;4138:38;;4080:102;;;:::o;4188:377::-;4276:3;4304:39;4337:5;4304:39;:::i;:::-;4359:71;4423:6;4418:3;4359:71;:::i;:::-;4352:78;;4439:65;4497:6;4492:3;4485:4;4478:5;4474:16;4439:65;:::i;:::-;4529:29;4551:6;4529:29;:::i;:::-;4524:3;4520:39;4513:46;;4280:285;4188:377;;;;:::o;4571:313::-;4684:4;4722:2;4711:9;4707:18;4699:26;;4771:9;4765:4;4761:20;4757:1;4746:9;4742:17;4735:47;4799:78;4872:4;4863:6;4799:78;:::i;:::-;4791:86;;4571:313;;;;:::o;4890:474::-;4958:6;4966;5015:2;5003:9;4994:7;4990:23;4986:32;4983:119;;;5021:79;;:::i;:::-;4983:119;5141:1;5166:53;5211:7;5202:6;5191:9;5187:22;5166:53;:::i;:::-;5156:63;;5112:117;5268:2;5294:53;5339:7;5330:6;5319:9;5315:22;5294:53;:::i;:::-;5284:63;;5239:118;4890:474;;;;;:::o;5370:117::-;5479:1;5476;5469:12;5493:180;5541:77;5538:1;5531:88;5638:4;5635:1;5628:15;5662:4;5659:1;5652:15;5679:281;5762:27;5784:4;5762:27;:::i;:::-;5754:6;5750:40;5892:6;5880:10;5877:22;5856:18;5844:10;5841:34;5838:62;5835:88;;;5903:18;;:::i;:::-;5835:88;5943:10;5939:2;5932:22;5722:238;5679:281;;:::o;5966:129::-;6000:6;6027:20;;:::i;:::-;6017:30;;6056:33;6084:4;6076:6;6056:33;:::i;:::-;5966:129;;;:::o;6101:311::-;6178:4;6268:18;6260:6;6257:30;6254:56;;;6290:18;;:::i;:::-;6254:56;6340:4;6332:6;6328:17;6320:25;;6400:4;6394;6390:15;6382:23;;6101:311;;;:::o;6418:117::-;6527:1;6524;6517:12;6558:710;6654:5;6679:81;6695:64;6752:6;6695:64;:::i;:::-;6679:81;:::i;:::-;6670:90;;6780:5;6809:6;6802:5;6795:21;6843:4;6836:5;6832:16;6825:23;;6896:4;6888:6;6884:17;6876:6;6872:30;6925:3;6917:6;6914:15;6911:122;;;6944:79;;:::i;:::-;6911:122;7059:6;7042:220;7076:6;7071:3;7068:15;7042:220;;;7151:3;7180:37;7213:3;7201:10;7180:37;:::i;:::-;7175:3;7168:50;7247:4;7242:3;7238:14;7231:21;;7118:144;7102:4;7097:3;7093:14;7086:21;;7042:220;;;7046:21;6660:608;;6558:710;;;;;:::o;7291:370::-;7362:5;7411:3;7404:4;7396:6;7392:17;7388:27;7378:122;;7419:79;;:::i;:::-;7378:122;7536:6;7523:20;7561:94;7651:3;7643:6;7636:4;7628:6;7624:17;7561:94;:::i;:::-;7552:103;;7368:293;7291:370;;;;:::o;7667:117::-;7776:1;7773;7766:12;7790:307;7851:4;7941:18;7933:6;7930:30;7927:56;;;7963:18;;:::i;:::-;7927:56;8001:29;8023:6;8001:29;:::i;:::-;7993:37;;8085:4;8079;8075:15;8067:23;;7790:307;;;:::o;8103:146::-;8200:6;8195:3;8190;8177:30;8241:1;8232:6;8227:3;8223:16;8216:27;8103:146;;;:::o;8255:423::-;8332:5;8357:65;8373:48;8414:6;8373:48;:::i;:::-;8357:65;:::i;:::-;8348:74;;8445:6;8438:5;8431:21;8483:4;8476:5;8472:16;8521:3;8512:6;8507:3;8503:16;8500:25;8497:112;;;8528:79;;:::i;:::-;8497:112;8618:54;8665:6;8660:3;8655;8618:54;:::i;:::-;8338:340;8255:423;;;;;:::o;8697:338::-;8752:5;8801:3;8794:4;8786:6;8782:17;8778:27;8768:122;;8809:79;;:::i;:::-;8768:122;8926:6;8913:20;8951:78;9025:3;9017:6;9010:4;9002:6;8998:17;8951:78;:::i;:::-;8942:87;;8758:277;8697:338;;;;:::o;9041:1509::-;9195:6;9203;9211;9219;9227;9276:3;9264:9;9255:7;9251:23;9247:33;9244:120;;;9283:79;;:::i;:::-;9244:120;9403:1;9428:53;9473:7;9464:6;9453:9;9449:22;9428:53;:::i;:::-;9418:63;;9374:117;9530:2;9556:53;9601:7;9592:6;9581:9;9577:22;9556:53;:::i;:::-;9546:63;;9501:118;9686:2;9675:9;9671:18;9658:32;9717:18;9709:6;9706:30;9703:117;;;9739:79;;:::i;:::-;9703:117;9844:78;9914:7;9905:6;9894:9;9890:22;9844:78;:::i;:::-;9834:88;;9629:303;9999:2;9988:9;9984:18;9971:32;10030:18;10022:6;10019:30;10016:117;;;10052:79;;:::i;:::-;10016:117;10157:78;10227:7;10218:6;10207:9;10203:22;10157:78;:::i;:::-;10147:88;;9942:303;10312:3;10301:9;10297:19;10284:33;10344:18;10336:6;10333:30;10330:117;;;10366:79;;:::i;:::-;10330:117;10471:62;10525:7;10516:6;10505:9;10501:22;10471:62;:::i;:::-;10461:72;;10255:288;9041:1509;;;;;;;;:::o;10556:311::-;10633:4;10723:18;10715:6;10712:30;10709:56;;;10745:18;;:::i;:::-;10709:56;10795:4;10787:6;10783:17;10775:25;;10855:4;10849;10845:15;10837:23;;10556:311;;;:::o;10890:710::-;10986:5;11011:81;11027:64;11084:6;11027:64;:::i;:::-;11011:81;:::i;:::-;11002:90;;11112:5;11141:6;11134:5;11127:21;11175:4;11168:5;11164:16;11157:23;;11228:4;11220:6;11216:17;11208:6;11204:30;11257:3;11249:6;11246:15;11243:122;;;11276:79;;:::i;:::-;11243:122;11391:6;11374:220;11408:6;11403:3;11400:15;11374:220;;;11483:3;11512:37;11545:3;11533:10;11512:37;:::i;:::-;11507:3;11500:50;11579:4;11574:3;11570:14;11563:21;;11450:144;11434:4;11429:3;11425:14;11418:21;;11374:220;;;11378:21;10992:608;;10890:710;;;;;:::o;11623:370::-;11694:5;11743:3;11736:4;11728:6;11724:17;11720:27;11710:122;;11751:79;;:::i;:::-;11710:122;11868:6;11855:20;11893:94;11983:3;11975:6;11968:4;11960:6;11956:17;11893:94;:::i;:::-;11884:103;;11700:293;11623:370;;;;:::o;11999:894::-;12117:6;12125;12174:2;12162:9;12153:7;12149:23;12145:32;12142:119;;;12180:79;;:::i;:::-;12142:119;12328:1;12317:9;12313:17;12300:31;12358:18;12350:6;12347:30;12344:117;;;12380:79;;:::i;:::-;12344:117;12485:78;12555:7;12546:6;12535:9;12531:22;12485:78;:::i;:::-;12475:88;;12271:302;12640:2;12629:9;12625:18;12612:32;12671:18;12663:6;12660:30;12657:117;;;12693:79;;:::i;:::-;12657:117;12798:78;12868:7;12859:6;12848:9;12844:22;12798:78;:::i;:::-;12788:88;;12583:303;11999:894;;;;;:::o;12899:114::-;12966:6;13000:5;12994:12;12984:22;;12899:114;;;:::o;13019:184::-;13118:11;13152:6;13147:3;13140:19;13192:4;13187:3;13183:14;13168:29;;13019:184;;;;:::o;13209:132::-;13276:4;13299:3;13291:11;;13329:4;13324:3;13320:14;13312:22;;13209:132;;;:::o;13347:108::-;13424:24;13442:5;13424:24;:::i;:::-;13419:3;13412:37;13347:108;;:::o;13461:179::-;13530:10;13551:46;13593:3;13585:6;13551:46;:::i;:::-;13629:4;13624:3;13620:14;13606:28;;13461:179;;;;:::o;13646:113::-;13716:4;13748;13743:3;13739:14;13731:22;;13646:113;;;:::o;13795:732::-;13914:3;13943:54;13991:5;13943:54;:::i;:::-;14013:86;14092:6;14087:3;14013:86;:::i;:::-;14006:93;;14123:56;14173:5;14123:56;:::i;:::-;14202:7;14233:1;14218:284;14243:6;14240:1;14237:13;14218:284;;;14319:6;14313:13;14346:63;14405:3;14390:13;14346:63;:::i;:::-;14339:70;;14432:60;14485:6;14432:60;:::i;:::-;14422:70;;14278:224;14265:1;14262;14258:9;14253:14;;14218:284;;;14222:14;14518:3;14511:10;;13919:608;;;13795:732;;;;:::o;14533:373::-;14676:4;14714:2;14703:9;14699:18;14691:26;;14763:9;14757:4;14753:20;14749:1;14738:9;14734:17;14727:47;14791:108;14894:4;14885:6;14791:108;:::i;:::-;14783:116;;14533:373;;;;:::o;14912:118::-;14999:24;15017:5;14999:24;:::i;:::-;14994:3;14987:37;14912:118;;:::o;15036:222::-;15129:4;15167:2;15156:9;15152:18;15144:26;;15180:71;15248:1;15237:9;15233:17;15224:6;15180:71;:::i;:::-;15036:222;;;;:::o;15264:116::-;15334:21;15349:5;15334:21;:::i;:::-;15327:5;15324:32;15314:60;;15370:1;15367;15360:12;15314:60;15264:116;:::o;15386:133::-;15429:5;15467:6;15454:20;15445:29;;15483:30;15507:5;15483:30;:::i;:::-;15386:133;;;;:::o;15525:468::-;15590:6;15598;15647:2;15635:9;15626:7;15622:23;15618:32;15615:119;;;15653:79;;:::i;:::-;15615:119;15773:1;15798:53;15843:7;15834:6;15823:9;15819:22;15798:53;:::i;:::-;15788:63;;15744:117;15900:2;15926:50;15968:7;15959:6;15948:9;15944:22;15926:50;:::i;:::-;15916:60;;15871:115;15525:468;;;;;:::o;15999:474::-;16067:6;16075;16124:2;16112:9;16103:7;16099:23;16095:32;16092:119;;;16130:79;;:::i;:::-;16092:119;16250:1;16275:53;16320:7;16311:6;16300:9;16296:22;16275:53;:::i;:::-;16265:63;;16221:117;16377:2;16403:53;16448:7;16439:6;16428:9;16424:22;16403:53;:::i;:::-;16393:63;;16348:118;15999:474;;;;;:::o;16479:1089::-;16583:6;16591;16599;16607;16615;16664:3;16652:9;16643:7;16639:23;16635:33;16632:120;;;16671:79;;:::i;:::-;16632:120;16791:1;16816:53;16861:7;16852:6;16841:9;16837:22;16816:53;:::i;:::-;16806:63;;16762:117;16918:2;16944:53;16989:7;16980:6;16969:9;16965:22;16944:53;:::i;:::-;16934:63;;16889:118;17046:2;17072:53;17117:7;17108:6;17097:9;17093:22;17072:53;:::i;:::-;17062:63;;17017:118;17174:2;17200:53;17245:7;17236:6;17225:9;17221:22;17200:53;:::i;:::-;17190:63;;17145:118;17330:3;17319:9;17315:19;17302:33;17362:18;17354:6;17351:30;17348:117;;;17384:79;;:::i;:::-;17348:117;17489:62;17543:7;17534:6;17523:9;17519:22;17489:62;:::i;:::-;17479:72;;17273:288;16479:1089;;;;;;;;:::o;17574:329::-;17633:6;17682:2;17670:9;17661:7;17657:23;17653:32;17650:119;;;17688:79;;:::i;:::-;17650:119;17808:1;17833:53;17878:7;17869:6;17858:9;17854:22;17833:53;:::i;:::-;17823:63;;17779:117;17574:329;;;;:::o;17909:180::-;17957:77;17954:1;17947:88;18054:4;18051:1;18044:15;18078:4;18075:1;18068:15;18095:320;18139:6;18176:1;18170:4;18166:12;18156:22;;18223:1;18217:4;18213:12;18244:18;18234:81;;18300:4;18292:6;18288:17;18278:27;;18234:81;18362:2;18354:6;18351:14;18331:18;18328:38;18325:84;;18381:18;;:::i;:::-;18325:84;18146:269;18095:320;;;:::o;18421:180::-;18469:77;18466:1;18459:88;18566:4;18563:1;18556:15;18590:4;18587:1;18580:15;18607:191;18647:3;18666:20;18684:1;18666:20;:::i;:::-;18661:25;;18700:20;18718:1;18700:20;:::i;:::-;18695:25;;18743:1;18740;18736:9;18729:16;;18764:3;18761:1;18758:10;18755:36;;;18771:18;;:::i;:::-;18755:36;18607:191;;;;:::o;18804:332::-;18925:4;18963:2;18952:9;18948:18;18940:26;;18976:71;19044:1;19033:9;19029:17;19020:6;18976:71;:::i;:::-;19057:72;19125:2;19114:9;19110:18;19101:6;19057:72;:::i;:::-;18804:332;;;;;:::o;19142:::-;19263:4;19301:2;19290:9;19286:18;19278:26;;19314:71;19382:1;19371:9;19367:17;19358:6;19314:71;:::i;:::-;19395:72;19463:2;19452:9;19448:18;19439:6;19395:72;:::i;:::-;19142:332;;;;;:::o;19480:180::-;19528:77;19525:1;19518:88;19625:4;19622:1;19615:15;19649:4;19646:1;19639:15;19666:233;19705:3;19728:24;19746:5;19728:24;:::i;:::-;19719:33;;19774:66;19767:5;19764:77;19761:103;;19844:18;;:::i;:::-;19761:103;19891:1;19884:5;19880:13;19873:20;;19666:233;;;:::o;19905:170::-;20045:22;20041:1;20033:6;20029:14;20022:46;19905:170;:::o;20081:366::-;20223:3;20244:67;20308:2;20303:3;20244:67;:::i;:::-;20237:74;;20320:93;20409:3;20320:93;:::i;:::-;20438:2;20433:3;20429:12;20422:19;;20081:366;;;:::o;20453:419::-;20619:4;20657:2;20646:9;20642:18;20634:26;;20706:9;20700:4;20696:20;20692:1;20681:9;20677:17;20670:47;20734:131;20860:4;20734:131;:::i;:::-;20726:139;;20453:419;;;:::o;20878:194::-;20918:4;20938:20;20956:1;20938:20;:::i;:::-;20933:25;;20972:20;20990:1;20972:20;:::i;:::-;20967:25;;21016:1;21013;21009:9;21001:17;;21040:1;21034:4;21031:11;21028:37;;;21045:18;;:::i;:::-;21028:37;20878:194;;;;:::o;21078:553::-;21255:4;21293:3;21282:9;21278:19;21270:27;;21307:71;21375:1;21364:9;21360:17;21351:6;21307:71;:::i;:::-;21388:72;21456:2;21445:9;21441:18;21432:6;21388:72;:::i;:::-;21470;21538:2;21527:9;21523:18;21514:6;21470:72;:::i;:::-;21552;21620:2;21609:9;21605:18;21596:6;21552:72;:::i;:::-;21078:553;;;;;;;:::o;21637:634::-;21858:4;21896:2;21885:9;21881:18;21873:26;;21945:9;21939:4;21935:20;21931:1;21920:9;21916:17;21909:47;21973:108;22076:4;22067:6;21973:108;:::i;:::-;21965:116;;22128:9;22122:4;22118:20;22113:2;22102:9;22098:18;22091:48;22156:108;22259:4;22250:6;22156:108;:::i;:::-;22148:116;;21637:634;;;;;:::o;22277:98::-;22328:6;22362:5;22356:12;22346:22;;22277:98;;;:::o;22381:168::-;22464:11;22498:6;22493:3;22486:19;22538:4;22533:3;22529:14;22514:29;;22381:168;;;;:::o;22555:373::-;22641:3;22669:38;22701:5;22669:38;:::i;:::-;22723:70;22786:6;22781:3;22723:70;:::i;:::-;22716:77;;22802:65;22860:6;22855:3;22848:4;22841:5;22837:16;22802:65;:::i;:::-;22892:29;22914:6;22892:29;:::i;:::-;22887:3;22883:39;22876:46;;22645:283;22555:373;;;;:::o;22934:751::-;23157:4;23195:3;23184:9;23180:19;23172:27;;23209:71;23277:1;23266:9;23262:17;23253:6;23209:71;:::i;:::-;23290:72;23358:2;23347:9;23343:18;23334:6;23290:72;:::i;:::-;23372;23440:2;23429:9;23425:18;23416:6;23372:72;:::i;:::-;23454;23522:2;23511:9;23507:18;23498:6;23454:72;:::i;:::-;23574:9;23568:4;23564:20;23558:3;23547:9;23543:19;23536:49;23602:76;23673:4;23664:6;23602:76;:::i;:::-;23594:84;;22934:751;;;;;;;;:::o;23691:141::-;23747:5;23778:6;23772:13;23763:22;;23794:32;23820:5;23794:32;:::i;:::-;23691:141;;;;:::o;23838:349::-;23907:6;23956:2;23944:9;23935:7;23931:23;23927:32;23924:119;;;23962:79;;:::i;:::-;23924:119;24082:1;24107:63;24162:7;24153:6;24142:9;24138:22;24107:63;:::i;:::-;24097:73;;24053:127;23838:349;;;;:::o;24193:1053::-;24516:4;24554:3;24543:9;24539:19;24531:27;;24568:71;24636:1;24625:9;24621:17;24612:6;24568:71;:::i;:::-;24649:72;24717:2;24706:9;24702:18;24693:6;24649:72;:::i;:::-;24768:9;24762:4;24758:20;24753:2;24742:9;24738:18;24731:48;24796:108;24899:4;24890:6;24796:108;:::i;:::-;24788:116;;24951:9;24945:4;24941:20;24936:2;24925:9;24921:18;24914:48;24979:108;25082:4;25073:6;24979:108;:::i;:::-;24971:116;;25135:9;25129:4;25125:20;25119:3;25108:9;25104:19;25097:49;25163:76;25234:4;25225:6;25163:76;:::i;:::-;25155:84;;24193:1053;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1884000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "infinite",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"burnToken(uint256,uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"mintToken(uint256,uint256)": "infinite",
								"owner()": "2582",
								"renounceOwnership()": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "809",
								"tokenSupply(uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"uri(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 171,
									"end": 913,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 171,
									"end": 913,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 171,
									"end": 913,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 307,
									"end": 492,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 307,
									"end": 492,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 307,
									"end": 492,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 307,
									"end": 492,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 307,
									"end": 492,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 307,
									"end": 492,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 307,
									"end": 492,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 307,
									"end": 492,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 307,
									"end": 492,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 307,
									"end": 492,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 307,
									"end": 492,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 378,
									"end": 388,
									"name": "CALLER",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH data",
									"source": 2,
									"value": "BE7838470A3C26528D43BAE23565234ED295A39BDE7B6C68AC16C023B38BF94F"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1301,
									"end": 1305,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1293,
									"end": 1300,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1293,
									"end": 1300,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1293,
									"end": 1300,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 1293,
									"end": 1306,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 441,
									"end": 458,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 451,
									"end": 452,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 454,
									"end": 457,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 441,
									"end": 450,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 441,
									"end": 450,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 441,
									"end": 450,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 441,
									"end": 458,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 441,
									"end": 458,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 441,
									"end": 458,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 441,
									"end": 458,
									"modifierDepth": 2,
									"name": "tag",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 441,
									"end": 458,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 468,
									"end": 485,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 478,
									"end": 479,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 481,
									"end": 484,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "C8"
								},
								{
									"begin": 468,
									"end": 477,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 468,
									"end": 477,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 468,
									"end": 477,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 468,
									"end": 485,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 468,
									"end": 485,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 468,
									"end": 485,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 468,
									"end": 485,
									"modifierDepth": 2,
									"name": "tag",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 468,
									"end": 485,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 171,
									"end": 913,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 171,
									"end": 913,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10282,
									"end": 10368,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 10282,
									"end": 10368,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 10355,
									"end": 10361,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10352,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 10348,
									"end": 10361,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 10282,
									"end": 10368,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 10282,
									"end": 10368,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 498,
									"end": 662,
									"name": "tag",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 498,
									"end": 662,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 1531,
									"end": 1542,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 1531,
									"end": 1542,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1531,
									"end": 1542,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1531,
									"end": 1544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 577,
									"end": 615,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 583,
									"end": 593,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 12
								},
								{
									"begin": 595,
									"end": 602,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 604,
									"end": 610,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 577,
									"end": 615,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 577,
									"end": 615,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 577,
									"end": 615,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 577,
									"end": 615,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 577,
									"end": 615,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 577,
									"end": 615,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 577,
									"end": 615,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 577,
									"end": 615,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 577,
									"end": 615,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 577,
									"end": 615,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 577,
									"end": 615,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 577,
									"end": 615,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 577,
									"end": 582,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 577,
									"end": 582,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 577,
									"end": 582,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 577,
									"end": 615,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 577,
									"end": 615,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 577,
									"end": 615,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 577,
									"end": 615,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 577,
									"end": 615,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 649,
									"end": 655,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 625,
									"end": 636,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 625,
									"end": 645,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 637,
									"end": 644,
									"modifierDepth": 1,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 625,
									"end": 645,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 625,
									"end": 645,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 625,
									"end": 645,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 625,
									"end": 645,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 625,
									"end": 645,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 625,
									"end": 645,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 625,
									"end": 645,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 625,
									"end": 645,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 625,
									"end": 645,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 625,
									"end": 645,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 625,
									"end": 645,
									"modifierDepth": 1,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 625,
									"end": 645,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 625,
									"end": 655,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 625,
									"end": 655,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 625,
									"end": 655,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 625,
									"end": 655,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 625,
									"end": 655,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 625,
									"end": 655,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 625,
									"end": 655,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 625,
									"end": 655,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 625,
									"end": 655,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 625,
									"end": 655,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 625,
									"end": 655,
									"modifierDepth": 1,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 625,
									"end": 655,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 625,
									"end": 655,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 625,
									"end": 655,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 625,
									"end": 655,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 625,
									"end": 655,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 625,
									"end": 655,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 498,
									"end": 662,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 498,
									"end": 662,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 498,
									"end": 662,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1796,
									"end": 1958,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 1796,
									"end": 1958,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1866,
									"end": 1878,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 1866,
									"end": 1876,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 1866,
									"end": 1876,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1866,
									"end": 1876,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1866,
									"end": 1878,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1866,
									"end": 1878,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1866,
									"end": 1878,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1866,
									"end": 1878,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 1866,
									"end": 1878,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1855,
									"end": 1878,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1855,
									"end": 1878,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1855,
									"end": 1862,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 1855,
									"end": 1860,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 1855,
									"end": 1860,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1855,
									"end": 1860,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1855,
									"end": 1862,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1855,
									"end": 1862,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1855,
									"end": 1862,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1855,
									"end": 1862,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 1855,
									"end": 1862,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1855,
									"end": 1878,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1855,
									"end": 1878,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1855,
									"end": 1878,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1851,
									"end": 1952,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 1851,
									"end": 1952,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 1928,
									"end": 1938,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 1928,
									"end": 1938,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1928,
									"end": 1938,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1928,
									"end": 1940,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH",
									"source": 0,
									"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1901,
									"end": 1941,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "tag",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1851,
									"end": 1952,
									"name": "tag",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 1851,
									"end": 1952,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1796,
									"end": 1958,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 10746,
									"end": 11092,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 10746,
									"end": 11092,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 10856,
									"end": 10857,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 10842,
									"end": 10858,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10842,
									"end": 10858,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 10842,
									"end": 10844,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 10842,
									"end": 10858,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10842,
									"end": 10858,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 10842,
									"end": 10858,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 10838,
									"end": 10926,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 10838,
									"end": 10926,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 10912,
									"end": 10913,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "PUSH",
									"source": 2,
									"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 10881,
									"end": 10915,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "tag",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 10838,
									"end": 10926,
									"name": "tag",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 10838,
									"end": 10926,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 10936,
									"end": 10956,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 10958,
									"end": 10981,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 10985,
									"end": 11014,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 11004,
									"end": 11006,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 11008,
									"end": 11013,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 10985,
									"end": 11003,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 10985,
									"end": 11003,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 10985,
									"end": 11003,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 10985,
									"end": 11014,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 10985,
									"end": 11014,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 10985,
									"end": 11014,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 10985,
									"end": 11014,
									"name": "tag",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 10985,
									"end": 11014,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 10935,
									"end": 11014,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 10935,
									"end": 11014,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 10935,
									"end": 11014,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 10935,
									"end": 11014,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 11024,
									"end": 11085,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 11059,
									"end": 11060,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 11063,
									"end": 11065,
									"name": "DUP8",
									"source": 2
								},
								{
									"begin": 11067,
									"end": 11070,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 11072,
									"end": 11078,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 11080,
									"end": 11084,
									"name": "DUP8",
									"source": 2
								},
								{
									"begin": 11024,
									"end": 11050,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 11024,
									"end": 11050,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 11024,
									"end": 11050,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 11024,
									"end": 11085,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 11024,
									"end": 11085,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 11024,
									"end": 11085,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 11024,
									"end": 11085,
									"name": "tag",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 11024,
									"end": 11085,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 10828,
									"end": 11092,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 10828,
									"end": 11092,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 10746,
									"end": 11092,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 10746,
									"end": 11092,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 10746,
									"end": 11092,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 10746,
									"end": 11092,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 10746,
									"end": 11092,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1638,
									"end": 1723,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 1638,
									"end": 1723,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1684,
									"end": 1691,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1703,
									"end": 1716,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1703,
									"end": 1716,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1638,
									"end": 1723,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1638,
									"end": 1723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16080,
									"end": 16929,
									"name": "tag",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 16080,
									"end": 16929,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 16188,
									"end": 16211,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 16213,
									"end": 16236,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 16374,
									"end": 16378,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 16368,
									"end": 16379,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 16358,
									"end": 16379,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 16358,
									"end": 16379,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 16444,
									"end": 16445,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 16436,
									"end": 16442,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 16429,
									"end": 16446,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 16582,
									"end": 16590,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 16575,
									"end": 16579,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 16567,
									"end": 16573,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 16563,
									"end": 16580,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 16556,
									"end": 16591,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 16704,
									"end": 16708,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 16696,
									"end": 16702,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 16692,
									"end": 16709,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 16682,
									"end": 16709,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 16682,
									"end": 16709,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 16737,
									"end": 16738,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 16729,
									"end": 16735,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 16722,
									"end": 16739,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 16778,
									"end": 16786,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 16771,
									"end": 16775,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 16763,
									"end": 16769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 16759,
									"end": 16776,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 16752,
									"end": 16787,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 16907,
									"end": 16911,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 16899,
									"end": 16905,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 16895,
									"end": 16912,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 16889,
									"end": 16893,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 16882,
									"end": 16913,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 16080,
									"end": 16929,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 16080,
									"end": 16929,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 16080,
									"end": 16929,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 16080,
									"end": 16929,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 16080,
									"end": 16929,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 16080,
									"end": 16929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7004,
									"end": 7694,
									"name": "tag",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 7004,
									"end": 7694,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7205,
									"end": 7235,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 7213,
									"end": 7217,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 7219,
									"end": 7221,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 7223,
									"end": 7226,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 7228,
									"end": 7234,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 7205,
									"end": 7212,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 7205,
									"end": 7212,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7205,
									"end": 7212,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7205,
									"end": 7235,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7205,
									"end": 7235,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7205,
									"end": 7235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7205,
									"end": 7235,
									"name": "tag",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 7205,
									"end": 7235,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7263,
									"end": 7264,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7249,
									"end": 7265,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7249,
									"end": 7265,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7249,
									"end": 7251,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7249,
									"end": 7265,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7249,
									"end": 7265,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7249,
									"end": 7265,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 7245,
									"end": 7688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 7245,
									"end": 7688,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7281,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7300,
									"end": 7312,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 7300,
									"end": 7310,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 7300,
									"end": 7310,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7300,
									"end": 7310,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7300,
									"end": 7312,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7300,
									"end": 7312,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7300,
									"end": 7312,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7300,
									"end": 7312,
									"name": "tag",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 7300,
									"end": 7312,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7281,
									"end": 7312,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7281,
									"end": 7312,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7344,
									"end": 7345,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 7330,
									"end": 7333,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7330,
									"end": 7340,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7330,
									"end": 7345,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7326,
									"end": 7678,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 7326,
									"end": 7678,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7365,
									"end": 7375,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7378,
									"end": 7403,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 7401,
									"end": 7402,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7378,
									"end": 7381,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 7378,
									"end": 7400,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 7378,
									"end": 7400,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7378,
									"end": 7400,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7378,
									"end": 7400,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7378,
									"end": 7403,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7378,
									"end": 7403,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7378,
									"end": 7403,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7378,
									"end": 7403,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7378,
									"end": 7403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7378,
									"end": 7403,
									"name": "tag",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 7378,
									"end": 7403,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7365,
									"end": 7403,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7365,
									"end": 7403,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7421,
									"end": 7434,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7437,
									"end": 7465,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "57"
								},
								{
									"begin": 7463,
									"end": 7464,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7437,
									"end": 7443,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 7437,
									"end": 7462,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 7437,
									"end": 7462,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7437,
									"end": 7462,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7437,
									"end": 7462,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7437,
									"end": 7465,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7437,
									"end": 7465,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7437,
									"end": 7465,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7437,
									"end": 7465,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7437,
									"end": 7465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7437,
									"end": 7465,
									"name": "tag",
									"source": 2,
									"value": "57"
								},
								{
									"begin": 7437,
									"end": 7465,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7421,
									"end": 7465,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7421,
									"end": 7465,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7483,
									"end": 7550,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "58"
								},
								{
									"begin": 7514,
									"end": 7522,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7524,
									"end": 7528,
									"name": "DUP10",
									"source": 2
								},
								{
									"begin": 7530,
									"end": 7532,
									"name": "DUP10",
									"source": 2
								},
								{
									"begin": 7534,
									"end": 7536,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 7538,
									"end": 7543,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 7545,
									"end": 7549,
									"name": "DUP10",
									"source": 2
								},
								{
									"begin": 7483,
									"end": 7513,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "59"
								},
								{
									"begin": 7483,
									"end": 7513,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7483,
									"end": 7513,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7483,
									"end": 7550,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7483,
									"end": 7550,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7483,
									"end": 7550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7483,
									"end": 7550,
									"name": "tag",
									"source": 2,
									"value": "58"
								},
								{
									"begin": 7483,
									"end": 7550,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7347,
									"end": 7565,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7347,
									"end": 7565,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7326,
									"end": 7678,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 7326,
									"end": 7678,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7326,
									"end": 7678,
									"name": "tag",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 7326,
									"end": 7678,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7589,
									"end": 7663,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "61"
								},
								{
									"begin": 7625,
									"end": 7633,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7635,
									"end": 7639,
									"name": "DUP8",
									"source": 2
								},
								{
									"begin": 7641,
									"end": 7643,
									"name": "DUP8",
									"source": 2
								},
								{
									"begin": 7645,
									"end": 7648,
									"name": "DUP8",
									"source": 2
								},
								{
									"begin": 7650,
									"end": 7656,
									"name": "DUP8",
									"source": 2
								},
								{
									"begin": 7658,
									"end": 7662,
									"name": "DUP8",
									"source": 2
								},
								{
									"begin": 7589,
									"end": 7624,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "62"
								},
								{
									"begin": 7589,
									"end": 7624,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7589,
									"end": 7624,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7589,
									"end": 7663,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7589,
									"end": 7663,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7589,
									"end": 7663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7589,
									"end": 7663,
									"name": "tag",
									"source": 2,
									"value": "61"
								},
								{
									"begin": 7589,
									"end": 7663,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7326,
									"end": 7678,
									"name": "tag",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 7326,
									"end": 7678,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7267,
									"end": 7688,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7245,
									"end": 7688,
									"name": "tag",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 7245,
									"end": 7688,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7004,
									"end": 7694,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7004,
									"end": 7694,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7004,
									"end": 7694,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7004,
									"end": 7694,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7004,
									"end": 7694,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7004,
									"end": 7694,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5144,
									"end": 6425,
									"name": "tag",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 5144,
									"end": 6425,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5279,
									"end": 5285,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5279,
									"end": 5292,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5265,
									"end": 5268,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5265,
									"end": 5275,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5265,
									"end": 5292,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 5261,
									"end": 5378,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "64"
								},
								{
									"begin": 5261,
									"end": 5378,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 5341,
									"end": 5344,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5341,
									"end": 5351,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5353,
									"end": 5359,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5353,
									"end": 5366,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "PUSH",
									"source": 2,
									"value": "5B05999100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "65"
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "66"
								},
								{
									"begin": 5315,
									"end": 5367,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "tag",
									"source": 2,
									"value": "65"
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 5261,
									"end": 5378,
									"name": "tag",
									"source": 2,
									"value": "64"
								},
								{
									"begin": 5261,
									"end": 5378,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5388,
									"end": 5404,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5407,
									"end": 5419,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "67"
								},
								{
									"begin": 5407,
									"end": 5417,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 5407,
									"end": 5417,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 5407,
									"end": 5417,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 5407,
									"end": 5419,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 5407,
									"end": 5419,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 5407,
									"end": 5419,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5407,
									"end": 5419,
									"name": "tag",
									"source": 2,
									"value": "67"
								},
								{
									"begin": 5407,
									"end": 5419,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5388,
									"end": 5419,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5388,
									"end": 5419,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5435,
									"end": 5444,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5430,
									"end": 6121,
									"name": "tag",
									"source": 2,
									"value": "68"
								},
								{
									"begin": 5430,
									"end": 6121,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5454,
									"end": 5457,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 5454,
									"end": 5464,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5450,
									"end": 5451,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5450,
									"end": 5464,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 5430,
									"end": 6121,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 5430,
									"end": 6121,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "69"
								},
								{
									"begin": 5430,
									"end": 6121,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 5485,
									"end": 5495,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5498,
									"end": 5523,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "71"
								},
								{
									"begin": 5521,
									"end": 5522,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5498,
									"end": 5501,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 5498,
									"end": 5520,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 5498,
									"end": 5520,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 5498,
									"end": 5520,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 5498,
									"end": 5520,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5498,
									"end": 5523,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5498,
									"end": 5523,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5498,
									"end": 5523,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 5498,
									"end": 5523,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 5498,
									"end": 5523,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5498,
									"end": 5523,
									"name": "tag",
									"source": 2,
									"value": "71"
								},
								{
									"begin": 5498,
									"end": 5523,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5485,
									"end": 5523,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5485,
									"end": 5523,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5537,
									"end": 5550,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5553,
									"end": 5581,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "72"
								},
								{
									"begin": 5579,
									"end": 5580,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 5553,
									"end": 5559,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 5553,
									"end": 5578,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 5553,
									"end": 5578,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 5553,
									"end": 5578,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 5553,
									"end": 5578,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5553,
									"end": 5581,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5553,
									"end": 5581,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5553,
									"end": 5581,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 5553,
									"end": 5581,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 5553,
									"end": 5581,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5553,
									"end": 5581,
									"name": "tag",
									"source": 2,
									"value": "72"
								},
								{
									"begin": 5553,
									"end": 5581,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5537,
									"end": 5581,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5537,
									"end": 5581,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5616,
									"end": 5617,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5600,
									"end": 5618,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5600,
									"end": 5618,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 5600,
									"end": 5604,
									"name": "DUP9",
									"source": 2
								},
								{
									"begin": 5600,
									"end": 5618,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5600,
									"end": 5618,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 5600,
									"end": 5618,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 5596,
									"end": 6016,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 5596,
									"end": 6016,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 5638,
									"end": 5657,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5660,
									"end": 5669,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5660,
									"end": 5673,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5670,
									"end": 5672,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 5660,
									"end": 5673,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5660,
									"end": 5673,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 5660,
									"end": 5673,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 5660,
									"end": 5673,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5660,
									"end": 5673,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5660,
									"end": 5673,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5660,
									"end": 5673,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 5660,
									"end": 5673,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 5660,
									"end": 5673,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5660,
									"end": 5673,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5660,
									"end": 5673,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 5660,
									"end": 5679,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5674,
									"end": 5678,
									"name": "DUP11",
									"source": 2
								},
								{
									"begin": 5660,
									"end": 5679,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5660,
									"end": 5679,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 5660,
									"end": 5679,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5660,
									"end": 5679,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 5660,
									"end": 5679,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5660,
									"end": 5679,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 5660,
									"end": 5679,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 5660,
									"end": 5679,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5660,
									"end": 5679,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5660,
									"end": 5679,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5660,
									"end": 5679,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 5660,
									"end": 5679,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 5660,
									"end": 5679,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5660,
									"end": 5679,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5660,
									"end": 5679,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 5660,
									"end": 5679,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 5638,
									"end": 5679,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5638,
									"end": 5679,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5715,
									"end": 5720,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5701,
									"end": 5712,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5701,
									"end": 5720,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 5697,
									"end": 5826,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 5697,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "74"
								},
								{
									"begin": 5697,
									"end": 5826,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 5778,
									"end": 5782,
									"name": "DUP9",
									"source": 2
								},
								{
									"begin": 5784,
									"end": 5795,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5797,
									"end": 5802,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 5804,
									"end": 5806,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "PUSH",
									"source": 2,
									"value": "3DEE4C500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "75"
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "SWAP5",
									"source": 2
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "76"
								},
								{
									"begin": 5751,
									"end": 5807,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "tag",
									"source": 2,
									"value": "75"
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 5697,
									"end": 5826,
									"name": "tag",
									"source": 2,
									"value": "74"
								},
								{
									"begin": 5697,
									"end": 5826,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5978,
									"end": 5983,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5964,
									"end": 5975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5964,
									"end": 5983,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 5942,
									"end": 5951,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5942,
									"end": 5955,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5952,
									"end": 5954,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 5942,
									"end": 5955,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5942,
									"end": 5955,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 5942,
									"end": 5955,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 5942,
									"end": 5955,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5942,
									"end": 5955,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5942,
									"end": 5955,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5942,
									"end": 5955,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 5942,
									"end": 5955,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 5942,
									"end": 5955,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5942,
									"end": 5955,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5942,
									"end": 5955,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 5942,
									"end": 5961,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5956,
									"end": 5960,
									"name": "DUP12",
									"source": 2
								},
								{
									"begin": 5942,
									"end": 5961,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5942,
									"end": 5961,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 5942,
									"end": 5961,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5942,
									"end": 5961,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 5942,
									"end": 5961,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5942,
									"end": 5961,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 5942,
									"end": 5961,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 5942,
									"end": 5961,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5942,
									"end": 5961,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5942,
									"end": 5961,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5942,
									"end": 5961,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 5942,
									"end": 5961,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 5942,
									"end": 5961,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5942,
									"end": 5961,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5942,
									"end": 5961,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 5942,
									"end": 5983,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5942,
									"end": 5983,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5942,
									"end": 5983,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 5942,
									"end": 5983,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5620,
									"end": 6016,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5596,
									"end": 6016,
									"name": "tag",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 5596,
									"end": 6016,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6048,
									"end": 6049,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6034,
									"end": 6050,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6034,
									"end": 6050,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6034,
									"end": 6036,
									"name": "DUP8",
									"source": 2
								},
								{
									"begin": 6034,
									"end": 6050,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6034,
									"end": 6050,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6034,
									"end": 6050,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 6030,
									"end": 6111,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "77"
								},
								{
									"begin": 6030,
									"end": 6111,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6091,
									"end": 6096,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6070,
									"end": 6079,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6070,
									"end": 6083,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6080,
									"end": 6082,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 6070,
									"end": 6083,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6070,
									"end": 6083,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6070,
									"end": 6083,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6070,
									"end": 6083,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6070,
									"end": 6083,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6070,
									"end": 6083,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6070,
									"end": 6083,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6070,
									"end": 6083,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6070,
									"end": 6083,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6070,
									"end": 6083,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6070,
									"end": 6083,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6070,
									"end": 6087,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6084,
									"end": 6086,
									"name": "DUP10",
									"source": 2
								},
								{
									"begin": 6070,
									"end": 6087,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6070,
									"end": 6087,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6070,
									"end": 6087,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6070,
									"end": 6087,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6070,
									"end": 6087,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6070,
									"end": 6087,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6070,
									"end": 6087,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6070,
									"end": 6087,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6070,
									"end": 6087,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6070,
									"end": 6087,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6070,
									"end": 6087,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6070,
									"end": 6087,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6070,
									"end": 6087,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6070,
									"end": 6087,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6070,
									"end": 6087,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6070,
									"end": 6087,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6070,
									"end": 6096,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6070,
									"end": 6096,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6070,
									"end": 6096,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6070,
									"end": 6096,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "78"
								},
								{
									"begin": 6070,
									"end": 6096,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6070,
									"end": 6096,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6070,
									"end": 6096,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 6070,
									"end": 6096,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6070,
									"end": 6096,
									"name": "tag",
									"source": 2,
									"value": "78"
								},
								{
									"begin": 6070,
									"end": 6096,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6070,
									"end": 6096,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6070,
									"end": 6096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6070,
									"end": 6096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6070,
									"end": 6096,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6070,
									"end": 6096,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6070,
									"end": 6096,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6070,
									"end": 6096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6030,
									"end": 6111,
									"name": "tag",
									"source": 2,
									"value": "77"
								},
								{
									"begin": 6030,
									"end": 6111,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5471,
									"end": 6121,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5471,
									"end": 6121,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5466,
									"end": 5469,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5466,
									"end": 5469,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "79"
								},
								{
									"begin": 5466,
									"end": 5469,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5466,
									"end": 5469,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 5466,
									"end": 5469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5466,
									"end": 5469,
									"name": "tag",
									"source": 2,
									"value": "79"
								},
								{
									"begin": 5466,
									"end": 5469,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5466,
									"end": 5469,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5466,
									"end": 5469,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5430,
									"end": 6121,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "68"
								},
								{
									"begin": 5430,
									"end": 6121,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5430,
									"end": 6121,
									"name": "tag",
									"source": 2,
									"value": "69"
								},
								{
									"begin": 5430,
									"end": 6121,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5430,
									"end": 6121,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6149,
									"end": 6150,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 6135,
									"end": 6138,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6135,
									"end": 6145,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6135,
									"end": 6150,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6131,
									"end": 6419,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "81"
								},
								{
									"begin": 6131,
									"end": 6419,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6166,
									"end": 6176,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6179,
									"end": 6204,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "82"
								},
								{
									"begin": 6202,
									"end": 6203,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6179,
									"end": 6182,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6179,
									"end": 6201,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 6179,
									"end": 6201,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6179,
									"end": 6201,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 6179,
									"end": 6201,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6179,
									"end": 6204,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6179,
									"end": 6204,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6179,
									"end": 6204,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6179,
									"end": 6204,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 6179,
									"end": 6204,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6179,
									"end": 6204,
									"name": "tag",
									"source": 2,
									"value": "82"
								},
								{
									"begin": 6179,
									"end": 6204,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6166,
									"end": 6204,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6166,
									"end": 6204,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6218,
									"end": 6231,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6234,
									"end": 6262,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "83"
								},
								{
									"begin": 6260,
									"end": 6261,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6234,
									"end": 6240,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6234,
									"end": 6259,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 6234,
									"end": 6259,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6234,
									"end": 6259,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 6234,
									"end": 6259,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6234,
									"end": 6262,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6234,
									"end": 6262,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6234,
									"end": 6262,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6234,
									"end": 6262,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 6234,
									"end": 6262,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6234,
									"end": 6262,
									"name": "tag",
									"source": 2,
									"value": "83"
								},
								{
									"begin": 6234,
									"end": 6262,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6218,
									"end": 6262,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6218,
									"end": 6262,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6312,
									"end": 6314,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6306,
									"end": 6310,
									"name": "DUP8",
									"source": 2
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6296,
									"end": 6304,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "PUSH",
									"source": 2,
									"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
								},
								{
									"begin": 6316,
									"end": 6318,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6320,
									"end": 6325,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "84"
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "66"
								},
								{
									"begin": 6281,
									"end": 6326,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "tag",
									"source": 2,
									"value": "84"
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "LOG4",
									"source": 2
								},
								{
									"begin": 6152,
									"end": 6337,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6152,
									"end": 6337,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6131,
									"end": 6419,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "85"
								},
								{
									"begin": 6131,
									"end": 6419,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6131,
									"end": 6419,
									"name": "tag",
									"source": 2,
									"value": "81"
								},
								{
									"begin": 6131,
									"end": 6419,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6392,
									"end": 6394,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6390,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6376,
									"end": 6384,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "PUSH",
									"source": 2,
									"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
								},
								{
									"begin": 6396,
									"end": 6399,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6401,
									"end": 6407,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "86"
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "87"
								},
								{
									"begin": 6362,
									"end": 6408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "tag",
									"source": 2,
									"value": "86"
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "LOG4",
									"source": 2
								},
								{
									"begin": 6131,
									"end": 6419,
									"name": "tag",
									"source": 2,
									"value": "85"
								},
								{
									"begin": 6131,
									"end": 6419,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5251,
									"end": 6425,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5144,
									"end": 6425,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5144,
									"end": 6425,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5144,
									"end": 6425,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5144,
									"end": 6425,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5144,
									"end": 6425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4204,
									"end": 4401,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 4204,
									"end": 4401,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4290,
									"end": 4301,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4378,
									"end": 4382,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4373,
									"end": 4376,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4369,
									"end": 4383,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 4362,
									"end": 4366,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4357,
									"end": 4360,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4353,
									"end": 4367,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4349,
									"end": 4384,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4343,
									"end": 4385,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 4336,
									"end": 4385,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4336,
									"end": 4385,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4204,
									"end": 4401,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4204,
									"end": 4401,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4204,
									"end": 4401,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4204,
									"end": 4401,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4204,
									"end": 4401,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 13761,
									"end": 14735,
									"name": "tag",
									"source": 2,
									"value": "59"
								},
								{
									"begin": 13761,
									"end": 14735,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 13984,
									"end": 13985,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 13967,
									"end": 13969,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 13967,
									"end": 13981,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 13967,
									"end": 13981,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 13967,
									"end": 13981,
									"name": "EXTCODESIZE",
									"source": 2
								},
								{
									"begin": 13967,
									"end": 13985,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 13963,
									"end": 14729,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 13963,
									"end": 14729,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "90"
								},
								{
									"begin": 13963,
									"end": 14729,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 14022,
									"end": 14024,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 14005,
									"end": 14043,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 14005,
									"end": 14043,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 14005,
									"end": 14043,
									"name": "PUSH",
									"source": 2,
									"value": "F23A6E61"
								},
								{
									"begin": 14044,
									"end": 14052,
									"name": "DUP8",
									"source": 2
								},
								{
									"begin": 14054,
									"end": 14058,
									"name": "DUP8",
									"source": 2
								},
								{
									"begin": 14060,
									"end": 14062,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 14064,
									"end": 14069,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 14071,
									"end": 14075,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFF"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "PUSH",
									"source": 2,
									"value": "E0"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "91"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "SWAP6",
									"source": 2
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "SWAP5",
									"source": 2
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "92"
								},
								{
									"begin": 14005,
									"end": 14076,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "tag",
									"source": 2,
									"value": "91"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "DUP8",
									"source": 2
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "GAS",
									"source": 2
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "CALL",
									"source": 2
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "93"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "94"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "95"
								},
								{
									"begin": 14005,
									"end": 14076,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "tag",
									"source": 2,
									"value": "94"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "tag",
									"source": 2,
									"value": "93"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "96"
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "101"
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "PUSH",
									"source": 2,
									"value": "3F"
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "RETURNDATACOPY",
									"source": 2
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "tag",
									"source": 2,
									"value": "101"
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "tag",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 14377,
									"end": 14378,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 14360,
									"end": 14366,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 14360,
									"end": 14373,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 14360,
									"end": 14378,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 14356,
									"end": 14705,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "102"
								},
								{
									"begin": 14356,
									"end": 14705,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 14487,
									"end": 14489,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "PUSH",
									"source": 2,
									"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "103"
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 14464,
									"end": 14490,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "tag",
									"source": 2,
									"value": "103"
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 14356,
									"end": 14705,
									"name": "tag",
									"source": 2,
									"value": "102"
								},
								{
									"begin": 14356,
									"end": 14705,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 14657,
									"end": 14663,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 14651,
									"end": 14664,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 14642,
									"end": 14648,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 14638,
									"end": 14640,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 14634,
									"end": 14649,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 14627,
									"end": 14665,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "tag",
									"source": 2,
									"value": "96"
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 14137,
									"end": 14180,
									"name": "PUSH",
									"source": 2,
									"value": "F23A6E61"
								},
								{
									"begin": 14137,
									"end": 14180,
									"name": "PUSH",
									"source": 2,
									"value": "E0"
								},
								{
									"begin": 14137,
									"end": 14180,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 14125,
									"end": 14180,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 14125,
									"end": 14180,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 14125,
									"end": 14180,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 14125,
									"end": 14133,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 14125,
									"end": 14180,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 14125,
									"end": 14180,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 14125,
									"end": 14180,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 14125,
									"end": 14180,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 14121,
									"end": 14295,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "106"
								},
								{
									"begin": 14121,
									"end": 14295,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 14273,
									"end": 14275,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "PUSH",
									"source": 2,
									"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "107"
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 14250,
									"end": 14276,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "tag",
									"source": 2,
									"value": "107"
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 14121,
									"end": 14295,
									"name": "tag",
									"source": 2,
									"value": "106"
								},
								{
									"begin": 14121,
									"end": 14295,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 14077,
									"end": 14309,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 13963,
									"end": 14729,
									"name": "tag",
									"source": 2,
									"value": "90"
								},
								{
									"begin": 13963,
									"end": 14729,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 13761,
									"end": 14735,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 13761,
									"end": 14735,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 13761,
									"end": 14735,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 13761,
									"end": 14735,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 13761,
									"end": 14735,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 13761,
									"end": 14735,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 13761,
									"end": 14735,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14923,
									"end": 15964,
									"name": "tag",
									"source": 2,
									"value": "62"
								},
								{
									"begin": 14923,
									"end": 15964,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 15171,
									"end": 15172,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 15154,
									"end": 15156,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 15154,
									"end": 15168,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 15154,
									"end": 15168,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 15154,
									"end": 15168,
									"name": "EXTCODESIZE",
									"source": 2
								},
								{
									"begin": 15154,
									"end": 15172,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 15150,
									"end": 15958,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 15150,
									"end": 15958,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "109"
								},
								{
									"begin": 15150,
									"end": 15958,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 15209,
									"end": 15211,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 15192,
									"end": 15235,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 15192,
									"end": 15235,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 15192,
									"end": 15235,
									"name": "PUSH",
									"source": 2,
									"value": "BC197C81"
								},
								{
									"begin": 15236,
									"end": 15244,
									"name": "DUP8",
									"source": 2
								},
								{
									"begin": 15246,
									"end": 15250,
									"name": "DUP8",
									"source": 2
								},
								{
									"begin": 15252,
									"end": 15255,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 15257,
									"end": 15263,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 15265,
									"end": 15269,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFF"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "PUSH",
									"source": 2,
									"value": "E0"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "110"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "SWAP6",
									"source": 2
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "SWAP5",
									"source": 2
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "111"
								},
								{
									"begin": 15192,
									"end": 15270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "tag",
									"source": 2,
									"value": "110"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "DUP8",
									"source": 2
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "GAS",
									"source": 2
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "CALL",
									"source": 2
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "112"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "113"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "95"
								},
								{
									"begin": 15192,
									"end": 15270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "tag",
									"source": 2,
									"value": "113"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "tag",
									"source": 2,
									"value": "112"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "114"
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "119"
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "PUSH",
									"source": 2,
									"value": "3F"
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "RETURNDATACOPY",
									"source": 2
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "118"
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "tag",
									"source": 2,
									"value": "119"
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "tag",
									"source": 2,
									"value": "118"
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 15606,
									"end": 15607,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 15589,
									"end": 15595,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 15589,
									"end": 15602,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 15589,
									"end": 15607,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 15585,
									"end": 15934,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "120"
								},
								{
									"begin": 15585,
									"end": 15934,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 15716,
									"end": 15718,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "PUSH",
									"source": 2,
									"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "121"
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 15693,
									"end": 15719,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "tag",
									"source": 2,
									"value": "121"
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 15585,
									"end": 15934,
									"name": "tag",
									"source": 2,
									"value": "120"
								},
								{
									"begin": 15585,
									"end": 15934,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 15886,
									"end": 15892,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 15880,
									"end": 15893,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 15871,
									"end": 15877,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 15867,
									"end": 15869,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 15863,
									"end": 15878,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 15856,
									"end": 15894,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "tag",
									"source": 2,
									"value": "114"
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 15361,
									"end": 15409,
									"name": "PUSH",
									"source": 2,
									"value": "BC197C81"
								},
								{
									"begin": 15361,
									"end": 15409,
									"name": "PUSH",
									"source": 2,
									"value": "E0"
								},
								{
									"begin": 15361,
									"end": 15409,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 15349,
									"end": 15409,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 15349,
									"end": 15409,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 15349,
									"end": 15409,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 15349,
									"end": 15357,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 15349,
									"end": 15409,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 15349,
									"end": 15409,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 15349,
									"end": 15409,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 15349,
									"end": 15409,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 15345,
									"end": 15524,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "124"
								},
								{
									"begin": 15345,
									"end": 15524,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 15502,
									"end": 15504,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "PUSH",
									"source": 2,
									"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "125"
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 15479,
									"end": 15505,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "tag",
									"source": 2,
									"value": "125"
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 15345,
									"end": 15524,
									"name": "tag",
									"source": 2,
									"value": "124"
								},
								{
									"begin": 15345,
									"end": 15524,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 15271,
									"end": 15538,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 15150,
									"end": 15958,
									"name": "tag",
									"source": 2,
									"value": "109"
								},
								{
									"begin": 15150,
									"end": 15958,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 14923,
									"end": 15964,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 14923,
									"end": 15964,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 14923,
									"end": 15964,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 14923,
									"end": 15964,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 14923,
									"end": 15964,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 14923,
									"end": 15964,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 14923,
									"end": 15964,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 133,
									"name": "tag",
									"source": 13,
									"value": "126"
								},
								{
									"begin": 7,
									"end": 133,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 44,
									"end": 51,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 84,
									"end": 126,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 77,
									"end": 82,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 73,
									"end": 127,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 62,
									"end": 127,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 62,
									"end": 127,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7,
									"end": 133,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7,
									"end": 133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 139,
									"end": 235,
									"name": "tag",
									"source": 13,
									"value": "127"
								},
								{
									"begin": 139,
									"end": 235,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 176,
									"end": 183,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "172"
								},
								{
									"begin": 223,
									"end": 228,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "126"
								},
								{
									"begin": 205,
									"end": 229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 205,
									"end": 229,
									"name": "tag",
									"source": 13,
									"value": "172"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 194,
									"end": 229,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 194,
									"end": 229,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 139,
									"end": 235,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 139,
									"end": 235,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 241,
									"end": 359,
									"name": "tag",
									"source": 13,
									"value": "128"
								},
								{
									"begin": 241,
									"end": 359,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "174"
								},
								{
									"begin": 346,
									"end": 351,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "127"
								},
								{
									"begin": 328,
									"end": 352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 328,
									"end": 352,
									"name": "tag",
									"source": 13,
									"value": "174"
								},
								{
									"begin": 328,
									"end": 352,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 323,
									"end": 326,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 316,
									"end": 353,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 241,
									"end": 359,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 365,
									"end": 587,
									"name": "tag",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 365,
									"end": 587,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 458,
									"end": 462,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 498,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 494,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 481,
									"end": 499,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 473,
									"end": 499,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 473,
									"end": 499,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "176"
								},
								{
									"begin": 577,
									"end": 578,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 566,
									"end": 575,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 562,
									"end": 579,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 553,
									"end": 559,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "128"
								},
								{
									"begin": 509,
									"end": 580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 509,
									"end": 580,
									"name": "tag",
									"source": 13,
									"value": "176"
								},
								{
									"begin": 509,
									"end": 580,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 365,
									"end": 587,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 593,
									"end": 692,
									"name": "tag",
									"source": 13,
									"value": "129"
								},
								{
									"begin": 593,
									"end": 692,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 645,
									"end": 651,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 679,
									"end": 684,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 673,
									"end": 685,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 663,
									"end": 685,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 663,
									"end": 685,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 593,
									"end": 692,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 593,
									"end": 692,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 593,
									"end": 692,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 593,
									"end": 692,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 698,
									"end": 878,
									"name": "tag",
									"source": 13,
									"value": "130"
								},
								{
									"begin": 698,
									"end": 878,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 746,
									"end": 823,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 743,
									"end": 744,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 736,
									"end": 824,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 843,
									"end": 847,
									"name": "PUSH",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 840,
									"end": 841,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 833,
									"end": 848,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 867,
									"end": 871,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 864,
									"end": 865,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 857,
									"end": 872,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 884,
									"end": 1064,
									"name": "tag",
									"source": 13,
									"value": "131"
								},
								{
									"begin": 884,
									"end": 1064,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 932,
									"end": 1009,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 929,
									"end": 930,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 922,
									"end": 1010,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1029,
									"end": 1033,
									"name": "PUSH",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 1026,
									"end": 1027,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 1019,
									"end": 1034,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1053,
									"end": 1057,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1050,
									"end": 1051,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1043,
									"end": 1058,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1070,
									"end": 1390,
									"name": "tag",
									"source": 13,
									"value": "132"
								},
								{
									"begin": 1070,
									"end": 1390,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1114,
									"end": 1120,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1151,
									"end": 1152,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 1145,
									"end": 1149,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1141,
									"end": 1153,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 1131,
									"end": 1153,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1131,
									"end": 1153,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1198,
									"end": 1199,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 1192,
									"end": 1196,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1188,
									"end": 1200,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1219,
									"end": 1237,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1209,
									"end": 1290,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "181"
								},
								{
									"begin": 1209,
									"end": 1290,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1275,
									"end": 1279,
									"name": "PUSH",
									"source": 13,
									"value": "7F"
								},
								{
									"begin": 1267,
									"end": 1273,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1263,
									"end": 1280,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1253,
									"end": 1280,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1253,
									"end": 1280,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1209,
									"end": 1290,
									"name": "tag",
									"source": 13,
									"value": "181"
								},
								{
									"begin": 1209,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1337,
									"end": 1339,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1329,
									"end": 1335,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1326,
									"end": 1340,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 1306,
									"end": 1324,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1303,
									"end": 1341,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 1300,
									"end": 1384,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "182"
								},
								{
									"begin": 1300,
									"end": 1384,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1356,
									"end": 1374,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "183"
								},
								{
									"begin": 1356,
									"end": 1374,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "131"
								},
								{
									"begin": 1356,
									"end": 1374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1356,
									"end": 1374,
									"name": "tag",
									"source": 13,
									"value": "183"
								},
								{
									"begin": 1356,
									"end": 1374,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1300,
									"end": 1384,
									"name": "tag",
									"source": 13,
									"value": "182"
								},
								{
									"begin": 1300,
									"end": 1384,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1121,
									"end": 1390,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1070,
									"end": 1390,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1070,
									"end": 1390,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1070,
									"end": 1390,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1070,
									"end": 1390,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1396,
									"end": 1537,
									"name": "tag",
									"source": 13,
									"value": "133"
								},
								{
									"begin": 1396,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1445,
									"end": 1449,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1468,
									"end": 1471,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1460,
									"end": 1471,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1460,
									"end": 1471,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1491,
									"end": 1494,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1488,
									"end": 1489,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1481,
									"end": 1495,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1525,
									"end": 1529,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1522,
									"end": 1523,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1512,
									"end": 1530,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": 1504,
									"end": 1530,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1504,
									"end": 1530,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1396,
									"end": 1537,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1396,
									"end": 1537,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1396,
									"end": 1537,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1396,
									"end": 1537,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1543,
									"end": 1636,
									"name": "tag",
									"source": 13,
									"value": "134"
								},
								{
									"begin": 1543,
									"end": 1636,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1580,
									"end": 1586,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1627,
									"end": 1629,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1622,
									"end": 1624,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 1615,
									"end": 1620,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1611,
									"end": 1625,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1607,
									"end": 1630,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 1597,
									"end": 1630,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1597,
									"end": 1630,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1543,
									"end": 1636,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1543,
									"end": 1636,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1543,
									"end": 1636,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1543,
									"end": 1636,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1642,
									"end": 1749,
									"name": "tag",
									"source": 13,
									"value": "135"
								},
								{
									"begin": 1642,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1686,
									"end": 1694,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1736,
									"end": 1741,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1730,
									"end": 1734,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 1705,
									"end": 1742,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1705,
									"end": 1742,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1642,
									"end": 1749,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1642,
									"end": 1749,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1642,
									"end": 1749,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1642,
									"end": 1749,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1642,
									"end": 1749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1755,
									"end": 2148,
									"name": "tag",
									"source": 13,
									"value": "136"
								},
								{
									"begin": 1755,
									"end": 2148,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1824,
									"end": 1830,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1874,
									"end": 1875,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 1862,
									"end": 1872,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1858,
									"end": 1876,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 1897,
									"end": 1994,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "188"
								},
								{
									"begin": 1927,
									"end": 1993,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1916,
									"end": 1925,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1897,
									"end": 1994,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "135"
								},
								{
									"begin": 1897,
									"end": 1994,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1897,
									"end": 1994,
									"name": "tag",
									"source": 13,
									"value": "188"
								},
								{
									"begin": 1897,
									"end": 1994,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2015,
									"end": 2054,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "189"
								},
								{
									"begin": 2045,
									"end": 2053,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 2034,
									"end": 2043,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2015,
									"end": 2054,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "135"
								},
								{
									"begin": 2015,
									"end": 2054,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2015,
									"end": 2054,
									"name": "tag",
									"source": 13,
									"value": "189"
								},
								{
									"begin": 2015,
									"end": 2054,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2003,
									"end": 2054,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 2003,
									"end": 2054,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2087,
									"end": 2091,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 2083,
									"end": 2092,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 2076,
									"end": 2081,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2072,
									"end": 2093,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2063,
									"end": 2093,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 2063,
									"end": 2093,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2136,
									"end": 2140,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 2126,
									"end": 2134,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 2122,
									"end": 2141,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2115,
									"end": 2120,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2112,
									"end": 2142,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 2102,
									"end": 2142,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2102,
									"end": 2142,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1831,
									"end": 2148,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1831,
									"end": 2148,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1755,
									"end": 2148,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 1755,
									"end": 2148,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1755,
									"end": 2148,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1755,
									"end": 2148,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1755,
									"end": 2148,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1755,
									"end": 2148,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2154,
									"end": 2231,
									"name": "tag",
									"source": 13,
									"value": "137"
								},
								{
									"begin": 2154,
									"end": 2231,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2191,
									"end": 2198,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2220,
									"end": 2225,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2209,
									"end": 2225,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2209,
									"end": 2225,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2154,
									"end": 2231,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2154,
									"end": 2231,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2154,
									"end": 2231,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2154,
									"end": 2231,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2237,
									"end": 2297,
									"name": "tag",
									"source": 13,
									"value": "138"
								},
								{
									"begin": 2237,
									"end": 2297,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2265,
									"end": 2268,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2286,
									"end": 2291,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2279,
									"end": 2291,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2279,
									"end": 2291,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2237,
									"end": 2297,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2237,
									"end": 2297,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2237,
									"end": 2297,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2237,
									"end": 2297,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2303,
									"end": 2445,
									"name": "tag",
									"source": 13,
									"value": "139"
								},
								{
									"begin": 2303,
									"end": 2445,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2353,
									"end": 2362,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2386,
									"end": 2439,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "193"
								},
								{
									"begin": 2404,
									"end": 2438,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "194"
								},
								{
									"begin": 2413,
									"end": 2437,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "195"
								},
								{
									"begin": 2431,
									"end": 2436,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2413,
									"end": 2437,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "137"
								},
								{
									"begin": 2413,
									"end": 2437,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2413,
									"end": 2437,
									"name": "tag",
									"source": 13,
									"value": "195"
								},
								{
									"begin": 2413,
									"end": 2437,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2404,
									"end": 2438,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "138"
								},
								{
									"begin": 2404,
									"end": 2438,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2404,
									"end": 2438,
									"name": "tag",
									"source": 13,
									"value": "194"
								},
								{
									"begin": 2404,
									"end": 2438,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2386,
									"end": 2439,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "137"
								},
								{
									"begin": 2386,
									"end": 2439,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2386,
									"end": 2439,
									"name": "tag",
									"source": 13,
									"value": "193"
								},
								{
									"begin": 2386,
									"end": 2439,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2373,
									"end": 2439,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2373,
									"end": 2439,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2303,
									"end": 2445,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2303,
									"end": 2445,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2303,
									"end": 2445,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2303,
									"end": 2445,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2451,
									"end": 2526,
									"name": "tag",
									"source": 13,
									"value": "140"
								},
								{
									"begin": 2451,
									"end": 2526,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2494,
									"end": 2497,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2515,
									"end": 2520,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2508,
									"end": 2520,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2508,
									"end": 2520,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2451,
									"end": 2526,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2451,
									"end": 2526,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2451,
									"end": 2526,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2451,
									"end": 2526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2532,
									"end": 2801,
									"name": "tag",
									"source": 13,
									"value": "141"
								},
								{
									"begin": 2532,
									"end": 2801,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2642,
									"end": 2681,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "198"
								},
								{
									"begin": 2673,
									"end": 2680,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2642,
									"end": 2681,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "139"
								},
								{
									"begin": 2642,
									"end": 2681,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2642,
									"end": 2681,
									"name": "tag",
									"source": 13,
									"value": "198"
								},
								{
									"begin": 2642,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2703,
									"end": 2794,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "199"
								},
								{
									"begin": 2752,
									"end": 2793,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "200"
								},
								{
									"begin": 2776,
									"end": 2792,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2752,
									"end": 2793,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "140"
								},
								{
									"begin": 2752,
									"end": 2793,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2752,
									"end": 2793,
									"name": "tag",
									"source": 13,
									"value": "200"
								},
								{
									"begin": 2752,
									"end": 2793,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2744,
									"end": 2750,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2737,
									"end": 2741,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2731,
									"end": 2742,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 2703,
									"end": 2794,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "136"
								},
								{
									"begin": 2703,
									"end": 2794,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2703,
									"end": 2794,
									"name": "tag",
									"source": 13,
									"value": "199"
								},
								{
									"begin": 2703,
									"end": 2794,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2697,
									"end": 2701,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2690,
									"end": 2795,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 2608,
									"end": 2801,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2532,
									"end": 2801,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2532,
									"end": 2801,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2532,
									"end": 2801,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2532,
									"end": 2801,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2807,
									"end": 2880,
									"name": "tag",
									"source": 13,
									"value": "142"
								},
								{
									"begin": 2807,
									"end": 2880,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2852,
									"end": 2855,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2807,
									"end": 2880,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2807,
									"end": 2880,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2886,
									"end": 3075,
									"name": "tag",
									"source": 13,
									"value": "143"
								},
								{
									"begin": 2886,
									"end": 3075,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2963,
									"end": 2995,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "203"
								},
								{
									"begin": 2963,
									"end": 2995,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "142"
								},
								{
									"begin": 2963,
									"end": 2995,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2963,
									"end": 2995,
									"name": "tag",
									"source": 13,
									"value": "203"
								},
								{
									"begin": 2963,
									"end": 2995,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3004,
									"end": 3069,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "204"
								},
								{
									"begin": 3062,
									"end": 3068,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3054,
									"end": 3060,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3048,
									"end": 3052,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3004,
									"end": 3069,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "141"
								},
								{
									"begin": 3004,
									"end": 3069,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3004,
									"end": 3069,
									"name": "tag",
									"source": 13,
									"value": "204"
								},
								{
									"begin": 3004,
									"end": 3069,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2939,
									"end": 3075,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2886,
									"end": 3075,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2886,
									"end": 3075,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2886,
									"end": 3075,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3081,
									"end": 3267,
									"name": "tag",
									"source": 13,
									"value": "144"
								},
								{
									"begin": 3081,
									"end": 3267,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3141,
									"end": 3261,
									"name": "tag",
									"source": 13,
									"value": "206"
								},
								{
									"begin": 3141,
									"end": 3261,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3158,
									"end": 3161,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3151,
									"end": 3156,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3148,
									"end": 3162,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 3141,
									"end": 3261,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3141,
									"end": 3261,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "208"
								},
								{
									"begin": 3141,
									"end": 3261,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3212,
									"end": 3251,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "209"
								},
								{
									"begin": 3249,
									"end": 3250,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3242,
									"end": 3247,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3212,
									"end": 3251,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "143"
								},
								{
									"begin": 3212,
									"end": 3251,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3212,
									"end": 3251,
									"name": "tag",
									"source": 13,
									"value": "209"
								},
								{
									"begin": 3212,
									"end": 3251,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3185,
									"end": 3186,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 3178,
									"end": 3183,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3174,
									"end": 3187,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3165,
									"end": 3187,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3165,
									"end": 3187,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3141,
									"end": 3261,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "206"
								},
								{
									"begin": 3141,
									"end": 3261,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3141,
									"end": 3261,
									"name": "tag",
									"source": 13,
									"value": "208"
								},
								{
									"begin": 3141,
									"end": 3261,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3081,
									"end": 3267,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3081,
									"end": 3267,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3081,
									"end": 3267,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3273,
									"end": 3816,
									"name": "tag",
									"source": 13,
									"value": "145"
								},
								{
									"begin": 3273,
									"end": 3816,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3374,
									"end": 3376,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 3369,
									"end": 3372,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3366,
									"end": 3377,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 3363,
									"end": 3809,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3363,
									"end": 3809,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "211"
								},
								{
									"begin": 3363,
									"end": 3809,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3408,
									"end": 3446,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "212"
								},
								{
									"begin": 3440,
									"end": 3445,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3408,
									"end": 3446,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "133"
								},
								{
									"begin": 3408,
									"end": 3446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3408,
									"end": 3446,
									"name": "tag",
									"source": 13,
									"value": "212"
								},
								{
									"begin": 3408,
									"end": 3446,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3492,
									"end": 3521,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "213"
								},
								{
									"begin": 3510,
									"end": 3520,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3492,
									"end": 3521,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "134"
								},
								{
									"begin": 3492,
									"end": 3521,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3492,
									"end": 3521,
									"name": "tag",
									"source": 13,
									"value": "213"
								},
								{
									"begin": 3492,
									"end": 3521,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3482,
									"end": 3490,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3478,
									"end": 3522,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3675,
									"end": 3677,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3663,
									"end": 3673,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 3660,
									"end": 3678,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 3657,
									"end": 3706,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3657,
									"end": 3706,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "214"
								},
								{
									"begin": 3657,
									"end": 3706,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3696,
									"end": 3704,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3681,
									"end": 3704,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3681,
									"end": 3704,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3657,
									"end": 3706,
									"name": "tag",
									"source": 13,
									"value": "214"
								},
								{
									"begin": 3657,
									"end": 3706,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3719,
									"end": 3799,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "215"
								},
								{
									"begin": 3775,
									"end": 3797,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "216"
								},
								{
									"begin": 3793,
									"end": 3796,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 3775,
									"end": 3797,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "134"
								},
								{
									"begin": 3775,
									"end": 3797,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3775,
									"end": 3797,
									"name": "tag",
									"source": 13,
									"value": "216"
								},
								{
									"begin": 3775,
									"end": 3797,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3765,
									"end": 3773,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3761,
									"end": 3798,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3748,
									"end": 3759,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3719,
									"end": 3799,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "144"
								},
								{
									"begin": 3719,
									"end": 3799,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3719,
									"end": 3799,
									"name": "tag",
									"source": 13,
									"value": "215"
								},
								{
									"begin": 3719,
									"end": 3799,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3378,
									"end": 3809,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3378,
									"end": 3809,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3363,
									"end": 3809,
									"name": "tag",
									"source": 13,
									"value": "211"
								},
								{
									"begin": 3363,
									"end": 3809,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3273,
									"end": 3816,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3273,
									"end": 3816,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3273,
									"end": 3816,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3273,
									"end": 3816,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3822,
									"end": 3939,
									"name": "tag",
									"source": 13,
									"value": "146"
								},
								{
									"begin": 3822,
									"end": 3939,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3876,
									"end": 3884,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3926,
									"end": 3931,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3920,
									"end": 3924,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3916,
									"end": 3932,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 3895,
									"end": 3932,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3895,
									"end": 3932,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3822,
									"end": 3939,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 3822,
									"end": 3939,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3822,
									"end": 3939,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3822,
									"end": 3939,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3822,
									"end": 3939,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3945,
									"end": 4114,
									"name": "tag",
									"source": 13,
									"value": "147"
								},
								{
									"begin": 3945,
									"end": 4114,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3989,
									"end": 3995,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4022,
									"end": 4073,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "219"
								},
								{
									"begin": 4070,
									"end": 4071,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4066,
									"end": 4072,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 4058,
									"end": 4063,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4055,
									"end": 4056,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 4051,
									"end": 4064,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 4022,
									"end": 4073,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "146"
								},
								{
									"begin": 4022,
									"end": 4073,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4022,
									"end": 4073,
									"name": "tag",
									"source": 13,
									"value": "219"
								},
								{
									"begin": 4022,
									"end": 4073,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4018,
									"end": 4074,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 4103,
									"end": 4107,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 4097,
									"end": 4101,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4093,
									"end": 4108,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4083,
									"end": 4108,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4083,
									"end": 4108,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3996,
									"end": 4114,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3945,
									"end": 4114,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 3945,
									"end": 4114,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3945,
									"end": 4114,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3945,
									"end": 4114,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3945,
									"end": 4114,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4119,
									"end": 4414,
									"name": "tag",
									"source": 13,
									"value": "148"
								},
								{
									"begin": 4119,
									"end": 4414,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4195,
									"end": 4199,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4341,
									"end": 4370,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "221"
								},
								{
									"begin": 4366,
									"end": 4369,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4360,
									"end": 4364,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4341,
									"end": 4370,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "147"
								},
								{
									"begin": 4341,
									"end": 4370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4341,
									"end": 4370,
									"name": "tag",
									"source": 13,
									"value": "221"
								},
								{
									"begin": 4341,
									"end": 4370,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4333,
									"end": 4370,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4333,
									"end": 4370,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4403,
									"end": 4406,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4400,
									"end": 4401,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 4396,
									"end": 4407,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 4390,
									"end": 4394,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4387,
									"end": 4408,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 4379,
									"end": 4408,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4379,
									"end": 4408,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4119,
									"end": 4414,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 4119,
									"end": 4414,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4119,
									"end": 4414,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4119,
									"end": 4414,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4119,
									"end": 4414,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4419,
									"end": 5814,
									"name": "tag",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 4419,
									"end": 5814,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4536,
									"end": 4573,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "223"
								},
								{
									"begin": 4569,
									"end": 4572,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4536,
									"end": 4573,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "129"
								},
								{
									"begin": 4536,
									"end": 4573,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4536,
									"end": 4573,
									"name": "tag",
									"source": 13,
									"value": "223"
								},
								{
									"begin": 4536,
									"end": 4573,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4638,
									"end": 4656,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4630,
									"end": 4636,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4627,
									"end": 4657,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 4624,
									"end": 4680,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 4624,
									"end": 4680,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "224"
								},
								{
									"begin": 4624,
									"end": 4680,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4660,
									"end": 4678,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "225"
								},
								{
									"begin": 4660,
									"end": 4678,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "130"
								},
								{
									"begin": 4660,
									"end": 4678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4660,
									"end": 4678,
									"name": "tag",
									"source": 13,
									"value": "225"
								},
								{
									"begin": 4660,
									"end": 4678,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4624,
									"end": 4680,
									"name": "tag",
									"source": 13,
									"value": "224"
								},
								{
									"begin": 4624,
									"end": 4680,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4704,
									"end": 4742,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "226"
								},
								{
									"begin": 4736,
									"end": 4740,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4730,
									"end": 4741,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 4704,
									"end": 4742,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "132"
								},
								{
									"begin": 4704,
									"end": 4742,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4704,
									"end": 4742,
									"name": "tag",
									"source": 13,
									"value": "226"
								},
								{
									"begin": 4704,
									"end": 4742,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4789,
									"end": 4856,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "227"
								},
								{
									"begin": 4849,
									"end": 4855,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4841,
									"end": 4847,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4835,
									"end": 4839,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 4789,
									"end": 4856,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "145"
								},
								{
									"begin": 4789,
									"end": 4856,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4789,
									"end": 4856,
									"name": "tag",
									"source": 13,
									"value": "227"
								},
								{
									"begin": 4789,
									"end": 4856,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4883,
									"end": 4884,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4907,
									"end": 4911,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 4894,
									"end": 4911,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4894,
									"end": 4911,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4939,
									"end": 4941,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 4931,
									"end": 4937,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4928,
									"end": 4942,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 4956,
									"end": 4957,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 4951,
									"end": 5569,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4951,
									"end": 5569,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 4951,
									"end": 5569,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "229"
								},
								{
									"begin": 4951,
									"end": 5569,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5613,
									"end": 5614,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5630,
									"end": 5636,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5627,
									"end": 5704,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5627,
									"end": 5704,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "230"
								},
								{
									"begin": 5627,
									"end": 5704,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5679,
									"end": 5688,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5674,
									"end": 5677,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 5670,
									"end": 5689,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5664,
									"end": 5690,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 5655,
									"end": 5690,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5655,
									"end": 5690,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5627,
									"end": 5704,
									"name": "tag",
									"source": 13,
									"value": "230"
								},
								{
									"begin": 5627,
									"end": 5704,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5730,
									"end": 5797,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "231"
								},
								{
									"begin": 5790,
									"end": 5796,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 5783,
									"end": 5788,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5730,
									"end": 5797,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "148"
								},
								{
									"begin": 5730,
									"end": 5797,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5730,
									"end": 5797,
									"name": "tag",
									"source": 13,
									"value": "231"
								},
								{
									"begin": 5730,
									"end": 5797,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5728,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 5717,
									"end": 5798,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 5586,
									"end": 5808,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4921,
									"end": 5808,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "228"
								},
								{
									"begin": 4921,
									"end": 5808,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4951,
									"end": 5569,
									"name": "tag",
									"source": 13,
									"value": "229"
								},
								{
									"begin": 4951,
									"end": 5569,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5003,
									"end": 5007,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 4999,
									"end": 5008,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 4991,
									"end": 4997,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4987,
									"end": 5009,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 5037,
									"end": 5074,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "232"
								},
								{
									"begin": 5069,
									"end": 5073,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 5037,
									"end": 5074,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "133"
								},
								{
									"begin": 5037,
									"end": 5074,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5037,
									"end": 5074,
									"name": "tag",
									"source": 13,
									"value": "232"
								},
								{
									"begin": 5037,
									"end": 5074,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5096,
									"end": 5097,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5110,
									"end": 5318,
									"name": "tag",
									"source": 13,
									"value": "233"
								},
								{
									"begin": 5110,
									"end": 5318,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5124,
									"end": 5131,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5121,
									"end": 5122,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5118,
									"end": 5132,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 5110,
									"end": 5318,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5110,
									"end": 5318,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "235"
								},
								{
									"begin": 5110,
									"end": 5318,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5203,
									"end": 5212,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5198,
									"end": 5201,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 5194,
									"end": 5213,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5188,
									"end": 5214,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 5180,
									"end": 5186,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5173,
									"end": 5215,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 5254,
									"end": 5255,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 5246,
									"end": 5252,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5242,
									"end": 5256,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5232,
									"end": 5256,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5232,
									"end": 5256,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5301,
									"end": 5303,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 5290,
									"end": 5299,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 5286,
									"end": 5304,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5273,
									"end": 5304,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 5273,
									"end": 5304,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5147,
									"end": 5151,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 5144,
									"end": 5145,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5140,
									"end": 5152,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5135,
									"end": 5152,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5135,
									"end": 5152,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5110,
									"end": 5318,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "233"
								},
								{
									"begin": 5110,
									"end": 5318,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5110,
									"end": 5318,
									"name": "tag",
									"source": 13,
									"value": "235"
								},
								{
									"begin": 5110,
									"end": 5318,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5346,
									"end": 5352,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 5337,
									"end": 5344,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5334,
									"end": 5353,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 5331,
									"end": 5510,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5331,
									"end": 5510,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "236"
								},
								{
									"begin": 5331,
									"end": 5510,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5404,
									"end": 5413,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5399,
									"end": 5402,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 5395,
									"end": 5414,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5389,
									"end": 5415,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 5447,
									"end": 5495,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "237"
								},
								{
									"begin": 5489,
									"end": 5493,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 5481,
									"end": 5487,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 5477,
									"end": 5494,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 5466,
									"end": 5475,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5447,
									"end": 5495,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "147"
								},
								{
									"begin": 5447,
									"end": 5495,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5447,
									"end": 5495,
									"name": "tag",
									"source": 13,
									"value": "237"
								},
								{
									"begin": 5447,
									"end": 5495,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5439,
									"end": 5445,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5432,
									"end": 5496,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 5354,
									"end": 5510,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5331,
									"end": 5510,
									"name": "tag",
									"source": 13,
									"value": "236"
								},
								{
									"begin": 5331,
									"end": 5510,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5556,
									"end": 5557,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 5552,
									"end": 5553,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 5544,
									"end": 5550,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 5540,
									"end": 5554,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 5536,
									"end": 5558,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5530,
									"end": 5534,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 5523,
									"end": 5559,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 4958,
									"end": 5569,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4958,
									"end": 5569,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4958,
									"end": 5569,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4921,
									"end": 5808,
									"name": "tag",
									"source": 13,
									"value": "228"
								},
								{
									"begin": 4921,
									"end": 5808,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4921,
									"end": 5808,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4511,
									"end": 5814,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4511,
									"end": 5814,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4511,
									"end": 5814,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4419,
									"end": 5814,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4419,
									"end": 5814,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4419,
									"end": 5814,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5820,
									"end": 6000,
									"name": "tag",
									"source": 13,
									"value": "149"
								},
								{
									"begin": 5820,
									"end": 6000,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5868,
									"end": 5945,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5865,
									"end": 5866,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5858,
									"end": 5946,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 5965,
									"end": 5969,
									"name": "PUSH",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 5962,
									"end": 5963,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 5955,
									"end": 5970,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 5989,
									"end": 5993,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 5986,
									"end": 5987,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5979,
									"end": 5994,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "tag",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6046,
									"end": 6049,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6065,
									"end": 6085,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "240"
								},
								{
									"begin": 6083,
									"end": 6084,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6065,
									"end": 6085,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "137"
								},
								{
									"begin": 6065,
									"end": 6085,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6065,
									"end": 6085,
									"name": "tag",
									"source": 13,
									"value": "240"
								},
								{
									"begin": 6065,
									"end": 6085,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6060,
									"end": 6085,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 6060,
									"end": 6085,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6099,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "241"
								},
								{
									"begin": 6117,
									"end": 6118,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 6099,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "137"
								},
								{
									"begin": 6099,
									"end": 6119,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6099,
									"end": 6119,
									"name": "tag",
									"source": 13,
									"value": "241"
								},
								{
									"begin": 6099,
									"end": 6119,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6094,
									"end": 6119,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 6094,
									"end": 6119,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6142,
									"end": 6143,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6139,
									"end": 6140,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6135,
									"end": 6144,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6128,
									"end": 6144,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6128,
									"end": 6144,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6163,
									"end": 6166,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 6160,
									"end": 6161,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6157,
									"end": 6167,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "242"
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 6170,
									"end": 6188,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "243"
								},
								{
									"begin": 6170,
									"end": 6188,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "149"
								},
								{
									"begin": 6170,
									"end": 6188,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6170,
									"end": 6188,
									"name": "tag",
									"source": 13,
									"value": "243"
								},
								{
									"begin": 6170,
									"end": 6188,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "tag",
									"source": 13,
									"value": "242"
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6006,
									"end": 6197,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6203,
									"end": 6321,
									"name": "tag",
									"source": 13,
									"value": "150"
								},
								{
									"begin": 6203,
									"end": 6321,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6290,
									"end": 6314,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "245"
								},
								{
									"begin": 6308,
									"end": 6313,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6290,
									"end": 6314,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "137"
								},
								{
									"begin": 6290,
									"end": 6314,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6290,
									"end": 6314,
									"name": "tag",
									"source": 13,
									"value": "245"
								},
								{
									"begin": 6290,
									"end": 6314,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6285,
									"end": 6288,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6278,
									"end": 6315,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 6203,
									"end": 6321,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6203,
									"end": 6321,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6203,
									"end": 6321,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6327,
									"end": 6659,
									"name": "tag",
									"source": 13,
									"value": "66"
								},
								{
									"begin": 6327,
									"end": 6659,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6448,
									"end": 6452,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6486,
									"end": 6488,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 6475,
									"end": 6484,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6471,
									"end": 6489,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6463,
									"end": 6489,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6463,
									"end": 6489,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6499,
									"end": 6570,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "247"
								},
								{
									"begin": 6567,
									"end": 6568,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6556,
									"end": 6565,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 6552,
									"end": 6569,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6543,
									"end": 6549,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 6499,
									"end": 6570,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "150"
								},
								{
									"begin": 6499,
									"end": 6570,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6499,
									"end": 6570,
									"name": "tag",
									"source": 13,
									"value": "247"
								},
								{
									"begin": 6499,
									"end": 6570,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6580,
									"end": 6652,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "248"
								},
								{
									"begin": 6648,
									"end": 6650,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 6637,
									"end": 6646,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 6633,
									"end": 6651,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6624,
									"end": 6630,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 6580,
									"end": 6652,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "150"
								},
								{
									"begin": 6580,
									"end": 6652,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6580,
									"end": 6652,
									"name": "tag",
									"source": 13,
									"value": "248"
								},
								{
									"begin": 6580,
									"end": 6652,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6327,
									"end": 6659,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 6327,
									"end": 6659,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 6327,
									"end": 6659,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6327,
									"end": 6659,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6327,
									"end": 6659,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6327,
									"end": 6659,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6665,
									"end": 7218,
									"name": "tag",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 6665,
									"end": 7218,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6842,
									"end": 6846,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6880,
									"end": 6883,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 6869,
									"end": 6878,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6865,
									"end": 6884,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6857,
									"end": 6884,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6857,
									"end": 6884,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6894,
									"end": 6965,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "250"
								},
								{
									"begin": 6962,
									"end": 6963,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6951,
									"end": 6960,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 6947,
									"end": 6964,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6938,
									"end": 6944,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 6894,
									"end": 6965,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "128"
								},
								{
									"begin": 6894,
									"end": 6965,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6894,
									"end": 6965,
									"name": "tag",
									"source": 13,
									"value": "250"
								},
								{
									"begin": 6894,
									"end": 6965,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6975,
									"end": 7047,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "251"
								},
								{
									"begin": 7043,
									"end": 7045,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 7032,
									"end": 7041,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 7028,
									"end": 7046,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7019,
									"end": 7025,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 6975,
									"end": 7047,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "150"
								},
								{
									"begin": 6975,
									"end": 7047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6975,
									"end": 7047,
									"name": "tag",
									"source": 13,
									"value": "251"
								},
								{
									"begin": 6975,
									"end": 7047,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7057,
									"end": 7129,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "252"
								},
								{
									"begin": 7125,
									"end": 7127,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 7114,
									"end": 7123,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 7110,
									"end": 7128,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7101,
									"end": 7107,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 7057,
									"end": 7129,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "150"
								},
								{
									"begin": 7057,
									"end": 7129,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7057,
									"end": 7129,
									"name": "tag",
									"source": 13,
									"value": "252"
								},
								{
									"begin": 7057,
									"end": 7129,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7139,
									"end": 7211,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "253"
								},
								{
									"begin": 7207,
									"end": 7209,
									"name": "PUSH",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 7196,
									"end": 7205,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 7192,
									"end": 7210,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7183,
									"end": 7189,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 7139,
									"end": 7211,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "150"
								},
								{
									"begin": 7139,
									"end": 7211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7139,
									"end": 7211,
									"name": "tag",
									"source": 13,
									"value": "253"
								},
								{
									"begin": 7139,
									"end": 7211,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6665,
									"end": 7218,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 6665,
									"end": 7218,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 6665,
									"end": 7218,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6665,
									"end": 7218,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6665,
									"end": 7218,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6665,
									"end": 7218,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6665,
									"end": 7218,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6665,
									"end": 7218,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7224,
									"end": 7457,
									"name": "tag",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 7224,
									"end": 7457,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7263,
									"end": 7266,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7286,
									"end": 7310,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "255"
								},
								{
									"begin": 7304,
									"end": 7309,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7286,
									"end": 7310,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "137"
								},
								{
									"begin": 7286,
									"end": 7310,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7286,
									"end": 7310,
									"name": "tag",
									"source": 13,
									"value": "255"
								},
								{
									"begin": 7286,
									"end": 7310,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7277,
									"end": 7310,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7277,
									"end": 7310,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7332,
									"end": 7398,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7325,
									"end": 7330,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7322,
									"end": 7399,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 7319,
									"end": 7422,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "256"
								},
								{
									"begin": 7319,
									"end": 7422,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 7402,
									"end": 7420,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "257"
								},
								{
									"begin": 7402,
									"end": 7420,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "149"
								},
								{
									"begin": 7402,
									"end": 7420,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7402,
									"end": 7420,
									"name": "tag",
									"source": 13,
									"value": "257"
								},
								{
									"begin": 7402,
									"end": 7420,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7319,
									"end": 7422,
									"name": "tag",
									"source": 13,
									"value": "256"
								},
								{
									"begin": 7319,
									"end": 7422,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7449,
									"end": 7450,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 7442,
									"end": 7447,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7438,
									"end": 7451,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7431,
									"end": 7451,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7431,
									"end": 7451,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7224,
									"end": 7457,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7224,
									"end": 7457,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7224,
									"end": 7457,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7224,
									"end": 7457,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7463,
									"end": 7577,
									"name": "tag",
									"source": 13,
									"value": "151"
								},
								{
									"begin": 7463,
									"end": 7577,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7530,
									"end": 7536,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7564,
									"end": 7569,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 7558,
									"end": 7570,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 7548,
									"end": 7570,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7548,
									"end": 7570,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7463,
									"end": 7577,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7463,
									"end": 7577,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7463,
									"end": 7577,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7463,
									"end": 7577,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7583,
									"end": 7767,
									"name": "tag",
									"source": 13,
									"value": "152"
								},
								{
									"begin": 7583,
									"end": 7767,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7682,
									"end": 7693,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7716,
									"end": 7722,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7711,
									"end": 7714,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7704,
									"end": 7723,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 7756,
									"end": 7760,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 7751,
									"end": 7754,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7747,
									"end": 7761,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7732,
									"end": 7761,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7732,
									"end": 7761,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7583,
									"end": 7767,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 7583,
									"end": 7767,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7583,
									"end": 7767,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7583,
									"end": 7767,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7583,
									"end": 7767,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7773,
									"end": 7905,
									"name": "tag",
									"source": 13,
									"value": "153"
								},
								{
									"begin": 7773,
									"end": 7905,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7840,
									"end": 7844,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7863,
									"end": 7866,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 7855,
									"end": 7866,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7855,
									"end": 7866,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7893,
									"end": 7897,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 7888,
									"end": 7891,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7884,
									"end": 7898,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7876,
									"end": 7898,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7876,
									"end": 7898,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7773,
									"end": 7905,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7773,
									"end": 7905,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7773,
									"end": 7905,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7773,
									"end": 7905,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7911,
									"end": 8019,
									"name": "tag",
									"source": 13,
									"value": "154"
								},
								{
									"begin": 7911,
									"end": 8019,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7988,
									"end": 8012,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "262"
								},
								{
									"begin": 8006,
									"end": 8011,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 7988,
									"end": 8012,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "137"
								},
								{
									"begin": 7988,
									"end": 8012,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7988,
									"end": 8012,
									"name": "tag",
									"source": 13,
									"value": "262"
								},
								{
									"begin": 7988,
									"end": 8012,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7983,
									"end": 7986,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7976,
									"end": 8013,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 7911,
									"end": 8019,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7911,
									"end": 8019,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7911,
									"end": 8019,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8025,
									"end": 8204,
									"name": "tag",
									"source": 13,
									"value": "155"
								},
								{
									"begin": 8025,
									"end": 8204,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8094,
									"end": 8104,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 8115,
									"end": 8161,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "264"
								},
								{
									"begin": 8157,
									"end": 8160,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 8149,
									"end": 8155,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 8115,
									"end": 8161,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "154"
								},
								{
									"begin": 8115,
									"end": 8161,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8115,
									"end": 8161,
									"name": "tag",
									"source": 13,
									"value": "264"
								},
								{
									"begin": 8115,
									"end": 8161,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8193,
									"end": 8197,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 8188,
									"end": 8191,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 8184,
									"end": 8198,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 8170,
									"end": 8198,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 8170,
									"end": 8198,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8025,
									"end": 8204,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 8025,
									"end": 8204,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 8025,
									"end": 8204,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8025,
									"end": 8204,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8025,
									"end": 8204,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8210,
									"end": 8323,
									"name": "tag",
									"source": 13,
									"value": "156"
								},
								{
									"begin": 8210,
									"end": 8323,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8280,
									"end": 8284,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 8312,
									"end": 8316,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 8307,
									"end": 8310,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8303,
									"end": 8317,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 8295,
									"end": 8317,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 8295,
									"end": 8317,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8210,
									"end": 8323,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 8210,
									"end": 8323,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 8210,
									"end": 8323,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8210,
									"end": 8323,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8359,
									"end": 9091,
									"name": "tag",
									"source": 13,
									"value": "157"
								},
								{
									"begin": 8359,
									"end": 9091,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8478,
									"end": 8481,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 8507,
									"end": 8561,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "267"
								},
								{
									"begin": 8555,
									"end": 8560,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8507,
									"end": 8561,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "151"
								},
								{
									"begin": 8507,
									"end": 8561,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8507,
									"end": 8561,
									"name": "tag",
									"source": 13,
									"value": "267"
								},
								{
									"begin": 8507,
									"end": 8561,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8577,
									"end": 8663,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "268"
								},
								{
									"begin": 8656,
									"end": 8662,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 8651,
									"end": 8654,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 8577,
									"end": 8663,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "152"
								},
								{
									"begin": 8577,
									"end": 8663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8577,
									"end": 8663,
									"name": "tag",
									"source": 13,
									"value": "268"
								},
								{
									"begin": 8577,
									"end": 8663,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8570,
									"end": 8663,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 8570,
									"end": 8663,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8687,
									"end": 8743,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "269"
								},
								{
									"begin": 8737,
									"end": 8742,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 8687,
									"end": 8743,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "153"
								},
								{
									"begin": 8687,
									"end": 8743,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8687,
									"end": 8743,
									"name": "tag",
									"source": 13,
									"value": "269"
								},
								{
									"begin": 8687,
									"end": 8743,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8766,
									"end": 8773,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 8797,
									"end": 8798,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 8782,
									"end": 9066,
									"name": "tag",
									"source": 13,
									"value": "270"
								},
								{
									"begin": 8782,
									"end": 9066,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8807,
									"end": 8813,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 8804,
									"end": 8805,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 8801,
									"end": 8814,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 8782,
									"end": 9066,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 8782,
									"end": 9066,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "272"
								},
								{
									"begin": 8782,
									"end": 9066,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8883,
									"end": 8889,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 8877,
									"end": 8890,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 8910,
									"end": 8973,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "273"
								},
								{
									"begin": 8969,
									"end": 8972,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 8954,
									"end": 8967,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8910,
									"end": 8973,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "155"
								},
								{
									"begin": 8910,
									"end": 8973,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8910,
									"end": 8973,
									"name": "tag",
									"source": 13,
									"value": "273"
								},
								{
									"begin": 8910,
									"end": 8973,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8903,
									"end": 8973,
									"name": "SWAP8",
									"source": 13
								},
								{
									"begin": 8903,
									"end": 8973,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8996,
									"end": 9056,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "274"
								},
								{
									"begin": 9049,
									"end": 9055,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 8996,
									"end": 9056,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "156"
								},
								{
									"begin": 8996,
									"end": 9056,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8996,
									"end": 9056,
									"name": "tag",
									"source": 13,
									"value": "274"
								},
								{
									"begin": 8996,
									"end": 9056,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8986,
									"end": 9056,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 8986,
									"end": 9056,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8842,
									"end": 9066,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8829,
									"end": 8830,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 8826,
									"end": 8827,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 8822,
									"end": 8831,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 8817,
									"end": 8831,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 8817,
									"end": 8831,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8782,
									"end": 9066,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "270"
								},
								{
									"begin": 8782,
									"end": 9066,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8782,
									"end": 9066,
									"name": "tag",
									"source": 13,
									"value": "272"
								},
								{
									"begin": 8782,
									"end": 9066,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8786,
									"end": 8800,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9082,
									"end": 9085,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 9075,
									"end": 9085,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 9075,
									"end": 9085,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8483,
									"end": 9091,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8483,
									"end": 9091,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8483,
									"end": 9091,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8359,
									"end": 9091,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 8359,
									"end": 9091,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 8359,
									"end": 9091,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8359,
									"end": 9091,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8359,
									"end": 9091,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9097,
									"end": 9731,
									"name": "tag",
									"source": 13,
									"value": "87"
								},
								{
									"begin": 9097,
									"end": 9731,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9318,
									"end": 9322,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 9356,
									"end": 9358,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 9345,
									"end": 9354,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9341,
									"end": 9359,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 9333,
									"end": 9359,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 9333,
									"end": 9359,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9405,
									"end": 9414,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 9399,
									"end": 9403,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 9395,
									"end": 9415,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 9391,
									"end": 9392,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 9380,
									"end": 9389,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 9376,
									"end": 9393,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 9369,
									"end": 9416,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 9433,
									"end": 9541,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "276"
								},
								{
									"begin": 9536,
									"end": 9540,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 9527,
									"end": 9533,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 9433,
									"end": 9541,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "157"
								},
								{
									"begin": 9433,
									"end": 9541,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9433,
									"end": 9541,
									"name": "tag",
									"source": 13,
									"value": "276"
								},
								{
									"begin": 9433,
									"end": 9541,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9425,
									"end": 9541,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 9425,
									"end": 9541,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9588,
									"end": 9597,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 9582,
									"end": 9586,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 9578,
									"end": 9598,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 9573,
									"end": 9575,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 9562,
									"end": 9571,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 9558,
									"end": 9576,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 9551,
									"end": 9599,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 9616,
									"end": 9724,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "277"
								},
								{
									"begin": 9719,
									"end": 9723,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 9710,
									"end": 9716,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 9616,
									"end": 9724,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "157"
								},
								{
									"begin": 9616,
									"end": 9724,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9616,
									"end": 9724,
									"name": "tag",
									"source": 13,
									"value": "277"
								},
								{
									"begin": 9616,
									"end": 9724,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9608,
									"end": 9724,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 9608,
									"end": 9724,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9097,
									"end": 9731,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 9097,
									"end": 9731,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 9097,
									"end": 9731,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9097,
									"end": 9731,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9097,
									"end": 9731,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9097,
									"end": 9731,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9737,
									"end": 9835,
									"name": "tag",
									"source": 13,
									"value": "158"
								},
								{
									"begin": 9737,
									"end": 9835,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9788,
									"end": 9794,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 9822,
									"end": 9827,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 9816,
									"end": 9828,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 9806,
									"end": 9828,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 9806,
									"end": 9828,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9737,
									"end": 9835,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 9737,
									"end": 9835,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 9737,
									"end": 9835,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9737,
									"end": 9835,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9841,
									"end": 10009,
									"name": "tag",
									"source": 13,
									"value": "159"
								},
								{
									"begin": 9841,
									"end": 10009,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9924,
									"end": 9935,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 9958,
									"end": 9964,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9953,
									"end": 9956,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9946,
									"end": 9965,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 9998,
									"end": 10002,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 9993,
									"end": 9996,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9989,
									"end": 10003,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 9974,
									"end": 10003,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 9974,
									"end": 10003,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9841,
									"end": 10009,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 9841,
									"end": 10009,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 9841,
									"end": 10009,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9841,
									"end": 10009,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9841,
									"end": 10009,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10015,
									"end": 10261,
									"name": "tag",
									"source": 13,
									"value": "160"
								},
								{
									"begin": 10015,
									"end": 10261,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10096,
									"end": 10097,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 10106,
									"end": 10219,
									"name": "tag",
									"source": 13,
									"value": "281"
								},
								{
									"begin": 10106,
									"end": 10219,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10120,
									"end": 10126,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 10117,
									"end": 10118,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 10114,
									"end": 10127,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 10106,
									"end": 10219,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 10106,
									"end": 10219,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "283"
								},
								{
									"begin": 10106,
									"end": 10219,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 10205,
									"end": 10206,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 10200,
									"end": 10203,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 10196,
									"end": 10207,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 10190,
									"end": 10208,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 10186,
									"end": 10187,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 10181,
									"end": 10184,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 10177,
									"end": 10188,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 10170,
									"end": 10209,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 10142,
									"end": 10144,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 10139,
									"end": 10140,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 10135,
									"end": 10145,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 10130,
									"end": 10145,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 10130,
									"end": 10145,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10106,
									"end": 10219,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "281"
								},
								{
									"begin": 10106,
									"end": 10219,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10106,
									"end": 10219,
									"name": "tag",
									"source": 13,
									"value": "283"
								},
								{
									"begin": 10106,
									"end": 10219,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10253,
									"end": 10254,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 10244,
									"end": 10250,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 10239,
									"end": 10242,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 10235,
									"end": 10251,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 10228,
									"end": 10255,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 10077,
									"end": 10261,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10015,
									"end": 10261,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10015,
									"end": 10261,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10015,
									"end": 10261,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10015,
									"end": 10261,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10267,
									"end": 10369,
									"name": "tag",
									"source": 13,
									"value": "161"
								},
								{
									"begin": 10267,
									"end": 10369,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10308,
									"end": 10314,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 10359,
									"end": 10361,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 10355,
									"end": 10362,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 10350,
									"end": 10352,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 10343,
									"end": 10348,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 10339,
									"end": 10353,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 10335,
									"end": 10363,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 10325,
									"end": 10363,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 10325,
									"end": 10363,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10267,
									"end": 10369,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 10267,
									"end": 10369,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 10267,
									"end": 10369,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10267,
									"end": 10369,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10375,
									"end": 10748,
									"name": "tag",
									"source": 13,
									"value": "162"
								},
								{
									"begin": 10375,
									"end": 10748,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10461,
									"end": 10464,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 10489,
									"end": 10527,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "286"
								},
								{
									"begin": 10521,
									"end": 10526,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 10489,
									"end": 10527,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "158"
								},
								{
									"begin": 10489,
									"end": 10527,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10489,
									"end": 10527,
									"name": "tag",
									"source": 13,
									"value": "286"
								},
								{
									"begin": 10489,
									"end": 10527,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10543,
									"end": 10613,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "287"
								},
								{
									"begin": 10606,
									"end": 10612,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 10601,
									"end": 10604,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 10543,
									"end": 10613,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "159"
								},
								{
									"begin": 10543,
									"end": 10613,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10543,
									"end": 10613,
									"name": "tag",
									"source": 13,
									"value": "287"
								},
								{
									"begin": 10543,
									"end": 10613,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10536,
									"end": 10613,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 10536,
									"end": 10613,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10622,
									"end": 10687,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "288"
								},
								{
									"begin": 10680,
									"end": 10686,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 10675,
									"end": 10678,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 10668,
									"end": 10672,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 10661,
									"end": 10666,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 10657,
									"end": 10673,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 10622,
									"end": 10687,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "160"
								},
								{
									"begin": 10622,
									"end": 10687,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10622,
									"end": 10687,
									"name": "tag",
									"source": 13,
									"value": "288"
								},
								{
									"begin": 10622,
									"end": 10687,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10712,
									"end": 10741,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "289"
								},
								{
									"begin": 10734,
									"end": 10740,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 10712,
									"end": 10741,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "161"
								},
								{
									"begin": 10712,
									"end": 10741,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10712,
									"end": 10741,
									"name": "tag",
									"source": 13,
									"value": "289"
								},
								{
									"begin": 10712,
									"end": 10741,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10707,
									"end": 10710,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 10703,
									"end": 10742,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 10696,
									"end": 10742,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 10696,
									"end": 10742,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10465,
									"end": 10748,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10375,
									"end": 10748,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 10375,
									"end": 10748,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 10375,
									"end": 10748,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10375,
									"end": 10748,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10375,
									"end": 10748,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10754,
									"end": 11505,
									"name": "tag",
									"source": 13,
									"value": "92"
								},
								{
									"begin": 10754,
									"end": 11505,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10977,
									"end": 10981,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 11015,
									"end": 11018,
									"name": "PUSH",
									"source": 13,
									"value": "A0"
								},
								{
									"begin": 11004,
									"end": 11013,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 11000,
									"end": 11019,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 10992,
									"end": 11019,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 10992,
									"end": 11019,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11029,
									"end": 11100,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "291"
								},
								{
									"begin": 11097,
									"end": 11098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 11086,
									"end": 11095,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 11082,
									"end": 11099,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 11073,
									"end": 11079,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 11029,
									"end": 11100,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "128"
								},
								{
									"begin": 11029,
									"end": 11100,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11029,
									"end": 11100,
									"name": "tag",
									"source": 13,
									"value": "291"
								},
								{
									"begin": 11029,
									"end": 11100,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11110,
									"end": 11182,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "292"
								},
								{
									"begin": 11178,
									"end": 11180,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 11167,
									"end": 11176,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 11163,
									"end": 11181,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 11154,
									"end": 11160,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 11110,
									"end": 11182,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "128"
								},
								{
									"begin": 11110,
									"end": 11182,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11110,
									"end": 11182,
									"name": "tag",
									"source": 13,
									"value": "292"
								},
								{
									"begin": 11110,
									"end": 11182,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11192,
									"end": 11264,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "293"
								},
								{
									"begin": 11260,
									"end": 11262,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 11249,
									"end": 11258,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 11245,
									"end": 11263,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 11236,
									"end": 11242,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 11192,
									"end": 11264,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "150"
								},
								{
									"begin": 11192,
									"end": 11264,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11192,
									"end": 11264,
									"name": "tag",
									"source": 13,
									"value": "293"
								},
								{
									"begin": 11192,
									"end": 11264,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11274,
									"end": 11346,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "294"
								},
								{
									"begin": 11342,
									"end": 11344,
									"name": "PUSH",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 11331,
									"end": 11340,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 11327,
									"end": 11345,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 11318,
									"end": 11324,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 11274,
									"end": 11346,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "150"
								},
								{
									"begin": 11274,
									"end": 11346,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11274,
									"end": 11346,
									"name": "tag",
									"source": 13,
									"value": "294"
								},
								{
									"begin": 11274,
									"end": 11346,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11394,
									"end": 11403,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 11388,
									"end": 11392,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 11384,
									"end": 11404,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 11378,
									"end": 11381,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 11367,
									"end": 11376,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 11363,
									"end": 11382,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 11356,
									"end": 11405,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 11422,
									"end": 11498,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "295"
								},
								{
									"begin": 11493,
									"end": 11497,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 11484,
									"end": 11490,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 11422,
									"end": 11498,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "162"
								},
								{
									"begin": 11422,
									"end": 11498,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11422,
									"end": 11498,
									"name": "tag",
									"source": 13,
									"value": "295"
								},
								{
									"begin": 11422,
									"end": 11498,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11414,
									"end": 11498,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 11414,
									"end": 11498,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10754,
									"end": 11505,
									"name": "SWAP7",
									"source": 13
								},
								{
									"begin": 10754,
									"end": 11505,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 10754,
									"end": 11505,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10754,
									"end": 11505,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10754,
									"end": 11505,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10754,
									"end": 11505,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10754,
									"end": 11505,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10754,
									"end": 11505,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10754,
									"end": 11505,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11592,
									"end": 11709,
									"name": "tag",
									"source": 13,
									"value": "164"
								},
								{
									"begin": 11592,
									"end": 11709,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11701,
									"end": 11702,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 11698,
									"end": 11699,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 11691,
									"end": 11703,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 11838,
									"end": 11987,
									"name": "tag",
									"source": 13,
									"value": "166"
								},
								{
									"begin": 11838,
									"end": 11987,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11874,
									"end": 11881,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 11914,
									"end": 11980,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11907,
									"end": 11912,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 11903,
									"end": 11981,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 11892,
									"end": 11981,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 11892,
									"end": 11981,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11838,
									"end": 11987,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 11838,
									"end": 11987,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 11838,
									"end": 11987,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11838,
									"end": 11987,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11993,
									"end": 12113,
									"name": "tag",
									"source": 13,
									"value": "167"
								},
								{
									"begin": 11993,
									"end": 12113,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 12065,
									"end": 12088,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "301"
								},
								{
									"begin": 12082,
									"end": 12087,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 12065,
									"end": 12088,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "166"
								},
								{
									"begin": 12065,
									"end": 12088,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 12065,
									"end": 12088,
									"name": "tag",
									"source": 13,
									"value": "301"
								},
								{
									"begin": 12065,
									"end": 12088,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 12058,
									"end": 12063,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 12055,
									"end": 12089,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 12045,
									"end": 12107,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "302"
								},
								{
									"begin": 12045,
									"end": 12107,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 12103,
									"end": 12104,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 12100,
									"end": 12101,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 12093,
									"end": 12105,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 12045,
									"end": 12107,
									"name": "tag",
									"source": 13,
									"value": "302"
								},
								{
									"begin": 12045,
									"end": 12107,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11993,
									"end": 12113,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11993,
									"end": 12113,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 12119,
									"end": 12260,
									"name": "tag",
									"source": 13,
									"value": "168"
								},
								{
									"begin": 12119,
									"end": 12260,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 12175,
									"end": 12180,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 12206,
									"end": 12212,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 12200,
									"end": 12213,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 12191,
									"end": 12213,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 12191,
									"end": 12213,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 12222,
									"end": 12254,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "304"
								},
								{
									"begin": 12248,
									"end": 12253,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 12222,
									"end": 12254,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "167"
								},
								{
									"begin": 12222,
									"end": 12254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 12222,
									"end": 12254,
									"name": "tag",
									"source": 13,
									"value": "304"
								},
								{
									"begin": 12222,
									"end": 12254,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 12119,
									"end": 12260,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 12119,
									"end": 12260,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 12119,
									"end": 12260,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 12119,
									"end": 12260,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 12119,
									"end": 12260,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 12266,
									"end": 12615,
									"name": "tag",
									"source": 13,
									"value": "95"
								},
								{
									"begin": 12266,
									"end": 12615,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 12335,
									"end": 12341,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 12384,
									"end": 12386,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 12372,
									"end": 12381,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 12363,
									"end": 12370,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 12359,
									"end": 12382,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 12355,
									"end": 12387,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 12352,
									"end": 12471,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 12352,
									"end": 12471,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "306"
								},
								{
									"begin": 12352,
									"end": 12471,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 12390,
									"end": 12469,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "307"
								},
								{
									"begin": 12390,
									"end": 12469,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "164"
								},
								{
									"begin": 12390,
									"end": 12469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 12390,
									"end": 12469,
									"name": "tag",
									"source": 13,
									"value": "307"
								},
								{
									"begin": 12390,
									"end": 12469,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 12352,
									"end": 12471,
									"name": "tag",
									"source": 13,
									"value": "306"
								},
								{
									"begin": 12352,
									"end": 12471,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 12510,
									"end": 12511,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 12535,
									"end": 12598,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "308"
								},
								{
									"begin": 12590,
									"end": 12597,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 12581,
									"end": 12587,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 12570,
									"end": 12579,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 12566,
									"end": 12588,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 12535,
									"end": 12598,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "168"
								},
								{
									"begin": 12535,
									"end": 12598,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 12535,
									"end": 12598,
									"name": "tag",
									"source": 13,
									"value": "308"
								},
								{
									"begin": 12535,
									"end": 12598,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 12525,
									"end": 12598,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 12525,
									"end": 12598,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 12481,
									"end": 12608,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 12266,
									"end": 12615,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 12266,
									"end": 12615,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 12266,
									"end": 12615,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 12266,
									"end": 12615,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 12266,
									"end": 12615,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 12621,
									"end": 13674,
									"name": "tag",
									"source": 13,
									"value": "111"
								},
								{
									"begin": 12621,
									"end": 13674,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 12944,
									"end": 12948,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 12982,
									"end": 12985,
									"name": "PUSH",
									"source": 13,
									"value": "A0"
								},
								{
									"begin": 12971,
									"end": 12980,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 12967,
									"end": 12986,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 12959,
									"end": 12986,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 12959,
									"end": 12986,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 12996,
									"end": 13067,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "310"
								},
								{
									"begin": 13064,
									"end": 13065,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 13053,
									"end": 13062,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 13049,
									"end": 13066,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 13040,
									"end": 13046,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 12996,
									"end": 13067,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "128"
								},
								{
									"begin": 12996,
									"end": 13067,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 12996,
									"end": 13067,
									"name": "tag",
									"source": 13,
									"value": "310"
								},
								{
									"begin": 12996,
									"end": 13067,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 13077,
									"end": 13149,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "311"
								},
								{
									"begin": 13145,
									"end": 13147,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 13134,
									"end": 13143,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 13130,
									"end": 13148,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 13121,
									"end": 13127,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 13077,
									"end": 13149,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "128"
								},
								{
									"begin": 13077,
									"end": 13149,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 13077,
									"end": 13149,
									"name": "tag",
									"source": 13,
									"value": "311"
								},
								{
									"begin": 13077,
									"end": 13149,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 13196,
									"end": 13205,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 13190,
									"end": 13194,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 13186,
									"end": 13206,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 13181,
									"end": 13183,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 13170,
									"end": 13179,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 13166,
									"end": 13184,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 13159,
									"end": 13207,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 13224,
									"end": 13332,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "312"
								},
								{
									"begin": 13327,
									"end": 13331,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 13318,
									"end": 13324,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 13224,
									"end": 13332,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "157"
								},
								{
									"begin": 13224,
									"end": 13332,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 13224,
									"end": 13332,
									"name": "tag",
									"source": 13,
									"value": "312"
								},
								{
									"begin": 13224,
									"end": 13332,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 13216,
									"end": 13332,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 13216,
									"end": 13332,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 13379,
									"end": 13388,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 13373,
									"end": 13377,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 13369,
									"end": 13389,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 13364,
									"end": 13366,
									"name": "PUSH",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 13353,
									"end": 13362,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 13349,
									"end": 13367,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 13342,
									"end": 13390,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 13407,
									"end": 13515,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "313"
								},
								{
									"begin": 13510,
									"end": 13514,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 13501,
									"end": 13507,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 13407,
									"end": 13515,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "157"
								},
								{
									"begin": 13407,
									"end": 13515,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 13407,
									"end": 13515,
									"name": "tag",
									"source": 13,
									"value": "313"
								},
								{
									"begin": 13407,
									"end": 13515,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 13399,
									"end": 13515,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 13399,
									"end": 13515,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 13563,
									"end": 13572,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 13557,
									"end": 13561,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 13553,
									"end": 13573,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 13547,
									"end": 13550,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 13536,
									"end": 13545,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 13532,
									"end": 13551,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 13525,
									"end": 13574,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 13591,
									"end": 13667,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "314"
								},
								{
									"begin": 13662,
									"end": 13666,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 13653,
									"end": 13659,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 13591,
									"end": 13667,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "162"
								},
								{
									"begin": 13591,
									"end": 13667,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 13591,
									"end": 13667,
									"name": "tag",
									"source": 13,
									"value": "314"
								},
								{
									"begin": 13591,
									"end": 13667,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 13583,
									"end": 13667,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 13583,
									"end": 13667,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 12621,
									"end": 13674,
									"name": "SWAP7",
									"source": 13
								},
								{
									"begin": 12621,
									"end": 13674,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 12621,
									"end": 13674,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 12621,
									"end": 13674,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 12621,
									"end": 13674,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 12621,
									"end": 13674,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 12621,
									"end": 13674,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 12621,
									"end": 13674,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 12621,
									"end": 13674,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 171,
									"end": 913,
									"name": "tag",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 171,
									"end": 913,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 171,
									"end": 913,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 171,
									"end": 913,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 171,
									"end": 913,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 171,
									"end": 913,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 171,
									"end": 913,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 171,
									"end": 913,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 171,
									"end": 913,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a7c3e62f98c941e17a4a16cce07e8f0152547b7fc9e5bfc3adb4357100520b5864736f6c63430008150033",
									".code": [
										{
											"begin": 171,
											"end": 913,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 171,
											"end": 913,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 171,
											"end": 913,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 171,
											"end": 913,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 171,
											"end": 913,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 171,
											"end": 913,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 171,
											"end": 913,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 171,
											"end": 913,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 171,
											"end": 913,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 171,
											"end": 913,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "PUSH",
											"source": 12,
											"value": "715018A6"
										},
										{
											"begin": 171,
											"end": 913,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 171,
											"end": 913,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "PUSH",
											"source": 12,
											"value": "A22CB465"
										},
										{
											"begin": 171,
											"end": 913,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 171,
											"end": 913,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "PUSH",
											"source": 12,
											"value": "A22CB465"
										},
										{
											"begin": 171,
											"end": 913,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 171,
											"end": 913,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "PUSH",
											"source": 12,
											"value": "E985E9C5"
										},
										{
											"begin": 171,
											"end": 913,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 171,
											"end": 913,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "PUSH",
											"source": 12,
											"value": "F242432A"
										},
										{
											"begin": 171,
											"end": 913,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 171,
											"end": 913,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "PUSH",
											"source": 12,
											"value": "F2FDE38B"
										},
										{
											"begin": 171,
											"end": 913,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 171,
											"end": 913,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 171,
											"end": 913,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "tag",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 171,
											"end": 913,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "PUSH",
											"source": 12,
											"value": "715018A6"
										},
										{
											"begin": 171,
											"end": 913,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 171,
											"end": 913,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "PUSH",
											"source": 12,
											"value": "8225B247"
										},
										{
											"begin": 171,
											"end": 913,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 171,
											"end": 913,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "PUSH",
											"source": 12,
											"value": "8DA5CB5B"
										},
										{
											"begin": 171,
											"end": 913,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 171,
											"end": 913,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 171,
											"end": 913,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "tag",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 171,
											"end": 913,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "PUSH",
											"source": 12,
											"value": "20CBF5F9"
										},
										{
											"begin": 171,
											"end": 913,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 171,
											"end": 913,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "PUSH",
											"source": 12,
											"value": "20CBF5F9"
										},
										{
											"begin": 171,
											"end": 913,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 171,
											"end": 913,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "PUSH",
											"source": 12,
											"value": "2693EBF2"
										},
										{
											"begin": 171,
											"end": 913,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 171,
											"end": 913,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "PUSH",
											"source": 12,
											"value": "2EB2C2D6"
										},
										{
											"begin": 171,
											"end": 913,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 171,
											"end": 913,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "PUSH",
											"source": 12,
											"value": "4E1273F4"
										},
										{
											"begin": 171,
											"end": 913,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 171,
											"end": 913,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 171,
											"end": 913,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "tag",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 171,
											"end": 913,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "PUSH",
											"source": 12,
											"value": "FDD58E"
										},
										{
											"begin": 171,
											"end": 913,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 171,
											"end": 913,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "PUSH",
											"source": 12,
											"value": "1FFC9A7"
										},
										{
											"begin": 171,
											"end": 913,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 171,
											"end": 913,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "PUSH",
											"source": 12,
											"value": "E89341C"
										},
										{
											"begin": 171,
											"end": 913,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 171,
											"end": 913,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 171,
											"end": 913,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 171,
											"end": 913,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 171,
											"end": 913,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 498,
											"end": 662,
											"name": "tag",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 498,
											"end": 662,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 498,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 498,
											"end": 662,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 498,
											"end": 662,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 498,
											"end": 662,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 498,
											"end": 662,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 498,
											"end": 662,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 498,
											"end": 662,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 498,
											"end": 662,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 498,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 498,
											"end": 662,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 498,
											"end": 662,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 498,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 498,
											"end": 662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 498,
											"end": 662,
											"name": "tag",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 498,
											"end": 662,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 498,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 498,
											"end": 662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 498,
											"end": 662,
											"name": "tag",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 498,
											"end": 662,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 498,
											"end": 662,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 254,
											"end": 300,
											"name": "tag",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 254,
											"end": 300,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 254,
											"end": 300,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 254,
											"end": 300,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 254,
											"end": 300,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 254,
											"end": 300,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 254,
											"end": 300,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 254,
											"end": 300,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 254,
											"end": 300,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 254,
											"end": 300,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 254,
											"end": 300,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 254,
											"end": 300,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 254,
											"end": 300,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 254,
											"end": 300,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 254,
											"end": 300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 254,
											"end": 300,
											"name": "tag",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 254,
											"end": 300,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 254,
											"end": 300,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 254,
											"end": 300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 254,
											"end": 300,
											"name": "tag",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 254,
											"end": 300,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 254,
											"end": 300,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 254,
											"end": 300,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 254,
											"end": 300,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 254,
											"end": 300,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 254,
											"end": 300,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 254,
											"end": 300,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 254,
											"end": 300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 254,
											"end": 300,
											"name": "tag",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 254,
											"end": 300,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 254,
											"end": 300,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 254,
											"end": 300,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 254,
											"end": 300,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 254,
											"end": 300,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 254,
											"end": 300,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 254,
											"end": 300,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 254,
											"end": 300,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 4014,
											"end": 4443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4014,
											"end": 4443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 668,
											"end": 911,
											"name": "tag",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 668,
											"end": 911,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 668,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 668,
											"end": 911,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 668,
											"end": 911,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 668,
											"end": 911,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 668,
											"end": 911,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 668,
											"end": 911,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 668,
											"end": 911,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 668,
											"end": 911,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 668,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 668,
											"end": 911,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 668,
											"end": 911,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 668,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 668,
											"end": 911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 668,
											"end": 911,
											"name": "tag",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 668,
											"end": 911,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 668,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 668,
											"end": 911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 668,
											"end": 911,
											"name": "tag",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 668,
											"end": 911,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 668,
											"end": 911,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3156,
											"end": 3300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3156,
											"end": 3300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3591,
											"end": 3942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3591,
											"end": 3942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2324,
											"end": 2331,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2359,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2360,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2364,
											"end": 2371,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2372,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1486,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 1558,
											"name": "PUSH",
											"source": 2,
											"value": "D9B67A2600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1528,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1589,
											"end": 1626,
											"name": "PUSH",
											"source": 2,
											"value": "E89341C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1574,
											"end": 1585,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1666,
											"end": 1677,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1642,
											"end": 1678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1678,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1642,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1678,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1678,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2176,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2169,
											"end": 2180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2169,
											"end": 2180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 498,
											"end": 662,
											"name": "tag",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 498,
											"end": 662,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 577,
											"end": 615,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 583,
											"end": 593,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 595,
											"end": 602,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 604,
											"end": 610,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 577,
											"end": 615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 577,
											"end": 615,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 577,
											"end": 615,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 577,
											"end": 615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 577,
											"end": 615,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 577,
											"end": 615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 577,
											"end": 615,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 577,
											"end": 615,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 577,
											"end": 615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 577,
											"end": 615,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 577,
											"end": 615,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 577,
											"end": 615,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 577,
											"end": 582,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 577,
											"end": 615,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 577,
											"end": 615,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 577,
											"end": 615,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 649,
											"end": 655,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 625,
											"end": 636,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 625,
											"end": 645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 637,
											"end": 644,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 625,
											"end": 645,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 625,
											"end": 645,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 625,
											"end": 645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 625,
											"end": 645,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 625,
											"end": 645,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 625,
											"end": 645,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 625,
											"end": 645,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 625,
											"end": 645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 625,
											"end": 645,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 625,
											"end": 645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 625,
											"end": 645,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 625,
											"end": 645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 625,
											"end": 655,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 625,
											"end": 655,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 625,
											"end": 655,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 625,
											"end": 655,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 625,
											"end": 655,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 625,
											"end": 655,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 625,
											"end": 655,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 625,
											"end": 655,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 625,
											"end": 655,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 625,
											"end": 655,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 625,
											"end": 655,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 625,
											"end": 655,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 625,
											"end": 655,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 625,
											"end": 655,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 625,
											"end": 655,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 625,
											"end": 655,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 625,
											"end": 655,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 498,
											"end": 662,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 498,
											"end": 662,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 498,
											"end": 662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 254,
											"end": 300,
											"name": "tag",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 254,
											"end": 300,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 254,
											"end": 300,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 254,
											"end": 300,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 254,
											"end": 300,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 254,
											"end": 300,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 254,
											"end": 300,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 254,
											"end": 300,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 254,
											"end": 300,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 254,
											"end": 300,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 254,
											"end": 300,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 254,
											"end": 300,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 254,
											"end": 300,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 254,
											"end": 300,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 254,
											"end": 300,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 254,
											"end": 300,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 254,
											"end": 300,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 254,
											"end": 300,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 254,
											"end": 300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4222,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4225,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 4225,
											"end": 4235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 4225,
											"end": 4237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4225,
											"end": 4237,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 4225,
											"end": 4237,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4237,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4237,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4259,
											"end": 4265,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4255,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 4287,
											"end": 4291,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4299,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 4270,
											"end": 4300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4300,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 4270,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4269,
											"end": 4300,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4352,
											"end": 4358,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4360,
											"end": 4364,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 2,
											"value": "E237D92200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 4323,
											"end": 4365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4385,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 4408,
											"end": 4412,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4414,
											"end": 4416,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4418,
											"end": 4421,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4423,
											"end": 4429,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4431,
											"end": 4435,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4385,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4385,
											"end": 4436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4385,
											"end": 4436,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 4385,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4198,
											"end": 4443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2660,
											"end": 2676,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2711,
											"end": 2714,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2711,
											"end": 2721,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2700,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2707,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2721,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2773,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2780,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2782,
											"end": 2790,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2782,
											"end": 2797,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 2,
											"value": "5B05999100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2744,
											"end": 2798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2819,
											"end": 2849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2866,
											"end": 2874,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2866,
											"end": 2881,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2852,
											"end": 2882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2819,
											"end": 2882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2819,
											"end": 2882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2898,
											"end": 2907,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2917,
											"end": 2925,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2917,
											"end": 2932,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2913,
											"end": 2914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2913,
											"end": 2932,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2972,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3010,
											"end": 3011,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3009,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2982,
											"end": 3009,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3037,
											"end": 3038,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3017,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 3014,
											"end": 3036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2972,
											"end": 2981,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2972,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2972,
											"end": 3040,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2972,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2966,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2967,
											"end": 2968,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2953,
											"end": 2969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2934,
											"end": 2937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3081,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3061,
											"end": 3081,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3061,
											"end": 3081,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3061,
											"end": 3081,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 668,
											"end": 911,
											"name": "tag",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 668,
											"end": 911,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 789,
											"end": 795,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 755,
											"end": 785,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 765,
											"end": 775,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 777,
											"end": 784,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 755,
											"end": 764,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 755,
											"end": 785,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 755,
											"end": 785,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 755,
											"end": 785,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 755,
											"end": 795,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 755,
											"end": 795,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 747,
											"end": 820,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 747,
											"end": 820,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 747,
											"end": 820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 747,
											"end": 820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 747,
											"end": 820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 747,
											"end": 820,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 747,
											"end": 820,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 747,
											"end": 820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 747,
											"end": 820,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 747,
											"end": 820,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 747,
											"end": 820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 747,
											"end": 820,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 747,
											"end": 820,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 747,
											"end": 820,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 747,
											"end": 820,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 747,
											"end": 820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 747,
											"end": 820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 747,
											"end": 820,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 747,
											"end": 820,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 747,
											"end": 820,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 747,
											"end": 820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 747,
											"end": 820,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 747,
											"end": 820,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 747,
											"end": 820,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 830,
											"end": 864,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 836,
											"end": 846,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 848,
											"end": 855,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 857,
											"end": 863,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 830,
											"end": 835,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 830,
											"end": 864,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 830,
											"end": 864,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 830,
											"end": 864,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 898,
											"end": 904,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 874,
											"end": 885,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 874,
											"end": 894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 886,
											"end": 893,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 874,
											"end": 894,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 874,
											"end": 894,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 874,
											"end": 894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 874,
											"end": 894,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 874,
											"end": 894,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 874,
											"end": 894,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 874,
											"end": 894,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 874,
											"end": 894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 874,
											"end": 894,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 874,
											"end": 894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 874,
											"end": 894,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 874,
											"end": 894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 874,
											"end": 904,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 874,
											"end": 904,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 874,
											"end": 904,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 874,
											"end": 904,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 874,
											"end": 904,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 874,
											"end": 904,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 874,
											"end": 904,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 874,
											"end": 904,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 874,
											"end": 904,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 874,
											"end": 904,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 874,
											"end": 904,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 874,
											"end": 904,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 874,
											"end": 904,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 874,
											"end": 904,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 874,
											"end": 904,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 874,
											"end": 904,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 874,
											"end": 904,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 668,
											"end": 911,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 668,
											"end": 911,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 668,
											"end": 911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3241,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 3260,
											"end": 3272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 3260,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3260,
											"end": 3272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3260,
											"end": 3272,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 3260,
											"end": 3272,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3282,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3284,
											"end": 3292,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 3241,
											"end": 3293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3241,
											"end": 3293,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 3241,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3457,
											"end": 3461,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3506,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3516,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3714,
											"end": 3728,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3731,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 3731,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3731,
											"end": 3743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3731,
											"end": 3743,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 3731,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3714,
											"end": 3743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3714,
											"end": 3743,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3771,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3761,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3776,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 3793,
											"end": 3797,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3799,
											"end": 3805,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3776,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3776,
											"end": 3806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3776,
											"end": 3806,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 3776,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3775,
											"end": 3806,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3858,
											"end": 3864,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3866,
											"end": 3870,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 2,
											"value": "E237D92200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3829,
											"end": 3871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3891,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 3909,
											"end": 3913,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3915,
											"end": 3917,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3919,
											"end": 3921,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3923,
											"end": 3928,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3930,
											"end": 3934,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3891,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 3891,
											"end": 3935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3891,
											"end": 3935,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 3891,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3704,
											"end": 3942,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 9,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10856,
											"end": 10857,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10842,
											"end": 10844,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10912,
											"end": 10913,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 10881,
											"end": 10915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10956,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10958,
											"end": 10981,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10985,
											"end": 11014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 11004,
											"end": 11006,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11008,
											"end": 11013,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10985,
											"end": 11003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 10985,
											"end": 11014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10985,
											"end": 11014,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 10985,
											"end": 11014,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10935,
											"end": 11014,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10935,
											"end": 11014,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10935,
											"end": 11014,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10935,
											"end": 11014,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11024,
											"end": 11085,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 11059,
											"end": 11060,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11063,
											"end": 11065,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 11067,
											"end": 11070,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11072,
											"end": 11078,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11080,
											"end": 11084,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 11024,
											"end": 11050,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 11024,
											"end": 11085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11024,
											"end": 11085,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 11024,
											"end": 11085,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 11092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 11092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 11092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9222,
											"end": 9223,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9208,
											"end": 9210,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9278,
											"end": 9279,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 9247,
											"end": 9281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9321,
											"end": 9322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9305,
											"end": 9309,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9375,
											"end": 9376,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 2,
											"value": "1A8351400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 9346,
											"end": 9378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9398,
											"end": 9453,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 9425,
											"end": 9429,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9431,
											"end": 9433,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9435,
											"end": 9438,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9440,
											"end": 9446,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9452,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9398,
											"end": 9424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 9398,
											"end": 9453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9398,
											"end": 9453,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 9398,
											"end": 9453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4689,
											"end": 4700,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4777,
											"end": 4781,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4772,
											"end": 4775,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4768,
											"end": 4782,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4765,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4756,
											"end": 4759,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4752,
											"end": 4766,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4742,
											"end": 4784,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4735,
											"end": 4784,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4735,
											"end": 4784,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4603,
											"end": 4800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4290,
											"end": 4301,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4378,
											"end": 4382,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4373,
											"end": 4376,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4369,
											"end": 4383,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4366,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4357,
											"end": 4360,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4353,
											"end": 4367,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4349,
											"end": 4384,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4343,
											"end": 4385,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4336,
											"end": 4385,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4336,
											"end": 4385,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12099,
											"end": 12428,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 12099,
											"end": 12428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12194,
											"end": 12195,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12178,
											"end": 12196,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12178,
											"end": 12196,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12178,
											"end": 12182,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12178,
											"end": 12196,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12178,
											"end": 12196,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12178,
											"end": 12196,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12174,
											"end": 12262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 12174,
											"end": 12262,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12248,
											"end": 12249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "PUSH",
											"source": 2,
											"value": "1A8351400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 12219,
											"end": 12251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12174,
											"end": 12262,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 12174,
											"end": 12262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12272,
											"end": 12292,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12294,
											"end": 12317,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12321,
											"end": 12350,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 12340,
											"end": 12342,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12344,
											"end": 12349,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12321,
											"end": 12339,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 12321,
											"end": 12350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12321,
											"end": 12350,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 12321,
											"end": 12350,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12271,
											"end": 12350,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12271,
											"end": 12350,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12271,
											"end": 12350,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12271,
											"end": 12350,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 12387,
											"end": 12391,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 12401,
											"end": 12402,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12405,
											"end": 12408,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12410,
											"end": 12416,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12386,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 12360,
											"end": 12421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12164,
											"end": 12428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12164,
											"end": 12428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12099,
											"end": 12428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12099,
											"end": 12428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12099,
											"end": 12428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12099,
											"end": 12428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13395,
											"end": 13396,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13375,
											"end": 13383,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13451,
											"end": 13452,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 2,
											"value": "CED3E10000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 13420,
											"end": 13454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13512,
											"end": 13520,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13492,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13493,
											"end": 13498,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13500,
											"end": 13508,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13557,
											"end": 13565,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13550,
											"end": 13555,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 2,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13567,
											"end": 13575,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 13535,
											"end": 13576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13268,
											"end": 13583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8287,
											"end": 8288,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8273,
											"end": 8275,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8344,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 8312,
											"end": 8346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8386,
											"end": 8387,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8370,
											"end": 8374,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8440,
											"end": 8441,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 2,
											"value": "1A8351400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 8411,
											"end": 8443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8484,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8486,
											"end": 8509,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8513,
											"end": 8542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 8532,
											"end": 8534,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8536,
											"end": 8541,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8513,
											"end": 8531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 8513,
											"end": 8542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8513,
											"end": 8542,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 8513,
											"end": 8542,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8552,
											"end": 8607,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 8579,
											"end": 8583,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8585,
											"end": 8587,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8589,
											"end": 8592,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8594,
											"end": 8600,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8602,
											"end": 8606,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8552,
											"end": 8578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 8552,
											"end": 8607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8552,
											"end": 8607,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 8552,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8259,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8259,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16188,
											"end": 16211,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 16213,
											"end": 16236,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16374,
											"end": 16378,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16368,
											"end": 16379,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16358,
											"end": 16379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16358,
											"end": 16379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16444,
											"end": 16445,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 16436,
											"end": 16442,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16429,
											"end": 16446,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16582,
											"end": 16590,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16575,
											"end": 16579,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16567,
											"end": 16573,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16563,
											"end": 16580,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16556,
											"end": 16591,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16704,
											"end": 16708,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16696,
											"end": 16702,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16682,
											"end": 16709,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16682,
											"end": 16709,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16737,
											"end": 16738,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 16729,
											"end": 16735,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16722,
											"end": 16739,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16786,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16771,
											"end": 16775,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16763,
											"end": 16769,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16759,
											"end": 16776,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16752,
											"end": 16787,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16907,
											"end": 16911,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16899,
											"end": 16905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16895,
											"end": 16912,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16889,
											"end": 16893,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16882,
											"end": 16913,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16080,
											"end": 16929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 7213,
											"end": 7217,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7219,
											"end": 7221,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7223,
											"end": 7226,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7234,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 7205,
											"end": 7235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7235,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 7205,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7263,
											"end": 7264,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7249,
											"end": 7251,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7281,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7300,
											"end": 7312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 7300,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 7300,
											"end": 7312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7300,
											"end": 7312,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 7300,
											"end": 7312,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7281,
											"end": 7312,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7281,
											"end": 7312,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7344,
											"end": 7345,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7330,
											"end": 7333,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7330,
											"end": 7340,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7330,
											"end": 7345,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7365,
											"end": 7375,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 7401,
											"end": 7402,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7378,
											"end": 7381,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7378,
											"end": 7400,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 7378,
											"end": 7400,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7378,
											"end": 7403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7365,
											"end": 7403,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7365,
											"end": 7403,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7421,
											"end": 7434,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 7463,
											"end": 7464,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7437,
											"end": 7443,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7437,
											"end": 7462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 7437,
											"end": 7462,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7437,
											"end": 7465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "tag",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7421,
											"end": 7465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7421,
											"end": 7465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 7514,
											"end": 7522,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7528,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 7530,
											"end": 7532,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 7534,
											"end": 7536,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7538,
											"end": 7543,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7549,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 7483,
											"end": 7513,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 7483,
											"end": 7550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7347,
											"end": 7565,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7347,
											"end": 7565,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7589,
											"end": 7663,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 7625,
											"end": 7633,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7635,
											"end": 7639,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7641,
											"end": 7643,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7645,
											"end": 7648,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7650,
											"end": 7656,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7658,
											"end": 7662,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7589,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 7589,
											"end": 7663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7589,
											"end": 7663,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 7589,
											"end": 7663,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7267,
											"end": 7688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7004,
											"end": 7694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5279,
											"end": 5285,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5279,
											"end": 5292,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5268,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5275,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5292,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5344,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5353,
											"end": 5359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5353,
											"end": 5366,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 2,
											"value": "5B05999100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 5315,
											"end": 5367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5388,
											"end": 5404,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 5407,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 5407,
											"end": 5419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5388,
											"end": 5419,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5388,
											"end": 5419,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5435,
											"end": 5444,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5454,
											"end": 5457,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5454,
											"end": 5464,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5450,
											"end": 5451,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5450,
											"end": 5464,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5495,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 5521,
											"end": 5522,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5520,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 5498,
											"end": 5520,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5523,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5550,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 5579,
											"end": 5580,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5559,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 5553,
											"end": 5578,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5581,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5581,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5616,
											"end": 5617,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5600,
											"end": 5604,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5638,
											"end": 5657,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5670,
											"end": 5672,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5674,
											"end": 5678,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5638,
											"end": 5679,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5638,
											"end": 5679,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5715,
											"end": 5720,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5701,
											"end": 5712,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5701,
											"end": 5720,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5778,
											"end": 5782,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5784,
											"end": 5795,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5797,
											"end": 5802,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5804,
											"end": 5806,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 2,
											"value": "3DEE4C500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 5751,
											"end": 5807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5978,
											"end": 5983,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5964,
											"end": 5975,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5964,
											"end": 5983,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5951,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5952,
											"end": 5954,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5956,
											"end": 5960,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 6016,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6048,
											"end": 6049,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6036,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6091,
											"end": 6096,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6079,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6080,
											"end": 6082,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6084,
											"end": 6086,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 6070,
											"end": 6096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5471,
											"end": 6121,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5471,
											"end": 6121,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 5466,
											"end": 5469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6149,
											"end": 6150,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6135,
											"end": 6138,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6135,
											"end": 6145,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6135,
											"end": 6150,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6166,
											"end": 6176,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 6202,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6182,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6179,
											"end": 6201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 6179,
											"end": 6201,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6179,
											"end": 6204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6166,
											"end": 6204,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6166,
											"end": 6204,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6218,
											"end": 6231,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 6260,
											"end": 6261,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6234,
											"end": 6240,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6234,
											"end": 6259,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 6234,
											"end": 6259,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6234,
											"end": 6262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6218,
											"end": 6262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6218,
											"end": 6262,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6314,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6306,
											"end": 6310,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6296,
											"end": 6304,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 6316,
											"end": 6318,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6320,
											"end": 6325,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 6281,
											"end": 6326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 6152,
											"end": 6337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6152,
											"end": 6337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6392,
											"end": 6394,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6390,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6384,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 2,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 6396,
											"end": 6399,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6401,
											"end": 6407,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 6362,
											"end": 6408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5251,
											"end": 6425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5144,
											"end": 6425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13984,
											"end": 13985,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13967,
											"end": 13969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 13967,
											"end": 13985,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14022,
											"end": 14024,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 14044,
											"end": 14052,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14054,
											"end": 14058,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14060,
											"end": 14062,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14064,
											"end": 14069,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14071,
											"end": 14075,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 14005,
											"end": 14076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 14005,
											"end": 14076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "tag",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14377,
											"end": 14378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14360,
											"end": 14366,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14360,
											"end": 14373,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14360,
											"end": 14378,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14487,
											"end": 14489,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 14464,
											"end": 14490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14657,
											"end": 14663,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14651,
											"end": 14664,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14642,
											"end": 14648,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14638,
											"end": 14640,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14634,
											"end": 14649,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14627,
											"end": 14665,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14137,
											"end": 14180,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 14137,
											"end": 14180,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 14137,
											"end": 14180,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14125,
											"end": 14133,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14273,
											"end": 14275,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 14250,
											"end": 14276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14077,
											"end": 14309,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15171,
											"end": 15172,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15154,
											"end": 15156,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15154,
											"end": 15168,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15154,
											"end": 15168,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15154,
											"end": 15168,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 15154,
											"end": 15172,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15209,
											"end": 15211,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15235,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15192,
											"end": 15235,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15235,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 15236,
											"end": 15244,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 15246,
											"end": 15250,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 15252,
											"end": 15255,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 15257,
											"end": 15263,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 15265,
											"end": 15269,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 15192,
											"end": 15270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 15192,
											"end": 15270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "tag",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15606,
											"end": 15607,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15589,
											"end": 15595,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15589,
											"end": 15602,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15589,
											"end": 15607,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15585,
											"end": 15934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 15585,
											"end": 15934,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15716,
											"end": 15718,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 15693,
											"end": 15719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "tag",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 15585,
											"end": 15934,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 15585,
											"end": 15934,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15886,
											"end": 15892,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15880,
											"end": 15893,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15871,
											"end": 15877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15867,
											"end": 15869,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15863,
											"end": 15878,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15856,
											"end": 15894,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "tag",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15361,
											"end": 15409,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 15361,
											"end": 15409,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 15361,
											"end": 15409,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15349,
											"end": 15357,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15345,
											"end": 15524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 15345,
											"end": 15524,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15502,
											"end": 15504,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 15479,
											"end": 15505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "tag",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 15345,
											"end": 15524,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 15345,
											"end": 15524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15271,
											"end": 15538,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14923,
											"end": 15964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 13,
											"value": "284"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 13,
											"value": "289"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "289"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "tag",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 1782,
											"end": 1787,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 1764,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "tag",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1759,
											"end": 1762,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1752,
											"end": 1789,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1677,
											"end": 1795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "tag",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1894,
											"end": 1898,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1934,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1930,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1917,
											"end": 1935,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 2013,
											"end": 2014,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2011,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 1945,
											"end": 2016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "tag",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 2023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "tag",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2171,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2098,
											"end": 2103,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2094,
											"end": 2172,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2083,
											"end": 2172,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2083,
											"end": 2172,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2029,
											"end": 2178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "tag",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 2273,
											"end": 2278,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 2256,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "tag",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2294,
											"end": 2295,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2291,
											"end": 2292,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "tag",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2184,
											"end": 2304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "tag",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2355,
											"end": 2360,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2380,
											"end": 2400,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 2435,
											"end": 2440,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 2409,
											"end": 2441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "tag",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2310,
											"end": 2447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "tag",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2562,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2548,
											"end": 2557,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2539,
											"end": 2546,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2535,
											"end": 2558,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2531,
											"end": 2563,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 2566,
											"end": 2645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "tag",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "tag",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2686,
											"end": 2687,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 2755,
											"end": 2762,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2746,
											"end": 2752,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2735,
											"end": 2744,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2731,
											"end": 2753,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 2711,
											"end": 2763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "tag",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2701,
											"end": 2763,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2701,
											"end": 2763,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2657,
											"end": 2773,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2453,
											"end": 2780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "tag",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2820,
											"end": 2827,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2863,
											"end": 2868,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2856,
											"end": 2869,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2838,
											"end": 2870,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2838,
											"end": 2870,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2786,
											"end": 2876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "tag",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 2978,
											"end": 2983,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 2963,
											"end": 2984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "tag",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2958,
											"end": 2961,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2951,
											"end": 2985,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2882,
											"end": 2991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "tag",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3122,
											"end": 3124,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3111,
											"end": 3120,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3107,
											"end": 3125,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3099,
											"end": 3125,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3099,
											"end": 3125,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 3197,
											"end": 3198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3186,
											"end": 3195,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3182,
											"end": 3199,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3173,
											"end": 3179,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 3135,
											"end": 3200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "tag",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2997,
											"end": 3207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "tag",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3272,
											"end": 3278,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3321,
											"end": 3323,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3309,
											"end": 3318,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3300,
											"end": 3307,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3296,
											"end": 3319,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3292,
											"end": 3324,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 3327,
											"end": 3406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "tag",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "tag",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3447,
											"end": 3448,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 3517,
											"end": 3524,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3508,
											"end": 3514,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3497,
											"end": 3506,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3493,
											"end": 3515,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 3472,
											"end": 3525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "tag",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3213,
											"end": 3542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "tag",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3600,
											"end": 3606,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3634,
											"end": 3639,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3628,
											"end": 3640,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3618,
											"end": 3640,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3618,
											"end": 3640,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3548,
											"end": 3647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "tag",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3737,
											"end": 3748,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3777,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3766,
											"end": 3769,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3759,
											"end": 3778,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3811,
											"end": 3815,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3806,
											"end": 3809,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3802,
											"end": 3816,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3787,
											"end": 3816,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3787,
											"end": 3816,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3653,
											"end": 3822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3828,
											"end": 4074,
											"name": "tag",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 3828,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3909,
											"end": 3910,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "tag",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3933,
											"end": 3939,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3930,
											"end": 3931,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3927,
											"end": 3940,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4018,
											"end": 4019,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4013,
											"end": 4016,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4009,
											"end": 4020,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4003,
											"end": 4021,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3999,
											"end": 4000,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3994,
											"end": 3997,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3990,
											"end": 4001,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3983,
											"end": 4022,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3955,
											"end": 3957,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3953,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3948,
											"end": 3958,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3943,
											"end": 3958,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3943,
											"end": 3958,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "tag",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4057,
											"end": 4063,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4052,
											"end": 4055,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4064,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4041,
											"end": 4068,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3890,
											"end": 4074,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3828,
											"end": 4074,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3828,
											"end": 4074,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3828,
											"end": 4074,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3828,
											"end": 4074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4182,
											"name": "tag",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 4080,
											"end": 4182,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4121,
											"end": 4127,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4172,
											"end": 4174,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4168,
											"end": 4175,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 4163,
											"end": 4165,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4156,
											"end": 4161,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4152,
											"end": 4166,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4148,
											"end": 4176,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4138,
											"end": 4176,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4138,
											"end": 4176,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4182,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4182,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4182,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4188,
											"end": 4565,
											"name": "tag",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 4188,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4276,
											"end": 4279,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4304,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 4337,
											"end": 4342,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4304,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 4304,
											"end": 4343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4304,
											"end": 4343,
											"name": "tag",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 4304,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4359,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 4423,
											"end": 4429,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4418,
											"end": 4421,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4359,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 4359,
											"end": 4430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4359,
											"end": 4430,
											"name": "tag",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 4359,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4352,
											"end": 4430,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4352,
											"end": 4430,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4439,
											"end": 4504,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 4497,
											"end": 4503,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4492,
											"end": 4495,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4485,
											"end": 4489,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4478,
											"end": 4483,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4474,
											"end": 4490,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4439,
											"end": 4504,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 4439,
											"end": 4504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4439,
											"end": 4504,
											"name": "tag",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 4439,
											"end": 4504,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4529,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 4551,
											"end": 4557,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4529,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 4529,
											"end": 4558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4529,
											"end": 4558,
											"name": "tag",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 4529,
											"end": 4558,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4524,
											"end": 4527,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4520,
											"end": 4559,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4513,
											"end": 4559,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4513,
											"end": 4559,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4280,
											"end": 4565,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4188,
											"end": 4565,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4188,
											"end": 4565,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4188,
											"end": 4565,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4188,
											"end": 4565,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4188,
											"end": 4565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4571,
											"end": 4884,
											"name": "tag",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 4571,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4684,
											"end": 4688,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4722,
											"end": 4724,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4707,
											"end": 4725,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4699,
											"end": 4725,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4699,
											"end": 4725,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4771,
											"end": 4780,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4765,
											"end": 4769,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4761,
											"end": 4781,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4757,
											"end": 4758,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4746,
											"end": 4755,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4742,
											"end": 4759,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4782,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4799,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 4872,
											"end": 4876,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4863,
											"end": 4869,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4799,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 4799,
											"end": 4877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4799,
											"end": 4877,
											"name": "tag",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 4799,
											"end": 4877,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4791,
											"end": 4877,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4791,
											"end": 4877,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4571,
											"end": 4884,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4571,
											"end": 4884,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4571,
											"end": 4884,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4571,
											"end": 4884,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4571,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4890,
											"end": 5364,
											"name": "tag",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4890,
											"end": 5364,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4958,
											"end": 4964,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4966,
											"end": 4972,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5015,
											"end": 5017,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5003,
											"end": 5012,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4994,
											"end": 5001,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4990,
											"end": 5013,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4986,
											"end": 5018,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4983,
											"end": 5102,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4983,
											"end": 5102,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 4983,
											"end": 5102,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5021,
											"end": 5100,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 5021,
											"end": 5100,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 5021,
											"end": 5100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5021,
											"end": 5100,
											"name": "tag",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 5021,
											"end": 5100,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4983,
											"end": 5102,
											"name": "tag",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 4983,
											"end": 5102,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5141,
											"end": 5142,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5166,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 5211,
											"end": 5218,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5202,
											"end": 5208,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5191,
											"end": 5200,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5187,
											"end": 5209,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5166,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 5166,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5166,
											"end": 5219,
											"name": "tag",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 5166,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5156,
											"end": 5219,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5156,
											"end": 5219,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5229,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5268,
											"end": 5270,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5294,
											"end": 5347,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 5339,
											"end": 5346,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5330,
											"end": 5336,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5319,
											"end": 5328,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5315,
											"end": 5337,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5294,
											"end": 5347,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 5294,
											"end": 5347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5294,
											"end": 5347,
											"name": "tag",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 5294,
											"end": 5347,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5284,
											"end": 5347,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5284,
											"end": 5347,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5239,
											"end": 5357,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4890,
											"end": 5364,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4890,
											"end": 5364,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4890,
											"end": 5364,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4890,
											"end": 5364,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4890,
											"end": 5364,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4890,
											"end": 5364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5370,
											"end": 5487,
											"name": "tag",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 5370,
											"end": 5487,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5479,
											"end": 5480,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5477,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5469,
											"end": 5481,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5493,
											"end": 5673,
											"name": "tag",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 5493,
											"end": 5673,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5541,
											"end": 5618,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5538,
											"end": 5539,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5531,
											"end": 5619,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5638,
											"end": 5642,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 5635,
											"end": 5636,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5628,
											"end": 5643,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5662,
											"end": 5666,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 5659,
											"end": 5660,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5652,
											"end": 5667,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5679,
											"end": 5960,
											"name": "tag",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 5679,
											"end": 5960,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5762,
											"end": 5789,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 5784,
											"end": 5788,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5762,
											"end": 5789,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 5762,
											"end": 5789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5762,
											"end": 5789,
											"name": "tag",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 5762,
											"end": 5789,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5754,
											"end": 5760,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5750,
											"end": 5790,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5892,
											"end": 5898,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5880,
											"end": 5890,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5877,
											"end": 5899,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 5856,
											"end": 5874,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5844,
											"end": 5854,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5838,
											"end": 5900,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 5835,
											"end": 5923,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5835,
											"end": 5923,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 5835,
											"end": 5923,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5903,
											"end": 5921,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 5903,
											"end": 5921,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 5903,
											"end": 5921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5903,
											"end": 5921,
											"name": "tag",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 5903,
											"end": 5921,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5835,
											"end": 5923,
											"name": "tag",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 5835,
											"end": 5923,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5943,
											"end": 5953,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5932,
											"end": 5954,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5722,
											"end": 5960,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5679,
											"end": 5960,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5679,
											"end": 5960,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5679,
											"end": 5960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5966,
											"end": 6095,
											"name": "tag",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 5966,
											"end": 6095,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6000,
											"end": 6006,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6027,
											"end": 6047,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 6027,
											"end": 6047,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "284"
										},
										{
											"begin": 6027,
											"end": 6047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6027,
											"end": 6047,
											"name": "tag",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 6027,
											"end": 6047,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6017,
											"end": 6047,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6017,
											"end": 6047,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6056,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 6084,
											"end": 6088,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6076,
											"end": 6082,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6056,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 6056,
											"end": 6089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6056,
											"end": 6089,
											"name": "tag",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 6056,
											"end": 6089,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5966,
											"end": 6095,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5966,
											"end": 6095,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5966,
											"end": 6095,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5966,
											"end": 6095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6101,
											"end": 6412,
											"name": "tag",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 6101,
											"end": 6412,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6178,
											"end": 6182,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6268,
											"end": 6286,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6260,
											"end": 6266,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6287,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6254,
											"end": 6310,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6254,
											"end": 6310,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 6254,
											"end": 6310,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6290,
											"end": 6308,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 6290,
											"end": 6308,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 6290,
											"end": 6308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6290,
											"end": 6308,
											"name": "tag",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 6290,
											"end": 6308,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6254,
											"end": 6310,
											"name": "tag",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 6254,
											"end": 6310,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6340,
											"end": 6344,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6332,
											"end": 6338,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6328,
											"end": 6345,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 6320,
											"end": 6345,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6320,
											"end": 6345,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6400,
											"end": 6404,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6394,
											"end": 6398,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6390,
											"end": 6405,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6382,
											"end": 6405,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6382,
											"end": 6405,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6101,
											"end": 6412,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6101,
											"end": 6412,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6101,
											"end": 6412,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6101,
											"end": 6412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6418,
											"end": 6535,
											"name": "tag",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 6418,
											"end": 6535,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6527,
											"end": 6528,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6524,
											"end": 6525,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6517,
											"end": 6529,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6558,
											"end": 7268,
											"name": "tag",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 6558,
											"end": 7268,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6654,
											"end": 6659,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6679,
											"end": 6760,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 6695,
											"end": 6759,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 6752,
											"end": 6758,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6695,
											"end": 6759,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 6695,
											"end": 6759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6695,
											"end": 6759,
											"name": "tag",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 6695,
											"end": 6759,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6679,
											"end": 6760,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 6679,
											"end": 6760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6679,
											"end": 6760,
											"name": "tag",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 6679,
											"end": 6760,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6670,
											"end": 6760,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6670,
											"end": 6760,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6780,
											"end": 6785,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6809,
											"end": 6815,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6802,
											"end": 6807,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6795,
											"end": 6816,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6843,
											"end": 6847,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6836,
											"end": 6841,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6832,
											"end": 6848,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6825,
											"end": 6848,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6825,
											"end": 6848,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6896,
											"end": 6900,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6888,
											"end": 6894,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6884,
											"end": 6901,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 6876,
											"end": 6882,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6872,
											"end": 6902,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6925,
											"end": 6928,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6917,
											"end": 6923,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6914,
											"end": 6929,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6911,
											"end": 7033,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6911,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 6911,
											"end": 7033,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6944,
											"end": 7023,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 6944,
											"end": 7023,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 6944,
											"end": 7023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6944,
											"end": 7023,
											"name": "tag",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 6944,
											"end": 7023,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6911,
											"end": 7033,
											"name": "tag",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 6911,
											"end": 7033,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7059,
											"end": 7065,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7042,
											"end": 7262,
											"name": "tag",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 7042,
											"end": 7262,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7076,
											"end": 7082,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7071,
											"end": 7074,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7068,
											"end": 7083,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 7042,
											"end": 7262,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7042,
											"end": 7262,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 7042,
											"end": 7262,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7151,
											"end": 7154,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7180,
											"end": 7217,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 7213,
											"end": 7216,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 7201,
											"end": 7211,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7180,
											"end": 7217,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 7180,
											"end": 7217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7180,
											"end": 7217,
											"name": "tag",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 7180,
											"end": 7217,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7175,
											"end": 7178,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7168,
											"end": 7218,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7247,
											"end": 7251,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7242,
											"end": 7245,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7238,
											"end": 7252,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7231,
											"end": 7252,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7231,
											"end": 7252,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7118,
											"end": 7262,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7102,
											"end": 7106,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7097,
											"end": 7100,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7093,
											"end": 7107,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7086,
											"end": 7107,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7086,
											"end": 7107,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7042,
											"end": 7262,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 7042,
											"end": 7262,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7042,
											"end": 7262,
											"name": "tag",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 7042,
											"end": 7262,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7046,
											"end": 7067,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6660,
											"end": 7268,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6660,
											"end": 7268,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6558,
											"end": 7268,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6558,
											"end": 7268,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6558,
											"end": 7268,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6558,
											"end": 7268,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6558,
											"end": 7268,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6558,
											"end": 7268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7291,
											"end": 7661,
											"name": "tag",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 7291,
											"end": 7661,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7362,
											"end": 7367,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7411,
											"end": 7414,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7404,
											"end": 7408,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 7396,
											"end": 7402,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7392,
											"end": 7409,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7388,
											"end": 7415,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 7378,
											"end": 7500,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 7378,
											"end": 7500,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7419,
											"end": 7498,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 7419,
											"end": 7498,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 7419,
											"end": 7498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7419,
											"end": 7498,
											"name": "tag",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 7419,
											"end": 7498,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7378,
											"end": 7500,
											"name": "tag",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 7378,
											"end": 7500,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7536,
											"end": 7542,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7523,
											"end": 7543,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 7561,
											"end": 7655,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 7651,
											"end": 7654,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7643,
											"end": 7649,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7640,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7628,
											"end": 7634,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7624,
											"end": 7641,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7561,
											"end": 7655,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 7561,
											"end": 7655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7561,
											"end": 7655,
											"name": "tag",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 7561,
											"end": 7655,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7552,
											"end": 7655,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7552,
											"end": 7655,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7368,
											"end": 7661,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7291,
											"end": 7661,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7291,
											"end": 7661,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7291,
											"end": 7661,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7291,
											"end": 7661,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7291,
											"end": 7661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7667,
											"end": 7784,
											"name": "tag",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 7667,
											"end": 7784,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7776,
											"end": 7777,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7773,
											"end": 7774,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7766,
											"end": 7778,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7790,
											"end": 8097,
											"name": "tag",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 7790,
											"end": 8097,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7851,
											"end": 7855,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7941,
											"end": 7959,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7933,
											"end": 7939,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7930,
											"end": 7960,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7927,
											"end": 7983,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7927,
											"end": 7983,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 7927,
											"end": 7983,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7963,
											"end": 7981,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 7963,
											"end": 7981,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 7963,
											"end": 7981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7963,
											"end": 7981,
											"name": "tag",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 7963,
											"end": 7981,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7927,
											"end": 7983,
											"name": "tag",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 7927,
											"end": 7983,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8001,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 8023,
											"end": 8029,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8001,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 8001,
											"end": 8030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8001,
											"end": 8030,
											"name": "tag",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 8001,
											"end": 8030,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7993,
											"end": 8030,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7993,
											"end": 8030,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8085,
											"end": 8089,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8079,
											"end": 8083,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8075,
											"end": 8090,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8067,
											"end": 8090,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8067,
											"end": 8090,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7790,
											"end": 8097,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7790,
											"end": 8097,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7790,
											"end": 8097,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7790,
											"end": 8097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8103,
											"end": 8249,
											"name": "tag",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 8103,
											"end": 8249,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8200,
											"end": 8206,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8195,
											"end": 8198,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8190,
											"end": 8193,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8177,
											"end": 8207,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 8241,
											"end": 8242,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8232,
											"end": 8238,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8227,
											"end": 8230,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8223,
											"end": 8239,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8216,
											"end": 8243,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8103,
											"end": 8249,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8103,
											"end": 8249,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8103,
											"end": 8249,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8103,
											"end": 8249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8255,
											"end": 8678,
											"name": "tag",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 8255,
											"end": 8678,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8332,
											"end": 8337,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8357,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 8373,
											"end": 8421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 8414,
											"end": 8420,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8373,
											"end": 8421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 8373,
											"end": 8421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8373,
											"end": 8421,
											"name": "tag",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 8373,
											"end": 8421,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8357,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 8357,
											"end": 8422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8357,
											"end": 8422,
											"name": "tag",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 8357,
											"end": 8422,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8348,
											"end": 8422,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8348,
											"end": 8422,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8445,
											"end": 8451,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8438,
											"end": 8443,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8431,
											"end": 8452,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8483,
											"end": 8487,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8476,
											"end": 8481,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8472,
											"end": 8488,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8521,
											"end": 8524,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8512,
											"end": 8518,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8507,
											"end": 8510,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8503,
											"end": 8519,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8500,
											"end": 8525,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8497,
											"end": 8609,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8497,
											"end": 8609,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 8497,
											"end": 8609,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8528,
											"end": 8607,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 8528,
											"end": 8607,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 8528,
											"end": 8607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8528,
											"end": 8607,
											"name": "tag",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 8528,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8497,
											"end": 8609,
											"name": "tag",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 8497,
											"end": 8609,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8618,
											"end": 8672,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 8665,
											"end": 8671,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8660,
											"end": 8663,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8655,
											"end": 8658,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8618,
											"end": 8672,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 8618,
											"end": 8672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8618,
											"end": 8672,
											"name": "tag",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 8618,
											"end": 8672,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8338,
											"end": 8678,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8255,
											"end": 8678,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 8255,
											"end": 8678,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8255,
											"end": 8678,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8255,
											"end": 8678,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8255,
											"end": 8678,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8255,
											"end": 8678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8697,
											"end": 9035,
											"name": "tag",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 8697,
											"end": 9035,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8752,
											"end": 8757,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8801,
											"end": 8804,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8794,
											"end": 8798,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 8786,
											"end": 8792,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8782,
											"end": 8799,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8778,
											"end": 8805,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 8768,
											"end": 8890,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 8768,
											"end": 8890,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8809,
											"end": 8888,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 8809,
											"end": 8888,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 8809,
											"end": 8888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8809,
											"end": 8888,
											"name": "tag",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 8809,
											"end": 8888,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8768,
											"end": 8890,
											"name": "tag",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 8768,
											"end": 8890,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8926,
											"end": 8932,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8913,
											"end": 8933,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 8951,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 9025,
											"end": 9028,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9017,
											"end": 9023,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9010,
											"end": 9014,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9002,
											"end": 9008,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8998,
											"end": 9015,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8951,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 8951,
											"end": 9029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8951,
											"end": 9029,
											"name": "tag",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 8951,
											"end": 9029,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8942,
											"end": 9029,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8942,
											"end": 9029,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8758,
											"end": 9035,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8697,
											"end": 9035,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8697,
											"end": 9035,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8697,
											"end": 9035,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8697,
											"end": 9035,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8697,
											"end": 9035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9041,
											"end": 10550,
											"name": "tag",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 9041,
											"end": 10550,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9195,
											"end": 9201,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9203,
											"end": 9209,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9211,
											"end": 9217,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9219,
											"end": 9225,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9227,
											"end": 9233,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9276,
											"end": 9279,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 9264,
											"end": 9273,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 9255,
											"end": 9262,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 9251,
											"end": 9274,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9247,
											"end": 9280,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 9244,
											"end": 9364,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9244,
											"end": 9364,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 9244,
											"end": 9364,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9283,
											"end": 9362,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 9283,
											"end": 9362,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 9283,
											"end": 9362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9283,
											"end": 9362,
											"name": "tag",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 9283,
											"end": 9362,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9244,
											"end": 9364,
											"name": "tag",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 9244,
											"end": 9364,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9403,
											"end": 9404,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9428,
											"end": 9481,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 9473,
											"end": 9480,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 9464,
											"end": 9470,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9453,
											"end": 9462,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 9449,
											"end": 9471,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9428,
											"end": 9481,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 9428,
											"end": 9481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9428,
											"end": 9481,
											"name": "tag",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 9428,
											"end": 9481,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9418,
											"end": 9481,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 9418,
											"end": 9481,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9374,
											"end": 9491,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9530,
											"end": 9532,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9556,
											"end": 9609,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 9601,
											"end": 9608,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 9592,
											"end": 9598,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9581,
											"end": 9590,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 9577,
											"end": 9599,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9556,
											"end": 9609,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 9556,
											"end": 9609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9556,
											"end": 9609,
											"name": "tag",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 9556,
											"end": 9609,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9546,
											"end": 9609,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 9546,
											"end": 9609,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9501,
											"end": 9619,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9686,
											"end": 9688,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9675,
											"end": 9684,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9658,
											"end": 9690,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 9717,
											"end": 9735,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9709,
											"end": 9715,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9706,
											"end": 9736,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 9703,
											"end": 9820,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9703,
											"end": 9820,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 9703,
											"end": 9820,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9739,
											"end": 9818,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 9739,
											"end": 9818,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 9739,
											"end": 9818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9739,
											"end": 9818,
											"name": "tag",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 9739,
											"end": 9818,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9703,
											"end": 9820,
											"name": "tag",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 9703,
											"end": 9820,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9844,
											"end": 9922,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 9914,
											"end": 9921,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 9905,
											"end": 9911,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9894,
											"end": 9903,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 9890,
											"end": 9912,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9844,
											"end": 9922,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 9844,
											"end": 9922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9844,
											"end": 9922,
											"name": "tag",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 9844,
											"end": 9922,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9834,
											"end": 9922,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 9834,
											"end": 9922,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9629,
											"end": 9932,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9999,
											"end": 10001,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 9988,
											"end": 9997,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 9984,
											"end": 10002,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9971,
											"end": 10003,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 10030,
											"end": 10048,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10028,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10019,
											"end": 10049,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 10016,
											"end": 10133,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10016,
											"end": 10133,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 10016,
											"end": 10133,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10052,
											"end": 10131,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 10052,
											"end": 10131,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 10052,
											"end": 10131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10052,
											"end": 10131,
											"name": "tag",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 10052,
											"end": 10131,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10016,
											"end": 10133,
											"name": "tag",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 10016,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10157,
											"end": 10235,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 10227,
											"end": 10234,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 10218,
											"end": 10224,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10207,
											"end": 10216,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 10203,
											"end": 10225,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10157,
											"end": 10235,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 10157,
											"end": 10235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10157,
											"end": 10235,
											"name": "tag",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 10157,
											"end": 10235,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10147,
											"end": 10235,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10147,
											"end": 10235,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9942,
											"end": 10245,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10312,
											"end": 10315,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 10301,
											"end": 10310,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 10297,
											"end": 10316,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10284,
											"end": 10317,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 10344,
											"end": 10362,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10336,
											"end": 10342,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10333,
											"end": 10363,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 10330,
											"end": 10447,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10330,
											"end": 10447,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 10330,
											"end": 10447,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10366,
											"end": 10445,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 10366,
											"end": 10445,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 10366,
											"end": 10445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10366,
											"end": 10445,
											"name": "tag",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 10366,
											"end": 10445,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10330,
											"end": 10447,
											"name": "tag",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 10330,
											"end": 10447,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10471,
											"end": 10533,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 10525,
											"end": 10532,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 10516,
											"end": 10522,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10505,
											"end": 10514,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 10501,
											"end": 10523,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10471,
											"end": 10533,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 10471,
											"end": 10533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10471,
											"end": 10533,
											"name": "tag",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 10471,
											"end": 10533,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10461,
											"end": 10533,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10461,
											"end": 10533,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10255,
											"end": 10543,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9041,
											"end": 10550,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9041,
											"end": 10550,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 9041,
											"end": 10550,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9041,
											"end": 10550,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9041,
											"end": 10550,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 9041,
											"end": 10550,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9041,
											"end": 10550,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 9041,
											"end": 10550,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9041,
											"end": 10550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10556,
											"end": 10867,
											"name": "tag",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 10556,
											"end": 10867,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10633,
											"end": 10637,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10723,
											"end": 10741,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10715,
											"end": 10721,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10712,
											"end": 10742,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 10709,
											"end": 10765,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10709,
											"end": 10765,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 10709,
											"end": 10765,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10745,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 10745,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 10745,
											"end": 10763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10745,
											"end": 10763,
											"name": "tag",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 10745,
											"end": 10763,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10709,
											"end": 10765,
											"name": "tag",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 10709,
											"end": 10765,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10795,
											"end": 10799,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10787,
											"end": 10793,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10783,
											"end": 10800,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 10775,
											"end": 10800,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10775,
											"end": 10800,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10855,
											"end": 10859,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10849,
											"end": 10853,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10845,
											"end": 10860,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10860,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10860,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10556,
											"end": 10867,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10556,
											"end": 10867,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10556,
											"end": 10867,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10556,
											"end": 10867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10890,
											"end": 11600,
											"name": "tag",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 10890,
											"end": 11600,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10986,
											"end": 10991,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11011,
											"end": 11092,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "463"
										},
										{
											"begin": 11027,
											"end": 11091,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 11084,
											"end": 11090,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11027,
											"end": 11091,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 11027,
											"end": 11091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11027,
											"end": 11091,
											"name": "tag",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 11027,
											"end": 11091,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11011,
											"end": 11092,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 11011,
											"end": 11092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11011,
											"end": 11092,
											"name": "tag",
											"source": 13,
											"value": "463"
										},
										{
											"begin": 11011,
											"end": 11092,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11002,
											"end": 11092,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11002,
											"end": 11092,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11112,
											"end": 11117,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11141,
											"end": 11147,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11134,
											"end": 11139,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11127,
											"end": 11148,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11175,
											"end": 11179,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11168,
											"end": 11173,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11164,
											"end": 11180,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11157,
											"end": 11180,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11157,
											"end": 11180,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11228,
											"end": 11232,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11220,
											"end": 11226,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11216,
											"end": 11233,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 11208,
											"end": 11214,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11204,
											"end": 11234,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11257,
											"end": 11260,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11249,
											"end": 11255,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11246,
											"end": 11261,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 11243,
											"end": 11365,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11243,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 11243,
											"end": 11365,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11276,
											"end": 11355,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 11276,
											"end": 11355,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 11276,
											"end": 11355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11276,
											"end": 11355,
											"name": "tag",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 11276,
											"end": 11355,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11243,
											"end": 11365,
											"name": "tag",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 11243,
											"end": 11365,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11391,
											"end": 11397,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11374,
											"end": 11594,
											"name": "tag",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 11374,
											"end": 11594,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11408,
											"end": 11414,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11403,
											"end": 11406,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11400,
											"end": 11415,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 11374,
											"end": 11594,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11374,
											"end": 11594,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 11374,
											"end": 11594,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11483,
											"end": 11486,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11512,
											"end": 11549,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 11545,
											"end": 11548,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 11533,
											"end": 11543,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11512,
											"end": 11549,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 11512,
											"end": 11549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11512,
											"end": 11549,
											"name": "tag",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 11512,
											"end": 11549,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11507,
											"end": 11510,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11500,
											"end": 11550,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11579,
											"end": 11583,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11574,
											"end": 11577,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11570,
											"end": 11584,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11563,
											"end": 11584,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 11563,
											"end": 11584,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11450,
											"end": 11594,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11434,
											"end": 11438,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11429,
											"end": 11432,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11425,
											"end": 11439,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11418,
											"end": 11439,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11418,
											"end": 11439,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11374,
											"end": 11594,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 11374,
											"end": 11594,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11374,
											"end": 11594,
											"name": "tag",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 11374,
											"end": 11594,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11378,
											"end": 11399,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10992,
											"end": 11600,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10992,
											"end": 11600,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10890,
											"end": 11600,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 10890,
											"end": 11600,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10890,
											"end": 11600,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10890,
											"end": 11600,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10890,
											"end": 11600,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10890,
											"end": 11600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11623,
											"end": 11993,
											"name": "tag",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 11623,
											"end": 11993,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11694,
											"end": 11699,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11743,
											"end": 11746,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11736,
											"end": 11740,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 11728,
											"end": 11734,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11724,
											"end": 11741,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11720,
											"end": 11747,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 11710,
											"end": 11832,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 11710,
											"end": 11832,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11751,
											"end": 11830,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 11751,
											"end": 11830,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 11751,
											"end": 11830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11751,
											"end": 11830,
											"name": "tag",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 11751,
											"end": 11830,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11710,
											"end": 11832,
											"name": "tag",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 11710,
											"end": 11832,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11868,
											"end": 11874,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11855,
											"end": 11875,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 11893,
											"end": 11987,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 11983,
											"end": 11986,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11975,
											"end": 11981,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11968,
											"end": 11972,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11960,
											"end": 11966,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 11956,
											"end": 11973,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11893,
											"end": 11987,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 11893,
											"end": 11987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11893,
											"end": 11987,
											"name": "tag",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 11893,
											"end": 11987,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11884,
											"end": 11987,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11884,
											"end": 11987,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11700,
											"end": 11993,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11623,
											"end": 11993,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11623,
											"end": 11993,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11623,
											"end": 11993,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11623,
											"end": 11993,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11623,
											"end": 11993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11999,
											"end": 12893,
											"name": "tag",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 11999,
											"end": 12893,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12117,
											"end": 12123,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12125,
											"end": 12131,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12174,
											"end": 12176,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12162,
											"end": 12171,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12153,
											"end": 12160,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12149,
											"end": 12172,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12145,
											"end": 12177,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 12142,
											"end": 12261,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12142,
											"end": 12261,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 12142,
											"end": 12261,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12180,
											"end": 12259,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 12180,
											"end": 12259,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 12180,
											"end": 12259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12180,
											"end": 12259,
											"name": "tag",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 12180,
											"end": 12259,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12142,
											"end": 12261,
											"name": "tag",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 12142,
											"end": 12261,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12328,
											"end": 12329,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12317,
											"end": 12326,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12313,
											"end": 12330,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12300,
											"end": 12331,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 12358,
											"end": 12376,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12350,
											"end": 12356,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12347,
											"end": 12377,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 12344,
											"end": 12461,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12344,
											"end": 12461,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 12344,
											"end": 12461,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12380,
											"end": 12459,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 12380,
											"end": 12459,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 12380,
											"end": 12459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12380,
											"end": 12459,
											"name": "tag",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 12380,
											"end": 12459,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12344,
											"end": 12461,
											"name": "tag",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 12344,
											"end": 12461,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12485,
											"end": 12563,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 12555,
											"end": 12562,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12546,
											"end": 12552,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12535,
											"end": 12544,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 12531,
											"end": 12553,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12485,
											"end": 12563,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 12485,
											"end": 12563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12485,
											"end": 12563,
											"name": "tag",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 12485,
											"end": 12563,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12475,
											"end": 12563,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12475,
											"end": 12563,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12271,
											"end": 12573,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12640,
											"end": 12642,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12629,
											"end": 12638,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12625,
											"end": 12643,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12612,
											"end": 12644,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 12671,
											"end": 12689,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12663,
											"end": 12669,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12660,
											"end": 12690,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 12657,
											"end": 12774,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12657,
											"end": 12774,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 12657,
											"end": 12774,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12693,
											"end": 12772,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 12693,
											"end": 12772,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 12693,
											"end": 12772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12693,
											"end": 12772,
											"name": "tag",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 12693,
											"end": 12772,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12657,
											"end": 12774,
											"name": "tag",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 12657,
											"end": 12774,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12798,
											"end": 12876,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 12868,
											"end": 12875,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12859,
											"end": 12865,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12848,
											"end": 12857,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 12844,
											"end": 12866,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12798,
											"end": 12876,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 12798,
											"end": 12876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12798,
											"end": 12876,
											"name": "tag",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 12798,
											"end": 12876,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12788,
											"end": 12876,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12788,
											"end": 12876,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12583,
											"end": 12886,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11999,
											"end": 12893,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11999,
											"end": 12893,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11999,
											"end": 12893,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11999,
											"end": 12893,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11999,
											"end": 12893,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11999,
											"end": 12893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12899,
											"end": 13013,
											"name": "tag",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 12899,
											"end": 13013,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12966,
											"end": 12972,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13000,
											"end": 13005,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12994,
											"end": 13006,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12984,
											"end": 13006,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12984,
											"end": 13006,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12899,
											"end": 13013,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12899,
											"end": 13013,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12899,
											"end": 13013,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12899,
											"end": 13013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13019,
											"end": 13203,
											"name": "tag",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 13019,
											"end": 13203,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13118,
											"end": 13129,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13152,
											"end": 13158,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13147,
											"end": 13150,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13140,
											"end": 13159,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13192,
											"end": 13196,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13187,
											"end": 13190,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13183,
											"end": 13197,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13168,
											"end": 13197,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13168,
											"end": 13197,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13019,
											"end": 13203,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13019,
											"end": 13203,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13019,
											"end": 13203,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13019,
											"end": 13203,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13019,
											"end": 13203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13209,
											"end": 13341,
											"name": "tag",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 13209,
											"end": 13341,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13276,
											"end": 13280,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13299,
											"end": 13302,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13291,
											"end": 13302,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13291,
											"end": 13302,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13329,
											"end": 13333,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13324,
											"end": 13327,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13312,
											"end": 13334,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13312,
											"end": 13334,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13209,
											"end": 13341,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13209,
											"end": 13341,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13209,
											"end": 13341,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13209,
											"end": 13341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13347,
											"end": 13455,
											"name": "tag",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 13347,
											"end": 13455,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13424,
											"end": 13448,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 13442,
											"end": 13447,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13424,
											"end": 13448,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 13424,
											"end": 13448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13424,
											"end": 13448,
											"name": "tag",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 13424,
											"end": 13448,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13419,
											"end": 13422,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13412,
											"end": 13449,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13347,
											"end": 13455,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13347,
											"end": 13455,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13347,
											"end": 13455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13461,
											"end": 13640,
											"name": "tag",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 13461,
											"end": 13640,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13530,
											"end": 13540,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13551,
											"end": 13597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 13593,
											"end": 13596,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13585,
											"end": 13591,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13551,
											"end": 13597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 13551,
											"end": 13597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13551,
											"end": 13597,
											"name": "tag",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 13551,
											"end": 13597,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13629,
											"end": 13633,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13624,
											"end": 13627,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13620,
											"end": 13634,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13606,
											"end": 13634,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13606,
											"end": 13634,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13461,
											"end": 13640,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13461,
											"end": 13640,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13461,
											"end": 13640,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13461,
											"end": 13640,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13461,
											"end": 13640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13646,
											"end": 13759,
											"name": "tag",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 13646,
											"end": 13759,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13716,
											"end": 13720,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13748,
											"end": 13752,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13743,
											"end": 13746,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13739,
											"end": 13753,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13731,
											"end": 13753,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13731,
											"end": 13753,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13646,
											"end": 13759,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13646,
											"end": 13759,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13646,
											"end": 13759,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13646,
											"end": 13759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13795,
											"end": 14527,
											"name": "tag",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 13795,
											"end": 14527,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13914,
											"end": 13917,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13943,
											"end": 13997,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 13991,
											"end": 13996,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13943,
											"end": 13997,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 13943,
											"end": 13997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13943,
											"end": 13997,
											"name": "tag",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 13943,
											"end": 13997,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14013,
											"end": 14099,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 14092,
											"end": 14098,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14087,
											"end": 14090,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 14013,
											"end": 14099,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 14013,
											"end": 14099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14013,
											"end": 14099,
											"name": "tag",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 14013,
											"end": 14099,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14006,
											"end": 14099,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 14006,
											"end": 14099,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14123,
											"end": 14179,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 14173,
											"end": 14178,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14123,
											"end": 14179,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 14123,
											"end": 14179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14123,
											"end": 14179,
											"name": "tag",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 14123,
											"end": 14179,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14202,
											"end": 14209,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14233,
											"end": 14234,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14218,
											"end": 14502,
											"name": "tag",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 14218,
											"end": 14502,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14243,
											"end": 14249,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14240,
											"end": 14241,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14237,
											"end": 14250,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 14218,
											"end": 14502,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14218,
											"end": 14502,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 14218,
											"end": 14502,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14319,
											"end": 14325,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14313,
											"end": 14326,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 14346,
											"end": 14409,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 14405,
											"end": 14408,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 14390,
											"end": 14403,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14346,
											"end": 14409,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 14346,
											"end": 14409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14346,
											"end": 14409,
											"name": "tag",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 14346,
											"end": 14409,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14339,
											"end": 14409,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 14339,
											"end": 14409,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14432,
											"end": 14492,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 14485,
											"end": 14491,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14432,
											"end": 14492,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 14432,
											"end": 14492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14432,
											"end": 14492,
											"name": "tag",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 14432,
											"end": 14492,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14422,
											"end": 14492,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14422,
											"end": 14492,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14278,
											"end": 14502,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14265,
											"end": 14266,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 14262,
											"end": 14263,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14258,
											"end": 14267,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14253,
											"end": 14267,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14253,
											"end": 14267,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14218,
											"end": 14502,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 14218,
											"end": 14502,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14218,
											"end": 14502,
											"name": "tag",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 14218,
											"end": 14502,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14222,
											"end": 14236,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14518,
											"end": 14521,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 14511,
											"end": 14521,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 14511,
											"end": 14521,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13919,
											"end": 14527,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13919,
											"end": 14527,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13919,
											"end": 14527,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13795,
											"end": 14527,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13795,
											"end": 14527,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13795,
											"end": 14527,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13795,
											"end": 14527,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13795,
											"end": 14527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14533,
											"end": 14906,
											"name": "tag",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 14533,
											"end": 14906,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14676,
											"end": 14680,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14714,
											"end": 14716,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14703,
											"end": 14712,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14699,
											"end": 14717,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14691,
											"end": 14717,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14691,
											"end": 14717,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14763,
											"end": 14772,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14757,
											"end": 14761,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14753,
											"end": 14773,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 14749,
											"end": 14750,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14738,
											"end": 14747,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14734,
											"end": 14751,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14727,
											"end": 14774,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14791,
											"end": 14899,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 14894,
											"end": 14898,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14885,
											"end": 14891,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14791,
											"end": 14899,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 14791,
											"end": 14899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14791,
											"end": 14899,
											"name": "tag",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 14791,
											"end": 14899,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14783,
											"end": 14899,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14783,
											"end": 14899,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14533,
											"end": 14906,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14533,
											"end": 14906,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14533,
											"end": 14906,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14533,
											"end": 14906,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14533,
											"end": 14906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14912,
											"end": 15030,
											"name": "tag",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 14912,
											"end": 15030,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14999,
											"end": 15023,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "504"
										},
										{
											"begin": 15017,
											"end": 15022,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14999,
											"end": 15023,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 14999,
											"end": 15023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14999,
											"end": 15023,
											"name": "tag",
											"source": 13,
											"value": "504"
										},
										{
											"begin": 14999,
											"end": 15023,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14994,
											"end": 14997,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14987,
											"end": 15024,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14912,
											"end": 15030,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14912,
											"end": 15030,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14912,
											"end": 15030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15036,
											"end": 15258,
											"name": "tag",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 15036,
											"end": 15258,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15129,
											"end": 15133,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15167,
											"end": 15169,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15156,
											"end": 15165,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15152,
											"end": 15170,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15144,
											"end": 15170,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15144,
											"end": 15170,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15180,
											"end": 15251,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 15248,
											"end": 15249,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15237,
											"end": 15246,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15233,
											"end": 15250,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15224,
											"end": 15230,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15180,
											"end": 15251,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 15180,
											"end": 15251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15180,
											"end": 15251,
											"name": "tag",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 15180,
											"end": 15251,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15036,
											"end": 15258,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15036,
											"end": 15258,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15036,
											"end": 15258,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15036,
											"end": 15258,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15036,
											"end": 15258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15264,
											"end": 15380,
											"name": "tag",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 15264,
											"end": 15380,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15334,
											"end": 15355,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "508"
										},
										{
											"begin": 15349,
											"end": 15354,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15334,
											"end": 15355,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 15334,
											"end": 15355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15334,
											"end": 15355,
											"name": "tag",
											"source": 13,
											"value": "508"
										},
										{
											"begin": 15334,
											"end": 15355,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15327,
											"end": 15332,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15324,
											"end": 15356,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 15314,
											"end": 15374,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "509"
										},
										{
											"begin": 15314,
											"end": 15374,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 15370,
											"end": 15371,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15367,
											"end": 15368,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 15360,
											"end": 15372,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 15314,
											"end": 15374,
											"name": "tag",
											"source": 13,
											"value": "509"
										},
										{
											"begin": 15314,
											"end": 15374,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15264,
											"end": 15380,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15264,
											"end": 15380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15386,
											"end": 15519,
											"name": "tag",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 15386,
											"end": 15519,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15429,
											"end": 15434,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15467,
											"end": 15473,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15454,
											"end": 15474,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 15445,
											"end": 15474,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15445,
											"end": 15474,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15483,
											"end": 15513,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 15507,
											"end": 15512,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15483,
											"end": 15513,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 15483,
											"end": 15513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15483,
											"end": 15513,
											"name": "tag",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 15483,
											"end": 15513,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15386,
											"end": 15519,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15386,
											"end": 15519,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15386,
											"end": 15519,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15386,
											"end": 15519,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15386,
											"end": 15519,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15525,
											"end": 15993,
											"name": "tag",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 15525,
											"end": 15993,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15590,
											"end": 15596,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15598,
											"end": 15604,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 15647,
											"end": 15649,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 15635,
											"end": 15644,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15626,
											"end": 15633,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 15622,
											"end": 15645,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 15618,
											"end": 15650,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 15615,
											"end": 15734,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 15615,
											"end": 15734,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 15615,
											"end": 15734,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 15653,
											"end": 15732,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "514"
										},
										{
											"begin": 15653,
											"end": 15732,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 15653,
											"end": 15732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15653,
											"end": 15732,
											"name": "tag",
											"source": 13,
											"value": "514"
										},
										{
											"begin": 15653,
											"end": 15732,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15615,
											"end": 15734,
											"name": "tag",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 15615,
											"end": 15734,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15773,
											"end": 15774,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15798,
											"end": 15851,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 15843,
											"end": 15850,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 15834,
											"end": 15840,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15823,
											"end": 15832,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 15819,
											"end": 15841,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15798,
											"end": 15851,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 15798,
											"end": 15851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15798,
											"end": 15851,
											"name": "tag",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 15798,
											"end": 15851,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15788,
											"end": 15851,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15788,
											"end": 15851,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15744,
											"end": 15861,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15900,
											"end": 15902,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15926,
											"end": 15976,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "516"
										},
										{
											"begin": 15968,
											"end": 15975,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 15959,
											"end": 15965,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15948,
											"end": 15957,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 15944,
											"end": 15966,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15926,
											"end": 15976,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 15926,
											"end": 15976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15926,
											"end": 15976,
											"name": "tag",
											"source": 13,
											"value": "516"
										},
										{
											"begin": 15926,
											"end": 15976,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15916,
											"end": 15976,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15916,
											"end": 15976,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15871,
											"end": 15986,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15525,
											"end": 15993,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15525,
											"end": 15993,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15525,
											"end": 15993,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15525,
											"end": 15993,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15525,
											"end": 15993,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15525,
											"end": 15993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15999,
											"end": 16473,
											"name": "tag",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 15999,
											"end": 16473,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16067,
											"end": 16073,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16075,
											"end": 16081,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 16124,
											"end": 16126,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 16112,
											"end": 16121,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16103,
											"end": 16110,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 16099,
											"end": 16122,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 16095,
											"end": 16127,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 16092,
											"end": 16211,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 16092,
											"end": 16211,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 16092,
											"end": 16211,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 16130,
											"end": 16209,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "519"
										},
										{
											"begin": 16130,
											"end": 16209,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 16130,
											"end": 16209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16130,
											"end": 16209,
											"name": "tag",
											"source": 13,
											"value": "519"
										},
										{
											"begin": 16130,
											"end": 16209,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16092,
											"end": 16211,
											"name": "tag",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 16092,
											"end": 16211,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16250,
											"end": 16251,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16275,
											"end": 16328,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "520"
										},
										{
											"begin": 16320,
											"end": 16327,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 16311,
											"end": 16317,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16300,
											"end": 16309,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 16296,
											"end": 16318,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16275,
											"end": 16328,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 16275,
											"end": 16328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16275,
											"end": 16328,
											"name": "tag",
											"source": 13,
											"value": "520"
										},
										{
											"begin": 16275,
											"end": 16328,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16265,
											"end": 16328,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16265,
											"end": 16328,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16221,
											"end": 16338,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16377,
											"end": 16379,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16403,
											"end": 16456,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 16448,
											"end": 16455,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 16439,
											"end": 16445,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16428,
											"end": 16437,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 16424,
											"end": 16446,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16403,
											"end": 16456,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 16403,
											"end": 16456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16403,
											"end": 16456,
											"name": "tag",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 16403,
											"end": 16456,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16393,
											"end": 16456,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16393,
											"end": 16456,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16348,
											"end": 16466,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15999,
											"end": 16473,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15999,
											"end": 16473,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15999,
											"end": 16473,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15999,
											"end": 16473,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15999,
											"end": 16473,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15999,
											"end": 16473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16479,
											"end": 17568,
											"name": "tag",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 16479,
											"end": 17568,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16583,
											"end": 16589,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16591,
											"end": 16597,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 16599,
											"end": 16605,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16607,
											"end": 16613,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 16615,
											"end": 16621,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16664,
											"end": 16667,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 16652,
											"end": 16661,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 16643,
											"end": 16650,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 16639,
											"end": 16662,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 16635,
											"end": 16668,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 16632,
											"end": 16752,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 16632,
											"end": 16752,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "523"
										},
										{
											"begin": 16632,
											"end": 16752,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 16671,
											"end": 16750,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "524"
										},
										{
											"begin": 16671,
											"end": 16750,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 16671,
											"end": 16750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16671,
											"end": 16750,
											"name": "tag",
											"source": 13,
											"value": "524"
										},
										{
											"begin": 16671,
											"end": 16750,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16632,
											"end": 16752,
											"name": "tag",
											"source": 13,
											"value": "523"
										},
										{
											"begin": 16632,
											"end": 16752,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16791,
											"end": 16792,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16816,
											"end": 16869,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 16861,
											"end": 16868,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 16852,
											"end": 16858,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16841,
											"end": 16850,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 16837,
											"end": 16859,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16816,
											"end": 16869,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 16816,
											"end": 16869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16816,
											"end": 16869,
											"name": "tag",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 16816,
											"end": 16869,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16806,
											"end": 16869,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 16806,
											"end": 16869,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16762,
											"end": 16879,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16918,
											"end": 16920,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16944,
											"end": 16997,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 16989,
											"end": 16996,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 16980,
											"end": 16986,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16969,
											"end": 16978,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 16965,
											"end": 16987,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16944,
											"end": 16997,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 16944,
											"end": 16997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16944,
											"end": 16997,
											"name": "tag",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 16944,
											"end": 16997,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16934,
											"end": 16997,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 16934,
											"end": 16997,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16889,
											"end": 17007,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17046,
											"end": 17048,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17125,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "527"
										},
										{
											"begin": 17117,
											"end": 17124,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 17108,
											"end": 17114,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17097,
											"end": 17106,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 17093,
											"end": 17115,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17072,
											"end": 17125,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 17072,
											"end": 17125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17072,
											"end": 17125,
											"name": "tag",
											"source": 13,
											"value": "527"
										},
										{
											"begin": 17072,
											"end": 17125,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17062,
											"end": 17125,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 17062,
											"end": 17125,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17017,
											"end": 17135,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17174,
											"end": 17176,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 17200,
											"end": 17253,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 17245,
											"end": 17252,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 17236,
											"end": 17242,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17225,
											"end": 17234,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 17221,
											"end": 17243,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17200,
											"end": 17253,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 17200,
											"end": 17253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17200,
											"end": 17253,
											"name": "tag",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 17200,
											"end": 17253,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17190,
											"end": 17253,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 17190,
											"end": 17253,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17145,
											"end": 17263,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17330,
											"end": 17333,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 17319,
											"end": 17328,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 17315,
											"end": 17334,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17302,
											"end": 17335,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 17362,
											"end": 17380,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17354,
											"end": 17360,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17351,
											"end": 17381,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 17348,
											"end": 17465,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 17348,
											"end": 17465,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "529"
										},
										{
											"begin": 17348,
											"end": 17465,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17384,
											"end": 17463,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "530"
										},
										{
											"begin": 17384,
											"end": 17463,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 17384,
											"end": 17463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17384,
											"end": 17463,
											"name": "tag",
											"source": 13,
											"value": "530"
										},
										{
											"begin": 17384,
											"end": 17463,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17348,
											"end": 17465,
											"name": "tag",
											"source": 13,
											"value": "529"
										},
										{
											"begin": 17348,
											"end": 17465,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17489,
											"end": 17551,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 17543,
											"end": 17550,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 17534,
											"end": 17540,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17523,
											"end": 17532,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 17519,
											"end": 17541,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17489,
											"end": 17551,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 17489,
											"end": 17551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17489,
											"end": 17551,
											"name": "tag",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 17489,
											"end": 17551,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17479,
											"end": 17551,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17479,
											"end": 17551,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17273,
											"end": 17561,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16479,
											"end": 17568,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16479,
											"end": 17568,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 16479,
											"end": 17568,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16479,
											"end": 17568,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16479,
											"end": 17568,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 16479,
											"end": 17568,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16479,
											"end": 17568,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 16479,
											"end": 17568,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16479,
											"end": 17568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17574,
											"end": 17903,
											"name": "tag",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 17574,
											"end": 17903,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17633,
											"end": 17639,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17682,
											"end": 17684,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17670,
											"end": 17679,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17661,
											"end": 17668,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 17657,
											"end": 17680,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 17653,
											"end": 17685,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 17650,
											"end": 17769,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 17650,
											"end": 17769,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "533"
										},
										{
											"begin": 17650,
											"end": 17769,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17688,
											"end": 17767,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "534"
										},
										{
											"begin": 17688,
											"end": 17767,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 17688,
											"end": 17767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17688,
											"end": 17767,
											"name": "tag",
											"source": 13,
											"value": "534"
										},
										{
											"begin": 17688,
											"end": 17767,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17650,
											"end": 17769,
											"name": "tag",
											"source": 13,
											"value": "533"
										},
										{
											"begin": 17650,
											"end": 17769,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17808,
											"end": 17809,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17833,
											"end": 17886,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 17878,
											"end": 17885,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 17869,
											"end": 17875,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17858,
											"end": 17867,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 17854,
											"end": 17876,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17833,
											"end": 17886,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 17833,
											"end": 17886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17833,
											"end": 17886,
											"name": "tag",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 17833,
											"end": 17886,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17823,
											"end": 17886,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17823,
											"end": 17886,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17779,
											"end": 17896,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17574,
											"end": 17903,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 17574,
											"end": 17903,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17574,
											"end": 17903,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17574,
											"end": 17903,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17574,
											"end": 17903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17909,
											"end": 18089,
											"name": "tag",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 17909,
											"end": 18089,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17957,
											"end": 18034,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17954,
											"end": 17955,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17947,
											"end": 18035,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18054,
											"end": 18058,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 18051,
											"end": 18052,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 18044,
											"end": 18059,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18078,
											"end": 18082,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 18075,
											"end": 18076,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18068,
											"end": 18083,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 18095,
											"end": 18415,
											"name": "tag",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 18095,
											"end": 18415,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18139,
											"end": 18145,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18176,
											"end": 18177,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 18170,
											"end": 18174,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18166,
											"end": 18178,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 18156,
											"end": 18178,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18156,
											"end": 18178,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18223,
											"end": 18224,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 18217,
											"end": 18221,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18213,
											"end": 18225,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 18244,
											"end": 18262,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 18234,
											"end": 18315,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "538"
										},
										{
											"begin": 18234,
											"end": 18315,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 18300,
											"end": 18304,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 18292,
											"end": 18298,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18288,
											"end": 18305,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 18278,
											"end": 18305,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18278,
											"end": 18305,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18234,
											"end": 18315,
											"name": "tag",
											"source": 13,
											"value": "538"
										},
										{
											"begin": 18234,
											"end": 18315,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18362,
											"end": 18364,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18354,
											"end": 18360,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18351,
											"end": 18365,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 18331,
											"end": 18349,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18328,
											"end": 18366,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 18325,
											"end": 18409,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "539"
										},
										{
											"begin": 18325,
											"end": 18409,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 18381,
											"end": 18399,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 18381,
											"end": 18399,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 18381,
											"end": 18399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18381,
											"end": 18399,
											"name": "tag",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 18381,
											"end": 18399,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18325,
											"end": 18409,
											"name": "tag",
											"source": 13,
											"value": "539"
										},
										{
											"begin": 18325,
											"end": 18409,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18146,
											"end": 18415,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18095,
											"end": 18415,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18095,
											"end": 18415,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18095,
											"end": 18415,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18095,
											"end": 18415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18421,
											"end": 18601,
											"name": "tag",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 18421,
											"end": 18601,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18469,
											"end": 18546,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18466,
											"end": 18467,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18459,
											"end": 18547,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18566,
											"end": 18570,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 18563,
											"end": 18564,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 18556,
											"end": 18571,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18590,
											"end": 18594,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 18587,
											"end": 18588,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18580,
											"end": 18595,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 18607,
											"end": 18798,
											"name": "tag",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 18607,
											"end": 18798,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18647,
											"end": 18650,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18666,
											"end": 18686,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "543"
										},
										{
											"begin": 18684,
											"end": 18685,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18666,
											"end": 18686,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 18666,
											"end": 18686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18666,
											"end": 18686,
											"name": "tag",
											"source": 13,
											"value": "543"
										},
										{
											"begin": 18666,
											"end": 18686,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18661,
											"end": 18686,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18661,
											"end": 18686,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18700,
											"end": 18720,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 18718,
											"end": 18719,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18700,
											"end": 18720,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 18700,
											"end": 18720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18700,
											"end": 18720,
											"name": "tag",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 18700,
											"end": 18720,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18695,
											"end": 18720,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18695,
											"end": 18720,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18743,
											"end": 18744,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18740,
											"end": 18741,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18736,
											"end": 18745,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18729,
											"end": 18745,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18729,
											"end": 18745,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18764,
											"end": 18767,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 18761,
											"end": 18762,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18758,
											"end": 18768,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 18755,
											"end": 18791,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 18755,
											"end": 18791,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "545"
										},
										{
											"begin": 18755,
											"end": 18791,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 18771,
											"end": 18789,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "546"
										},
										{
											"begin": 18771,
											"end": 18789,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 18771,
											"end": 18789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18771,
											"end": 18789,
											"name": "tag",
											"source": 13,
											"value": "546"
										},
										{
											"begin": 18771,
											"end": 18789,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18755,
											"end": 18791,
											"name": "tag",
											"source": 13,
											"value": "545"
										},
										{
											"begin": 18755,
											"end": 18791,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18607,
											"end": 18798,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18607,
											"end": 18798,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18607,
											"end": 18798,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18607,
											"end": 18798,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18607,
											"end": 18798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18804,
											"end": 19136,
											"name": "tag",
											"source": 13,
											"value": "110"
										},
										{
											"begin": 18804,
											"end": 19136,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18925,
											"end": 18929,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18963,
											"end": 18965,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 18952,
											"end": 18961,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18948,
											"end": 18966,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18940,
											"end": 18966,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18940,
											"end": 18966,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18976,
											"end": 19047,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "548"
										},
										{
											"begin": 19044,
											"end": 19045,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19033,
											"end": 19042,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19029,
											"end": 19046,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19020,
											"end": 19026,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 18976,
											"end": 19047,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 18976,
											"end": 19047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18976,
											"end": 19047,
											"name": "tag",
											"source": 13,
											"value": "548"
										},
										{
											"begin": 18976,
											"end": 19047,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19057,
											"end": 19129,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "549"
										},
										{
											"begin": 19125,
											"end": 19127,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19114,
											"end": 19123,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19110,
											"end": 19128,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19101,
											"end": 19107,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 19057,
											"end": 19129,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 19057,
											"end": 19129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19057,
											"end": 19129,
											"name": "tag",
											"source": 13,
											"value": "549"
										},
										{
											"begin": 19057,
											"end": 19129,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18804,
											"end": 19136,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 18804,
											"end": 19136,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18804,
											"end": 19136,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18804,
											"end": 19136,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18804,
											"end": 19136,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18804,
											"end": 19136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19142,
											"end": 19474,
											"name": "tag",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 19142,
											"end": 19474,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19263,
											"end": 19267,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19301,
											"end": 19303,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 19290,
											"end": 19299,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19286,
											"end": 19304,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19278,
											"end": 19304,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19278,
											"end": 19304,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19314,
											"end": 19385,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "551"
										},
										{
											"begin": 19382,
											"end": 19383,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19371,
											"end": 19380,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19367,
											"end": 19384,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19358,
											"end": 19364,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 19314,
											"end": 19385,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 19314,
											"end": 19385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19314,
											"end": 19385,
											"name": "tag",
											"source": 13,
											"value": "551"
										},
										{
											"begin": 19314,
											"end": 19385,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19395,
											"end": 19467,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "552"
										},
										{
											"begin": 19463,
											"end": 19465,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19452,
											"end": 19461,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19448,
											"end": 19466,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19439,
											"end": 19445,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 19395,
											"end": 19467,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 19395,
											"end": 19467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19395,
											"end": 19467,
											"name": "tag",
											"source": 13,
											"value": "552"
										},
										{
											"begin": 19395,
											"end": 19467,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19142,
											"end": 19474,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 19142,
											"end": 19474,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 19142,
											"end": 19474,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19142,
											"end": 19474,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19142,
											"end": 19474,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19142,
											"end": 19474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19480,
											"end": 19660,
											"name": "tag",
											"source": 13,
											"value": "131"
										},
										{
											"begin": 19480,
											"end": 19660,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19528,
											"end": 19605,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19525,
											"end": 19526,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19518,
											"end": 19606,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19625,
											"end": 19629,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 19622,
											"end": 19623,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 19615,
											"end": 19630,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19649,
											"end": 19653,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 19646,
											"end": 19647,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19639,
											"end": 19654,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 19666,
											"end": 19899,
											"name": "tag",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 19666,
											"end": 19899,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19705,
											"end": 19708,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19728,
											"end": 19752,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "555"
										},
										{
											"begin": 19746,
											"end": 19751,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19728,
											"end": 19752,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 19728,
											"end": 19752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19728,
											"end": 19752,
											"name": "tag",
											"source": 13,
											"value": "555"
										},
										{
											"begin": 19728,
											"end": 19752,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19719,
											"end": 19752,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19719,
											"end": 19752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19774,
											"end": 19840,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19767,
											"end": 19772,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19764,
											"end": 19841,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 19761,
											"end": 19864,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "556"
										},
										{
											"begin": 19761,
											"end": 19864,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 19844,
											"end": 19862,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "557"
										},
										{
											"begin": 19844,
											"end": 19862,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 19844,
											"end": 19862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19844,
											"end": 19862,
											"name": "tag",
											"source": 13,
											"value": "557"
										},
										{
											"begin": 19844,
											"end": 19862,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19761,
											"end": 19864,
											"name": "tag",
											"source": 13,
											"value": "556"
										},
										{
											"begin": 19761,
											"end": 19864,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19891,
											"end": 19892,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 19884,
											"end": 19889,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19880,
											"end": 19893,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19873,
											"end": 19893,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19873,
											"end": 19893,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19666,
											"end": 19899,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19666,
											"end": 19899,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19666,
											"end": 19899,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19666,
											"end": 19899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19905,
											"end": 20075,
											"name": "tag",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 19905,
											"end": 20075,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20045,
											"end": 20067,
											"name": "PUSH",
											"source": 13,
											"value": "496E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 20041,
											"end": 20042,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20033,
											"end": 20039,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20029,
											"end": 20043,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20022,
											"end": 20068,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19905,
											"end": 20075,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19905,
											"end": 20075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20081,
											"end": 20447,
											"name": "tag",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 20081,
											"end": 20447,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20223,
											"end": 20226,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20244,
											"end": 20311,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "560"
										},
										{
											"begin": 20308,
											"end": 20310,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 20303,
											"end": 20306,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20244,
											"end": 20311,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 20244,
											"end": 20311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20244,
											"end": 20311,
											"name": "tag",
											"source": 13,
											"value": "560"
										},
										{
											"begin": 20244,
											"end": 20311,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20237,
											"end": 20311,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20237,
											"end": 20311,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20320,
											"end": 20413,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "561"
										},
										{
											"begin": 20409,
											"end": 20412,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20320,
											"end": 20413,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 20320,
											"end": 20413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20320,
											"end": 20413,
											"name": "tag",
											"source": 13,
											"value": "561"
										},
										{
											"begin": 20320,
											"end": 20413,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20438,
											"end": 20440,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 20433,
											"end": 20436,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20429,
											"end": 20441,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20422,
											"end": 20441,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20422,
											"end": 20441,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20081,
											"end": 20447,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20081,
											"end": 20447,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20081,
											"end": 20447,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20081,
											"end": 20447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20453,
											"end": 20872,
											"name": "tag",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 20453,
											"end": 20872,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20619,
											"end": 20623,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20657,
											"end": 20659,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 20646,
											"end": 20655,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20642,
											"end": 20660,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20634,
											"end": 20660,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20634,
											"end": 20660,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20706,
											"end": 20715,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20700,
											"end": 20704,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20696,
											"end": 20716,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 20692,
											"end": 20693,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20681,
											"end": 20690,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20677,
											"end": 20694,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20670,
											"end": 20717,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20734,
											"end": 20865,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "563"
										},
										{
											"begin": 20860,
											"end": 20864,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20734,
											"end": 20865,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 20734,
											"end": 20865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20734,
											"end": 20865,
											"name": "tag",
											"source": 13,
											"value": "563"
										},
										{
											"begin": 20734,
											"end": 20865,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20726,
											"end": 20865,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20726,
											"end": 20865,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20453,
											"end": 20872,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20453,
											"end": 20872,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20453,
											"end": 20872,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20453,
											"end": 20872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20878,
											"end": 21072,
											"name": "tag",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 20878,
											"end": 21072,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20918,
											"end": 20922,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20938,
											"end": 20958,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "565"
										},
										{
											"begin": 20956,
											"end": 20957,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20938,
											"end": 20958,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 20938,
											"end": 20958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20938,
											"end": 20958,
											"name": "tag",
											"source": 13,
											"value": "565"
										},
										{
											"begin": 20938,
											"end": 20958,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20933,
											"end": 20958,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20933,
											"end": 20958,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20972,
											"end": 20992,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "566"
										},
										{
											"begin": 20990,
											"end": 20991,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20972,
											"end": 20992,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 20972,
											"end": 20992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20972,
											"end": 20992,
											"name": "tag",
											"source": 13,
											"value": "566"
										},
										{
											"begin": 20972,
											"end": 20992,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20967,
											"end": 20992,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 20967,
											"end": 20992,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21016,
											"end": 21017,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21013,
											"end": 21014,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21009,
											"end": 21018,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 21001,
											"end": 21018,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21001,
											"end": 21018,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21040,
											"end": 21041,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21034,
											"end": 21038,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21031,
											"end": 21042,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 21028,
											"end": 21065,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 21028,
											"end": 21065,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "567"
										},
										{
											"begin": 21028,
											"end": 21065,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 21045,
											"end": 21063,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "568"
										},
										{
											"begin": 21045,
											"end": 21063,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 21045,
											"end": 21063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21045,
											"end": 21063,
											"name": "tag",
											"source": 13,
											"value": "568"
										},
										{
											"begin": 21045,
											"end": 21063,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21028,
											"end": 21065,
											"name": "tag",
											"source": 13,
											"value": "567"
										},
										{
											"begin": 21028,
											"end": 21065,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20878,
											"end": 21072,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 20878,
											"end": 21072,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20878,
											"end": 21072,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20878,
											"end": 21072,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20878,
											"end": 21072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21078,
											"end": 21631,
											"name": "tag",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 21078,
											"end": 21631,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21255,
											"end": 21259,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21293,
											"end": 21296,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 21282,
											"end": 21291,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21278,
											"end": 21297,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21270,
											"end": 21297,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21270,
											"end": 21297,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21307,
											"end": 21378,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "570"
										},
										{
											"begin": 21375,
											"end": 21376,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21364,
											"end": 21373,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21360,
											"end": 21377,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21351,
											"end": 21357,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 21307,
											"end": 21378,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 21307,
											"end": 21378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21307,
											"end": 21378,
											"name": "tag",
											"source": 13,
											"value": "570"
										},
										{
											"begin": 21307,
											"end": 21378,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21388,
											"end": 21460,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "571"
										},
										{
											"begin": 21456,
											"end": 21458,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 21445,
											"end": 21454,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21441,
											"end": 21459,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21432,
											"end": 21438,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 21388,
											"end": 21460,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 21388,
											"end": 21460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21388,
											"end": 21460,
											"name": "tag",
											"source": 13,
											"value": "571"
										},
										{
											"begin": 21388,
											"end": 21460,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21470,
											"end": 21542,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "572"
										},
										{
											"begin": 21538,
											"end": 21540,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 21527,
											"end": 21536,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21523,
											"end": 21541,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21514,
											"end": 21520,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 21470,
											"end": 21542,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 21470,
											"end": 21542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21470,
											"end": 21542,
											"name": "tag",
											"source": 13,
											"value": "572"
										},
										{
											"begin": 21470,
											"end": 21542,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21552,
											"end": 21624,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "573"
										},
										{
											"begin": 21620,
											"end": 21622,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 21609,
											"end": 21618,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21605,
											"end": 21623,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21596,
											"end": 21602,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 21552,
											"end": 21624,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 21552,
											"end": 21624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21552,
											"end": 21624,
											"name": "tag",
											"source": 13,
											"value": "573"
										},
										{
											"begin": 21552,
											"end": 21624,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21078,
											"end": 21631,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 21078,
											"end": 21631,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 21078,
											"end": 21631,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21078,
											"end": 21631,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21078,
											"end": 21631,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21078,
											"end": 21631,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21078,
											"end": 21631,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21078,
											"end": 21631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21637,
											"end": 22271,
											"name": "tag",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 21637,
											"end": 22271,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21858,
											"end": 21862,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21896,
											"end": 21898,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 21885,
											"end": 21894,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21881,
											"end": 21899,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21873,
											"end": 21899,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21873,
											"end": 21899,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21945,
											"end": 21954,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21939,
											"end": 21943,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21935,
											"end": 21955,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 21931,
											"end": 21932,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21920,
											"end": 21929,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21916,
											"end": 21933,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21909,
											"end": 21956,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 21973,
											"end": 22081,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "575"
										},
										{
											"begin": 22076,
											"end": 22080,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22067,
											"end": 22073,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 21973,
											"end": 22081,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 21973,
											"end": 22081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21973,
											"end": 22081,
											"name": "tag",
											"source": 13,
											"value": "575"
										},
										{
											"begin": 21973,
											"end": 22081,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21965,
											"end": 22081,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21965,
											"end": 22081,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22128,
											"end": 22137,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22122,
											"end": 22126,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22118,
											"end": 22138,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 22113,
											"end": 22115,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 22102,
											"end": 22111,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22098,
											"end": 22116,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22091,
											"end": 22139,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 22156,
											"end": 22264,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "576"
										},
										{
											"begin": 22259,
											"end": 22263,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22250,
											"end": 22256,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 22156,
											"end": 22264,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 22156,
											"end": 22264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22156,
											"end": 22264,
											"name": "tag",
											"source": 13,
											"value": "576"
										},
										{
											"begin": 22156,
											"end": 22264,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22148,
											"end": 22264,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22148,
											"end": 22264,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21637,
											"end": 22271,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 21637,
											"end": 22271,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 21637,
											"end": 22271,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21637,
											"end": 22271,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21637,
											"end": 22271,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21637,
											"end": 22271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22277,
											"end": 22375,
											"name": "tag",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 22277,
											"end": 22375,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22328,
											"end": 22334,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22362,
											"end": 22367,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22356,
											"end": 22368,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 22346,
											"end": 22368,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22346,
											"end": 22368,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22277,
											"end": 22375,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22277,
											"end": 22375,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22277,
											"end": 22375,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22277,
											"end": 22375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22381,
											"end": 22549,
											"name": "tag",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 22381,
											"end": 22549,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22464,
											"end": 22475,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22498,
											"end": 22504,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22493,
											"end": 22496,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22486,
											"end": 22505,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 22538,
											"end": 22542,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 22533,
											"end": 22536,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22529,
											"end": 22543,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22514,
											"end": 22543,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22514,
											"end": 22543,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22381,
											"end": 22549,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 22381,
											"end": 22549,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22381,
											"end": 22549,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22381,
											"end": 22549,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22381,
											"end": 22549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22555,
											"end": 22928,
											"name": "tag",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 22555,
											"end": 22928,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22641,
											"end": 22644,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22669,
											"end": 22707,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "580"
										},
										{
											"begin": 22701,
											"end": 22706,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22669,
											"end": 22707,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 22669,
											"end": 22707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22669,
											"end": 22707,
											"name": "tag",
											"source": 13,
											"value": "580"
										},
										{
											"begin": 22669,
											"end": 22707,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22723,
											"end": 22793,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "581"
										},
										{
											"begin": 22786,
											"end": 22792,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22781,
											"end": 22784,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 22723,
											"end": 22793,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 22723,
											"end": 22793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22723,
											"end": 22793,
											"name": "tag",
											"source": 13,
											"value": "581"
										},
										{
											"begin": 22723,
											"end": 22793,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22716,
											"end": 22793,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 22716,
											"end": 22793,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22802,
											"end": 22867,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "582"
										},
										{
											"begin": 22860,
											"end": 22866,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22855,
											"end": 22858,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 22848,
											"end": 22852,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 22841,
											"end": 22846,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 22837,
											"end": 22853,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22802,
											"end": 22867,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 22802,
											"end": 22867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22802,
											"end": 22867,
											"name": "tag",
											"source": 13,
											"value": "582"
										},
										{
											"begin": 22802,
											"end": 22867,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22892,
											"end": 22921,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "583"
										},
										{
											"begin": 22914,
											"end": 22920,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22892,
											"end": 22921,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 22892,
											"end": 22921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22892,
											"end": 22921,
											"name": "tag",
											"source": 13,
											"value": "583"
										},
										{
											"begin": 22892,
											"end": 22921,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22887,
											"end": 22890,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 22883,
											"end": 22922,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22876,
											"end": 22922,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22876,
											"end": 22922,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22645,
											"end": 22928,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22555,
											"end": 22928,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 22555,
											"end": 22928,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22555,
											"end": 22928,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22555,
											"end": 22928,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22555,
											"end": 22928,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22934,
											"end": 23685,
											"name": "tag",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 22934,
											"end": 23685,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23157,
											"end": 23161,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23195,
											"end": 23198,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 23184,
											"end": 23193,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23180,
											"end": 23199,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23172,
											"end": 23199,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23172,
											"end": 23199,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23209,
											"end": 23280,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "585"
										},
										{
											"begin": 23277,
											"end": 23278,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23266,
											"end": 23275,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23262,
											"end": 23279,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23253,
											"end": 23259,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 23209,
											"end": 23280,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 23209,
											"end": 23280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23209,
											"end": 23280,
											"name": "tag",
											"source": 13,
											"value": "585"
										},
										{
											"begin": 23209,
											"end": 23280,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23290,
											"end": 23362,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "586"
										},
										{
											"begin": 23358,
											"end": 23360,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 23347,
											"end": 23356,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23343,
											"end": 23361,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23334,
											"end": 23340,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 23290,
											"end": 23362,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 23290,
											"end": 23362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23290,
											"end": 23362,
											"name": "tag",
											"source": 13,
											"value": "586"
										},
										{
											"begin": 23290,
											"end": 23362,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23372,
											"end": 23444,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "587"
										},
										{
											"begin": 23440,
											"end": 23442,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 23429,
											"end": 23438,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23425,
											"end": 23443,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23416,
											"end": 23422,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 23372,
											"end": 23444,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 23372,
											"end": 23444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23372,
											"end": 23444,
											"name": "tag",
											"source": 13,
											"value": "587"
										},
										{
											"begin": 23372,
											"end": 23444,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23454,
											"end": 23526,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "588"
										},
										{
											"begin": 23522,
											"end": 23524,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 23511,
											"end": 23520,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23507,
											"end": 23525,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23498,
											"end": 23504,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 23454,
											"end": 23526,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 23454,
											"end": 23526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23454,
											"end": 23526,
											"name": "tag",
											"source": 13,
											"value": "588"
										},
										{
											"begin": 23454,
											"end": 23526,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23574,
											"end": 23583,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23568,
											"end": 23572,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23564,
											"end": 23584,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 23558,
											"end": 23561,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 23547,
											"end": 23556,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23543,
											"end": 23562,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23536,
											"end": 23585,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 23602,
											"end": 23678,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "589"
										},
										{
											"begin": 23673,
											"end": 23677,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23664,
											"end": 23670,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 23602,
											"end": 23678,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 23602,
											"end": 23678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23602,
											"end": 23678,
											"name": "tag",
											"source": 13,
											"value": "589"
										},
										{
											"begin": 23602,
											"end": 23678,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23594,
											"end": 23678,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23594,
											"end": 23678,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22934,
											"end": 23685,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 22934,
											"end": 23685,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 22934,
											"end": 23685,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22934,
											"end": 23685,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22934,
											"end": 23685,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22934,
											"end": 23685,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22934,
											"end": 23685,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22934,
											"end": 23685,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22934,
											"end": 23685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23691,
											"end": 23832,
											"name": "tag",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 23691,
											"end": 23832,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23747,
											"end": 23752,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23778,
											"end": 23784,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23772,
											"end": 23785,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 23763,
											"end": 23785,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23763,
											"end": 23785,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23794,
											"end": 23826,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "591"
										},
										{
											"begin": 23820,
											"end": 23825,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23794,
											"end": 23826,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 23794,
											"end": 23826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23794,
											"end": 23826,
											"name": "tag",
											"source": 13,
											"value": "591"
										},
										{
											"begin": 23794,
											"end": 23826,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23691,
											"end": 23832,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 23691,
											"end": 23832,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23691,
											"end": 23832,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23691,
											"end": 23832,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23691,
											"end": 23832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23838,
											"end": 24187,
											"name": "tag",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 23838,
											"end": 24187,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23907,
											"end": 23913,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23956,
											"end": 23958,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 23944,
											"end": 23953,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23935,
											"end": 23942,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 23931,
											"end": 23954,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 23927,
											"end": 23959,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 23924,
											"end": 24043,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 23924,
											"end": 24043,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "593"
										},
										{
											"begin": 23924,
											"end": 24043,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 23962,
											"end": 24041,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "594"
										},
										{
											"begin": 23962,
											"end": 24041,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 23962,
											"end": 24041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23962,
											"end": 24041,
											"name": "tag",
											"source": 13,
											"value": "594"
										},
										{
											"begin": 23962,
											"end": 24041,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23924,
											"end": 24043,
											"name": "tag",
											"source": 13,
											"value": "593"
										},
										{
											"begin": 23924,
											"end": 24043,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24082,
											"end": 24083,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24107,
											"end": 24170,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "595"
										},
										{
											"begin": 24162,
											"end": 24169,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 24153,
											"end": 24159,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24142,
											"end": 24151,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 24138,
											"end": 24160,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24107,
											"end": 24170,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 24107,
											"end": 24170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24107,
											"end": 24170,
											"name": "tag",
											"source": 13,
											"value": "595"
										},
										{
											"begin": 24107,
											"end": 24170,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24097,
											"end": 24170,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 24097,
											"end": 24170,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24053,
											"end": 24180,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23838,
											"end": 24187,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 23838,
											"end": 24187,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23838,
											"end": 24187,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23838,
											"end": 24187,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23838,
											"end": 24187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24193,
											"end": 25246,
											"name": "tag",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 24193,
											"end": 25246,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24516,
											"end": 24520,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24554,
											"end": 24557,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 24543,
											"end": 24552,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24539,
											"end": 24558,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24531,
											"end": 24558,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24531,
											"end": 24558,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24568,
											"end": 24639,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "597"
										},
										{
											"begin": 24636,
											"end": 24637,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24625,
											"end": 24634,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 24621,
											"end": 24638,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24612,
											"end": 24618,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 24568,
											"end": 24639,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 24568,
											"end": 24639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24568,
											"end": 24639,
											"name": "tag",
											"source": 13,
											"value": "597"
										},
										{
											"begin": 24568,
											"end": 24639,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24649,
											"end": 24721,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "598"
										},
										{
											"begin": 24717,
											"end": 24719,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 24706,
											"end": 24715,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 24702,
											"end": 24720,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24693,
											"end": 24699,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 24649,
											"end": 24721,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 24649,
											"end": 24721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24649,
											"end": 24721,
											"name": "tag",
											"source": 13,
											"value": "598"
										},
										{
											"begin": 24649,
											"end": 24721,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24768,
											"end": 24777,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24762,
											"end": 24766,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24758,
											"end": 24778,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 24753,
											"end": 24755,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 24742,
											"end": 24751,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 24738,
											"end": 24756,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24731,
											"end": 24779,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 24796,
											"end": 24904,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "599"
										},
										{
											"begin": 24899,
											"end": 24903,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24890,
											"end": 24896,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 24796,
											"end": 24904,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 24796,
											"end": 24904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24796,
											"end": 24904,
											"name": "tag",
											"source": 13,
											"value": "599"
										},
										{
											"begin": 24796,
											"end": 24904,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24788,
											"end": 24904,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24788,
											"end": 24904,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24951,
											"end": 24960,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24945,
											"end": 24949,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24941,
											"end": 24961,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 24936,
											"end": 24938,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 24925,
											"end": 24934,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 24921,
											"end": 24939,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24914,
											"end": 24962,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 24979,
											"end": 25087,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "600"
										},
										{
											"begin": 25082,
											"end": 25086,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 25073,
											"end": 25079,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 24979,
											"end": 25087,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 24979,
											"end": 25087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24979,
											"end": 25087,
											"name": "tag",
											"source": 13,
											"value": "600"
										},
										{
											"begin": 24979,
											"end": 25087,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24971,
											"end": 25087,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24971,
											"end": 25087,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25135,
											"end": 25144,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 25129,
											"end": 25133,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 25125,
											"end": 25145,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 25119,
											"end": 25122,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 25108,
											"end": 25117,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 25104,
											"end": 25123,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 25097,
											"end": 25146,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 25163,
											"end": 25239,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "601"
										},
										{
											"begin": 25234,
											"end": 25238,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 25225,
											"end": 25231,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 25163,
											"end": 25239,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 25163,
											"end": 25239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25163,
											"end": 25239,
											"name": "tag",
											"source": 13,
											"value": "601"
										},
										{
											"begin": 25163,
											"end": 25239,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25155,
											"end": 25239,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 25155,
											"end": 25239,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24193,
											"end": 25246,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 24193,
											"end": 25246,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 24193,
											"end": 25246,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24193,
											"end": 25246,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24193,
											"end": 25246,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24193,
											"end": 25246,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24193,
											"end": 25246,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24193,
											"end": 25246,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24193,
											"end": 25246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								},
								"BE7838470A3C26528D43BAE23565234ED295A39BDE7B6C68AC16C023B38BF94F": "68747470733a2f2f6d796170692e636f6d2f6170692f746f6b656e2f7b69647d2e6a736f6e"
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/MultiNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"burnToken(uint256,uint256)": "8225b247",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mintToken(uint256,uint256)": "20cbf5f9",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenSupply(uint256)": "2693ebf2",
							"transferOwnership(address)": "f2fde38b",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MultiNFT.sol\":\"MultiNFT\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd9b0b8ee1ac6dfee14eb1ad4383a4739dbaa0f2036594bb3a16f0408085dadde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6309805132e519162d1134c67df22dd963323a9208b4f41344a4c13ed63c1026\",\"dweb:/ipfs/QmTBPHnf6qbtAD4NVnKVFmubUHRqMDPLkseR6apxTUpsQo\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xe64b3445a3f638890af7ad92464cd18f1f202a2f5a7ed42dabf74317bae43303\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6620b77b8dcd786149534b1c664f94ff1f8bb1ad141e8da7d9ec64b9624c73f0\",\"dweb:/ipfs/QmVWHh5UvQ7PxRUtUNfd94mSxxxStuzV1NBZtLiKqKpBrQ\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"contracts/MultiNFT.sol\":{\"keccak256\":\"0xd59d753226229b61785f901f04776d2bab82d59b6d86eaaff714f898835ab902\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e78955354b967b832e77f77d0ded5f8aada3b0202fb247373493f9a246c83277\",\"dweb:/ipfs/QmZ1EoZTV8qCB4888q5BWPRDsCJUpKnzU3Wk1JRT1GZpoX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 326,
								"contract": "contracts/MultiNFT.sol:MultiNFT",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 332,
								"contract": "contracts/MultiNFT.sol:MultiNFT",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 334,
								"contract": "contracts/MultiNFT.sol:MultiNFT",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/MultiNFT.sol:MultiNFT",
								"label": "_owner",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 2933,
								"contract": "contracts/MultiNFT.sol:MultiNFT",
								"label": "tokenSupply",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1721
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1722,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1721,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1721,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1721
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1711,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1711,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
					"exportedSymbols": {
						"Arrays": [
							1699
						],
						"Context": [
							1721
						],
						"ERC1155": [
							1335
						],
						"ERC165": [
							1855
						],
						"IERC1155": [
							1458
						],
						"IERC1155Errors": [
							284
						],
						"IERC1155MetadataURI": [
							1516
						],
						"IERC1155Receiver": [
							1500
						],
						"IERC165": [
							1867
						]
					},
					"id": 1336,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 1459,
							"src": "135:40:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC1155",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1458,
										"src": "143:8:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "./IERC1155Receiver.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 1501,
							"src": "176:56:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC1155Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1500,
										"src": "184:16:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
							"file": "./extensions/IERC1155MetadataURI.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 1517,
							"src": "233:73:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "IERC1155MetadataURI",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1516,
										"src": "241:19:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 1722,
							"src": "307:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1721,
										"src": "315:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 297,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 1856,
							"src": "356:69:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 295,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1867,
										"src": "364:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 296,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1855,
										"src": "373:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Arrays.sol",
							"file": "../../utils/Arrays.sol",
							"id": 299,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 1700,
							"src": "426:46:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 298,
										"name": "Arrays",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1699,
										"src": "434:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 301,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 285,
							"src": "473:67:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 300,
										"name": "IERC1155Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 284,
										"src": "481:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 303,
										"name": "Context",
										"nameLocations": [
											"756:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1721,
										"src": "756:7:2"
									},
									"id": 304,
									"nodeType": "InheritanceSpecifier",
									"src": "756:7:2"
								},
								{
									"baseName": {
										"id": 305,
										"name": "ERC165",
										"nameLocations": [
											"765:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1855,
										"src": "765:6:2"
									},
									"id": 306,
									"nodeType": "InheritanceSpecifier",
									"src": "765:6:2"
								},
								{
									"baseName": {
										"id": 307,
										"name": "IERC1155",
										"nameLocations": [
											"773:8:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1458,
										"src": "773:8:2"
									},
									"id": 308,
									"nodeType": "InheritanceSpecifier",
									"src": "773:8:2"
								},
								{
									"baseName": {
										"id": 309,
										"name": "IERC1155MetadataURI",
										"nameLocations": [
											"783:19:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1516,
										"src": "783:19:2"
									},
									"id": 310,
									"nodeType": "InheritanceSpecifier",
									"src": "783:19:2"
								},
								{
									"baseName": {
										"id": 311,
										"name": "IERC1155Errors",
										"nameLocations": [
											"804:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 284,
										"src": "804:14:2"
									},
									"id": 312,
									"nodeType": "InheritanceSpecifier",
									"src": "804:14:2"
								}
							],
							"canonicalName": "ERC1155",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 302,
								"nodeType": "StructuredDocumentation",
								"src": "542:184:2",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155"
							},
							"fullyImplemented": true,
							"id": 1335,
							"linearizedBaseContracts": [
								1335,
								284,
								1516,
								1458,
								1855,
								1867,
								1721
							],
							"name": "ERC1155",
							"nameLocation": "745:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 316,
									"libraryName": {
										"id": 313,
										"name": "Arrays",
										"nameLocations": [
											"831:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1699,
										"src": "831:6:2"
									},
									"nodeType": "UsingForDirective",
									"src": "825:27:2",
									"typeName": {
										"baseType": {
											"id": 314,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "842:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 315,
										"nodeType": "ArrayTypeName",
										"src": "842:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									}
								},
								{
									"global": false,
									"id": 320,
									"libraryName": {
										"id": 317,
										"name": "Arrays",
										"nameLocations": [
											"863:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1699,
										"src": "863:6:2"
									},
									"nodeType": "UsingForDirective",
									"src": "857:27:2",
									"typeName": {
										"baseType": {
											"id": 318,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "874:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 319,
										"nodeType": "ArrayTypeName",
										"src": "874:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									}
								},
								{
									"constant": false,
									"id": 326,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "957:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 1335,
									"src": "890:76:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 325,
										"keyName": "id",
										"keyNameLocation": "906:2:2",
										"keyType": {
											"id": 321,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "898:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "890:58:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 324,
											"keyName": "account",
											"keyNameLocation": "928:7:2",
											"keyType": {
												"id": 322,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "920:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "912:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 323,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "939:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 332,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1043:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 1335,
									"src": "973:88:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 331,
										"keyName": "account",
										"keyNameLocation": "989:7:2",
										"keyType": {
											"id": 327,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "981:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "973:61:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 330,
											"keyName": "operator",
											"keyNameLocation": "1016:8:2",
											"keyType": {
												"id": 328,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1008:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1000:33:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 329,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1028:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 334,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "1197:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 1335,
									"src": "1182:19:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 333,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1182:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1283:30:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 341,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "1301:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 340,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "1293:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1293:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "1293:13:2"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "1208:38:2",
										"text": " @dev See {_setURI}."
									},
									"id": 345,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "1277:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1263:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 336,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1263:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:20:2"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1283:0:2"
									},
									"scope": 1335,
									"src": "1251:62:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1854,
										1866
									],
									"body": {
										"id": 375,
										"nodeType": "Block",
										"src": "1488:197:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 368,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 356,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "1517:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 358,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1458,
																			"src": "1537:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1458_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1458_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 357,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1532:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1532:14:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$1458",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 360,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1547:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1532:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1517:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 362,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "1574:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 364,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1516,
																			"src": "1594:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1516_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1516_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 363,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1589:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1589:25:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1516",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1615:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1589:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1574:52:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1517:109:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 371,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "1666:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 369,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1642:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155_$1335_$",
																	"typeString": "type(contract super ERC1155)"
																}
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1648:17:2",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1854,
															"src": "1642:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1642:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1517:161:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 355,
												"id": 374,
												"nodeType": "Return",
												"src": "1498:180:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1319:56:2",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1389:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 352,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 350,
												"name": "ERC165",
												"nameLocations": [
													"1456:6:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1855,
												"src": "1456:6:2"
											},
											{
												"id": 351,
												"name": "IERC165",
												"nameLocations": [
													"1464:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1867,
												"src": "1464:7:2"
											}
										],
										"src": "1447:25:2"
									},
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1414:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "1407:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 347,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1407:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1406:20:2"
									},
									"returnParameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "1482:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 353,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1482:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1481:6:2"
									},
									"scope": 1335,
									"src": "1380:305:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1515
									],
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "2159:28:2",
										"statements": [
											{
												"expression": {
													"id": 384,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 334,
													"src": "2176:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 383,
												"id": 385,
												"nodeType": "Return",
												"src": "2169:11:2"
											}
										]
									},
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "1691:388:2",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "2093:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "2097:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2097:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2096:18:2"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "2144:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 381,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2144:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2143:15:2"
									},
									"scope": 1335,
									"src": "2084:103:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1396
									],
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "2333:46:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 397,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "2350:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 399,
														"indexExpression": {
															"id": 398,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "2360:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2350:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 401,
													"indexExpression": {
														"id": 400,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 390,
														"src": "2364:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2350:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 396,
												"id": 402,
												"nodeType": "Return",
												"src": "2343:29:2"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "2193:49:2",
										"text": " @dev See {IERC1155-balanceOf}."
									},
									"functionSelector": "00fdd58e",
									"id": 404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2256:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2274:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "2266:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2266:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2291:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "2283:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2283:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2265:29:2"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "2324:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:9:2"
									},
									"scope": 1335,
									"src": "2247:132:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1409
									],
									"body": {
										"id": 473,
										"nodeType": "Block",
										"src": "2678:410:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 417,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "2692:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 418,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2701:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2692:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 419,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "2711:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2715:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2692:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 430,
												"nodeType": "IfStatement",
												"src": "2688:121:2",
												"trueBody": {
													"id": 429,
													"nodeType": "Block",
													"src": "2723:86:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 423,
																			"name": "ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 411,
																			"src": "2770:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2774:6:2",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "2770:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 425,
																			"name": "accounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 408,
																			"src": "2782:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2791:6:2",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "2782:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 422,
																	"name": "ERC1155InvalidArrayLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 283,
																	"src": "2744:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2744:54:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 428,
															"nodeType": "RevertStatement",
															"src": "2737:61:2"
														}
													]
												}
											},
											{
												"assignments": [
													435
												],
												"declarations": [
													{
														"constant": false,
														"id": 435,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "2836:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 473,
														"src": "2819:30:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 433,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2819:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 434,
															"nodeType": "ArrayTypeName",
															"src": "2819:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 442,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 439,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 408,
																"src": "2866:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2875:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2866:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 438,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2852:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 436,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2856:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 437,
															"nodeType": "ArrayTypeName",
															"src": "2856:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2852:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2819:63:2"
											},
											{
												"body": {
													"id": 469,
													"nodeType": "Block",
													"src": "2939:112:2",
													"statements": [
														{
															"expression": {
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 454,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 435,
																		"src": "2953:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 456,
																	"indexExpression": {
																		"id": 455,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 444,
																		"src": "2967:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2953:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 460,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 444,
																					"src": "3010:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 458,
																					"name": "accounts",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 408,
																					"src": "2982:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 459,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2991:18:2",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1698,
																				"src": "2982:27:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_array$_t_address_$dyn_memory_ptr_$",
																					"typeString": "function (address[] memory,uint256) pure returns (address)"
																				}
																			},
																			"id": 461,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2982:30:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"id": 464,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 444,
																					"src": "3037:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 462,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 411,
																					"src": "3014:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 463,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3018:18:2",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1685,
																				"src": "3014:22:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 465,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3014:25:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 457,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 404,
																		"src": "2972:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2972:68:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2953:87:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 468,
															"nodeType": "ExpressionStatement",
															"src": "2953:87:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 447,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "2913:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 448,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "2917:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 449,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2926:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2917:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2913:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 470,
												"initializationExpression": {
													"assignments": [
														444
													],
													"declarations": [
														{
															"constant": false,
															"id": 444,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2906:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 470,
															"src": "2898:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 443,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2898:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 446,
													"initialValue": {
														"hexValue": "30",
														"id": 445,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2910:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2898:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2934:3:2",
														"subExpression": {
															"id": 451,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "2936:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 453,
													"nodeType": "ExpressionStatement",
													"src": "2934:3:2"
												},
												"nodeType": "ForStatement",
												"src": "2893:158:2"
											},
											{
												"expression": {
													"id": 471,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 435,
													"src": "3068:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 416,
												"id": 472,
												"nodeType": "Return",
												"src": "3061:20:2"
											}
										]
									},
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "2385:146:2",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2545:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2586:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "2569:25:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 406,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2569:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 407,
													"nodeType": "ArrayTypeName",
													"src": "2569:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2621:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "2604:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 409,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2604:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 410,
													"nodeType": "ArrayTypeName",
													"src": "2604:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2559:71:2"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "2660:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 413,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2660:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 414,
													"nodeType": "ArrayTypeName",
													"src": "2660:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2659:18:2"
									},
									"scope": 1335,
									"src": "2536:552:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1417
									],
									"body": {
										"id": 489,
										"nodeType": "Block",
										"src": "3231:69:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 483,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1711,
																"src": "3260:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3260:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 485,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "3274:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "3284:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 482,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1180,
														"src": "3241:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3241:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 488,
												"nodeType": "ExpressionStatement",
												"src": "3241:52:2"
											}
										]
									},
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "3094:57:2",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 490,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3165:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3191:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "3183:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3183:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3206:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "3201:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 478,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3201:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3182:33:2"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3231:0:2"
									},
									"scope": 1335,
									"src": "3156:144:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1427
									],
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "3463:61:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 500,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "3480:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 502,
														"indexExpression": {
															"id": 501,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "3499:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3480:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 504,
													"indexExpression": {
														"id": 503,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "3508:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3480:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 499,
												"id": 505,
												"nodeType": "Return",
												"src": "3473:44:2"
											}
										]
									},
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "3306:56:2",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3376:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3401:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "3393:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3418:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "3410:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3410:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3392:35:2"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "3457:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 497,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3457:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3456:6:2"
									},
									"scope": 1335,
									"src": "3367:157:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1441
									],
									"body": {
										"id": 550,
										"nodeType": "Block",
										"src": "3704:238:2",
										"statements": [
											{
												"assignments": [
													522
												],
												"declarations": [
													{
														"constant": false,
														"id": 522,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "3722:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 550,
														"src": "3714:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 521,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3714:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 525,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 523,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1711,
														"src": "3731:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3731:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3714:29:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 528,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 526,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "3757:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 527,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "3765:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3757:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 533,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "3775:31:2",
														"subExpression": {
															"arguments": [
																{
																	"id": 530,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 510,
																	"src": "3793:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 531,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 522,
																	"src": "3799:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 529,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "3776:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3776:30:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3757:49:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 541,
												"nodeType": "IfStatement",
												"src": "3753:129:2",
												"trueBody": {
													"id": 540,
													"nodeType": "Block",
													"src": "3808:74:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 536,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 522,
																		"src": "3858:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 537,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 510,
																		"src": "3866:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 535,
																	"name": "ERC1155MissingApprovalForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "3829:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3829:42:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 539,
															"nodeType": "RevertStatement",
															"src": "3822:49:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 543,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "3909:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 544,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "3915:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 545,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "3919:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 546,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "3923:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 547,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "3930:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 542,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 892,
														"src": "3891:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3891:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 549,
												"nodeType": "ExpressionStatement",
												"src": "3891:44:2"
											}
										]
									},
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "3530:56:2",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3600:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3625:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "3617:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3617:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3639:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "3631:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3651:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "3643:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3643:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3663:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "3655:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3655:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "3670:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 517,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3670:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3616:72:2"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3704:0:2"
									},
									"scope": 1335,
									"src": "3591:351:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1457
									],
									"body": {
										"id": 596,
										"nodeType": "Block",
										"src": "4198:245:2",
										"statements": [
											{
												"assignments": [
													568
												],
												"declarations": [
													{
														"constant": false,
														"id": 568,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "4216:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 596,
														"src": "4208:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 567,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4208:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 571,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 569,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1711,
														"src": "4225:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4225:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4208:29:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 572,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "4251:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 573,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "4259:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4251:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4269:31:2",
														"subExpression": {
															"arguments": [
																{
																	"id": 576,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 554,
																	"src": "4287:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 577,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 568,
																	"src": "4293:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 575,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "4270:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4270:30:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4251:49:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 587,
												"nodeType": "IfStatement",
												"src": "4247:129:2",
												"trueBody": {
													"id": 586,
													"nodeType": "Block",
													"src": "4302:74:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 582,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 568,
																		"src": "4352:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 583,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 554,
																		"src": "4360:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 581,
																	"name": "ERC1155MissingApprovalForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "4323:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4323:42:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 585,
															"nodeType": "RevertStatement",
															"src": "4316:49:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 589,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "4408:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 590,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "4414:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 591,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "4418:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 592,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "4423:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 593,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "4431:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 588,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "4385:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4385:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 595,
												"nodeType": "ExpressionStatement",
												"src": "4385:51:2"
											}
										]
									},
									"documentation": {
										"id": 552,
										"nodeType": "StructuredDocumentation",
										"src": "3948:61:2",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 597,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4023:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4062:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "4054:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4054:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4084:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "4076:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4076:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4113:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "4096:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 557,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4096:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 558,
													"nodeType": "ArrayTypeName",
													"src": "4096:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "4143:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "4126:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 560,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4126:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 561,
													"nodeType": "ArrayTypeName",
													"src": "4126:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4172:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "4159:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 563,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4159:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4044:138:2"
									},
									"returnParameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4198:0:2"
									},
									"scope": 1335,
									"src": "4014:429:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "5251:1174:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 611,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "5265:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 612,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5269:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5265:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 613,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "5279:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 614,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5286:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5279:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5265:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 624,
												"nodeType": "IfStatement",
												"src": "5261:117:2",
												"trueBody": {
													"id": 623,
													"nodeType": "Block",
													"src": "5294:84:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 617,
																			"name": "ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 605,
																			"src": "5341:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 618,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5345:6:2",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5341:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 619,
																			"name": "values",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 608,
																			"src": "5353:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5360:6:2",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5353:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 616,
																	"name": "ERC1155InvalidArrayLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 283,
																	"src": "5315:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5315:52:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 622,
															"nodeType": "RevertStatement",
															"src": "5308:59:2"
														}
													]
												}
											},
											{
												"assignments": [
													626
												],
												"declarations": [
													{
														"constant": false,
														"id": 626,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "5396:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 749,
														"src": "5388:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 625,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5388:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 629,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 627,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1711,
														"src": "5407:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5407:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5388:31:2"
											},
											{
												"body": {
													"id": 710,
													"nodeType": "Block",
													"src": "5471:650:2",
													"statements": [
														{
															"assignments": [
																642
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 642,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "5493:2:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 710,
																	"src": "5485:10:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 641,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5485:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 647,
															"initialValue": {
																"arguments": [
																	{
																		"id": 645,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 631,
																		"src": "5521:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 643,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 605,
																		"src": "5498:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5502:18:2",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1685,
																	"src": "5498:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:25:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5485:38:2"
														},
														{
															"assignments": [
																649
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 649,
																	"mutability": "mutable",
																	"name": "value",
																	"nameLocation": "5545:5:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 710,
																	"src": "5537:13:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 648,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5537:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 654,
															"initialValue": {
																"arguments": [
																	{
																		"id": 652,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 631,
																		"src": "5579:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 650,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 608,
																		"src": "5553:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5560:18:2",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1685,
																	"src": "5553:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5553:28:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5537:44:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 660,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 655,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 600,
																	"src": "5600:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5616:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5608:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 656,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5608:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5608:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5600:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 693,
															"nodeType": "IfStatement",
															"src": "5596:420:2",
															"trueBody": {
																"id": 692,
																"nodeType": "Block",
																"src": "5620:396:2",
																"statements": [
																	{
																		"assignments": [
																			662
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 662,
																				"mutability": "mutable",
																				"name": "fromBalance",
																				"nameLocation": "5646:11:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 692,
																				"src": "5638:19:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 661,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "5638:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 668,
																		"initialValue": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 663,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 326,
																					"src": "5660:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 665,
																				"indexExpression": {
																					"id": 664,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 642,
																					"src": "5670:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5660:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 667,
																			"indexExpression": {
																				"id": 666,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 600,
																				"src": "5674:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5660:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "5638:41:2"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 669,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 662,
																				"src": "5701:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 670,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 649,
																				"src": "5715:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5701:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 680,
																		"nodeType": "IfStatement",
																		"src": "5697:129:2",
																		"trueBody": {
																			"id": 679,
																			"nodeType": "Block",
																			"src": "5722:104:2",
																			"statements": [
																				{
																					"errorCall": {
																						"arguments": [
																							{
																								"id": 673,
																								"name": "from",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 600,
																								"src": "5778:4:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 674,
																								"name": "fromBalance",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 662,
																								"src": "5784:11:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 675,
																								"name": "value",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 649,
																								"src": "5797:5:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 676,
																								"name": "id",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 642,
																								"src": "5804:2:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 672,
																							"name": "ERC1155InsufficientBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 249,
																							"src": "5751:26:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																								"typeString": "function (address,uint256,uint256,uint256) pure"
																							}
																						},
																						"id": 677,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5751:56:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 678,
																					"nodeType": "RevertStatement",
																					"src": "5744:63:2"
																				}
																			]
																		}
																	},
																	{
																		"id": 691,
																		"nodeType": "UncheckedBlock",
																		"src": "5843:159:2",
																		"statements": [
																			{
																				"expression": {
																					"id": 689,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"baseExpression": {
																							"baseExpression": {
																								"id": 681,
																								"name": "_balances",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 326,
																								"src": "5942:9:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																									"typeString": "mapping(uint256 => mapping(address => uint256))"
																								}
																							},
																							"id": 684,
																							"indexExpression": {
																								"id": 682,
																								"name": "id",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 642,
																								"src": "5952:2:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "5942:13:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 685,
																						"indexExpression": {
																							"id": 683,
																							"name": "from",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 600,
																							"src": "5956:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "5942:19:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 688,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 686,
																							"name": "fromBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 662,
																							"src": "5964:11:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"id": 687,
																							"name": "value",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 649,
																							"src": "5978:5:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5964:19:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "5942:41:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 690,
																				"nodeType": "ExpressionStatement",
																				"src": "5942:41:2"
																			}
																		]
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 699,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 694,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 602,
																	"src": "6034:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6048:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6040:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 695,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6040:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6040:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6034:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 709,
															"nodeType": "IfStatement",
															"src": "6030:81:2",
															"trueBody": {
																"id": 708,
																"nodeType": "Block",
																"src": "6052:59:2",
																"statements": [
																	{
																		"expression": {
																			"id": 706,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 700,
																						"name": "_balances",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 326,
																						"src": "6070:9:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																							"typeString": "mapping(uint256 => mapping(address => uint256))"
																						}
																					},
																					"id": 703,
																					"indexExpression": {
																						"id": 701,
																						"name": "id",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 642,
																						"src": "6080:2:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "6070:13:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 704,
																				"indexExpression": {
																					"id": 702,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 602,
																					"src": "6084:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "6070:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 705,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 649,
																				"src": "6091:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6070:26:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 707,
																		"nodeType": "ExpressionStatement",
																		"src": "6070:26:2"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 634,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 631,
														"src": "5450:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 635,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "5454:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 636,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5458:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5454:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5450:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 711,
												"initializationExpression": {
													"assignments": [
														631
													],
													"declarations": [
														{
															"constant": false,
															"id": 631,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5443:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 711,
															"src": "5435:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 630,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5435:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 633,
													"initialValue": {
														"hexValue": "30",
														"id": 632,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5447:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5435:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "5466:3:2",
														"subExpression": {
															"id": 638,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "5468:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 640,
													"nodeType": "ExpressionStatement",
													"src": "5466:3:2"
												},
												"nodeType": "ForStatement",
												"src": "5430:691:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 712,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "6135:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 713,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6139:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6135:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6149:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6135:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "6343:76:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 740,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "6376:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 741,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 600,
																		"src": "6386:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 742,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 602,
																		"src": "6392:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 605,
																		"src": "6396:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 744,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 608,
																		"src": "6401:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	],
																	"id": 739,
																	"name": "TransferBatch",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1370,
																	"src": "6362:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
																		"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6362:46:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "6357:51:2"
														}
													]
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "6131:288:2",
												"trueBody": {
													"id": 738,
													"nodeType": "Block",
													"src": "6152:185:2",
													"statements": [
														{
															"assignments": [
																717
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 717,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "6174:2:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 738,
																	"src": "6166:10:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 716,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6166:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 722,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6202:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 718,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 605,
																		"src": "6179:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6183:18:2",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1685,
																	"src": "6179:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6179:25:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6166:38:2"
														},
														{
															"assignments": [
																724
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 724,
																	"mutability": "mutable",
																	"name": "value",
																	"nameLocation": "6226:5:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 738,
																	"src": "6218:13:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 723,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6218:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 729,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6260:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 725,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 608,
																		"src": "6234:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6241:18:2",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1685,
																	"src": "6234:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6234:28:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6218:44:2"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 731,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "6296:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 732,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 600,
																		"src": "6306:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 733,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 602,
																		"src": "6312:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 734,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 717,
																		"src": "6316:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 735,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 724,
																		"src": "6320:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 730,
																	"name": "TransferSingle",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1355,
																	"src": "6281:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,address,uint256,uint256)"
																	}
																},
																"id": 736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6281:45:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 737,
															"nodeType": "EmitStatement",
															"src": "6276:50:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 598,
										"nodeType": "StructuredDocumentation",
										"src": "4449:690:2",
										"text": " @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n (or `to`) is the zero address.\n Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n Requirements:\n - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n - `ids` and `values` must have the same length.\n NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5153:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5169:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "5161:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5161:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5183:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "5175:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5175:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "5204:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "5187:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 603,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5187:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 604,
													"nodeType": "ArrayTypeName",
													"src": "5187:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "5226:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "5209:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 606,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5209:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 607,
													"nodeType": "ArrayTypeName",
													"src": "5209:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5160:73:2"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5251:0:2"
									},
									"scope": 1335,
									"src": "5144:1281:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "7195:499:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 767,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "7213:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 768,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "7219:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 769,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 758,
															"src": "7223:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 770,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "7228:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 766,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 750,
														"src": "7205:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7205:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 772,
												"nodeType": "ExpressionStatement",
												"src": "7205:30:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 773,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 755,
														"src": "7249:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7263:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7255:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 774,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7255:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 777,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7255:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7249:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 824,
												"nodeType": "IfStatement",
												"src": "7245:443:2",
												"trueBody": {
													"id": 823,
													"nodeType": "Block",
													"src": "7267:421:2",
													"statements": [
														{
															"assignments": [
																780
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 780,
																	"mutability": "mutable",
																	"name": "operator",
																	"nameLocation": "7289:8:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 823,
																	"src": "7281:16:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 779,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7281:7:2",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 783,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 781,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1711,
																	"src": "7300:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7300:12:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7281:31:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 784,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 758,
																		"src": "7330:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7334:6:2",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7330:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7344:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7330:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 821,
																"nodeType": "Block",
																"src": "7571:107:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 813,
																					"name": "operator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 780,
																					"src": "7625:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 814,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 753,
																					"src": "7635:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 815,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "7641:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 816,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 758,
																					"src": "7645:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				{
																					"id": 817,
																					"name": "values",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "7650:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				{
																					"id": 818,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 763,
																					"src": "7658:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					},
																					{
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 812,
																				"name": "_doSafeBatchTransferAcceptanceCheck",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1318,
																				"src": "7589:35:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
																					"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
																				}
																			},
																			"id": 819,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7589:74:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 820,
																		"nodeType": "ExpressionStatement",
																		"src": "7589:74:2"
																	}
																]
															},
															"id": 822,
															"nodeType": "IfStatement",
															"src": "7326:352:2",
															"trueBody": {
																"id": 811,
																"nodeType": "Block",
																"src": "7347:218:2",
																"statements": [
																	{
																		"assignments": [
																			789
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 789,
																				"mutability": "mutable",
																				"name": "id",
																				"nameLocation": "7373:2:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 811,
																				"src": "7365:10:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 788,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7365:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 794,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 792,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7401:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"expression": {
																					"id": 790,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 758,
																					"src": "7378:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7382:18:2",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1685,
																				"src": "7378:22:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 793,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7378:25:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7365:38:2"
																	},
																	{
																		"assignments": [
																			796
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 796,
																				"mutability": "mutable",
																				"name": "value",
																				"nameLocation": "7429:5:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 811,
																				"src": "7421:13:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 795,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7421:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 801,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 799,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7463:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"expression": {
																					"id": 797,
																					"name": "values",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "7437:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 798,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7444:18:2",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1685,
																				"src": "7437:25:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7437:28:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7421:44:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 803,
																					"name": "operator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 780,
																					"src": "7514:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 804,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 753,
																					"src": "7524:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 805,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "7530:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 806,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 789,
																					"src": "7534:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 807,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 796,
																					"src": "7538:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 808,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 763,
																					"src": "7545:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 802,
																				"name": "_doSafeTransferAcceptanceCheck",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1248,
																				"src": "7483:30:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																					"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
																				}
																			},
																			"id": 809,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7483:67:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 810,
																		"nodeType": "ExpressionStatement",
																		"src": "7483:67:2"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "6431:568:2",
										"text": " @dev Version of {_update} that performs the token acceptance check by calling\n {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n contains code (eg. is a smart contract at the moment of execution).\n IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n update to the contract state after this function would break the check-effect-interaction pattern. Consider\n overriding {_update} instead."
									},
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateWithAcceptanceCheck",
									"nameLocation": "7013:26:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7057:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "7049:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7049:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7079:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "7071:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7071:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "7108:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "7091:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 756,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7091:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 757,
													"nodeType": "ArrayTypeName",
													"src": "7091:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "7138:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "7121:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 759,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7121:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 760,
													"nodeType": "ArrayTypeName",
													"src": "7121:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7167:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "7154:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 762,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7154:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7039:138:2"
									},
									"returnParameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7195:0:2"
									},
									"scope": 1335,
									"src": "7004:690:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 891,
										"nodeType": "Block",
										"src": "8259:355:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 840,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 831,
														"src": "8273:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8287:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8279:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 841,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8279:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 844,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8279:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8273:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 854,
												"nodeType": "IfStatement",
												"src": "8269:88:2",
												"trueBody": {
													"id": 853,
													"nodeType": "Block",
													"src": "8291:66:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 849,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8343:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 848,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8335:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 847,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8335:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8335:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 846,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "8312:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 851,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8312:34:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 852,
															"nodeType": "RevertStatement",
															"src": "8305:41:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 855,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "8370:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 858,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8386:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 857,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8378:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 856,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8378:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 859,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8378:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8370:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 869,
												"nodeType": "IfStatement",
												"src": "8366:88:2",
												"trueBody": {
													"id": 868,
													"nodeType": "Block",
													"src": "8390:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 864,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8440:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 863,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8432:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 862,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8432:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8432:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 861,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "8411:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8411:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 867,
															"nodeType": "RevertStatement",
															"src": "8404:39:2"
														}
													]
												}
											},
											{
												"assignments": [
													874,
													877
												],
												"declarations": [
													{
														"constant": false,
														"id": 874,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "8481:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 891,
														"src": "8464:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 872,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8464:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 873,
															"nodeType": "ArrayTypeName",
															"src": "8464:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 877,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "8503:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 891,
														"src": "8486:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 875,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8486:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 876,
															"nodeType": "ArrayTypeName",
															"src": "8486:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 882,
												"initialValue": {
													"arguments": [
														{
															"id": 879,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "8532:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 880,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "8536:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 878,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "8513:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8513:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8463:79:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 884,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "8579:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 885,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "8585:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 886,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "8589:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 887,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "8594:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 888,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "8602:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 883,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "8552:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8552:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 890,
												"nodeType": "ExpressionStatement",
												"src": "8552:55:2"
											}
										]
									},
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "7700:446:2",
										"text": " @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 892,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "8160:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8186:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "8178:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8178:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8200:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "8192:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8192:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "8212:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "8204:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8204:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8224:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "8216:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8216:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8244:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "8231:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 836,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8231:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8177:72:2"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8259:0:2"
									},
									"scope": 1335,
									"src": "8151:463:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 946,
										"nodeType": "Block",
										"src": "9194:266:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 908,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "9208:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 911,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9222:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 910,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9214:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 909,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9214:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 912,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9214:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9208:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 922,
												"nodeType": "IfStatement",
												"src": "9204:88:2",
												"trueBody": {
													"id": 921,
													"nodeType": "Block",
													"src": "9226:66:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 917,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9278:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 916,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9270:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 915,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9270:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 918,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9270:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 914,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "9247:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9247:34:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 920,
															"nodeType": "RevertStatement",
															"src": "9240:41:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 923,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 895,
														"src": "9305:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 926,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9321:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9313:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 924,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9313:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 927,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9313:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9305:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 937,
												"nodeType": "IfStatement",
												"src": "9301:88:2",
												"trueBody": {
													"id": 936,
													"nodeType": "Block",
													"src": "9325:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 932,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9375:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 931,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9367:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 930,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9367:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9367:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 929,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "9346:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9346:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 935,
															"nodeType": "RevertStatement",
															"src": "9339:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 939,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "9425:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 940,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "9431:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 941,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "9435:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 942,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "9440:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 943,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "9448:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 938,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "9398:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9398:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 945,
												"nodeType": "ExpressionStatement",
												"src": "9398:55:2"
											}
										]
									},
									"documentation": {
										"id": 893,
										"nodeType": "StructuredDocumentation",
										"src": "8620:390:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value.\n - `ids` and `values` must have the same length."
									},
									"id": 947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "9024:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9064:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "9056:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 894,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9056:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9086:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "9078:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9078:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "9115:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "9098:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 898,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9098:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 899,
													"nodeType": "ArrayTypeName",
													"src": "9098:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "9145:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "9128:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 901,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9128:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 902,
													"nodeType": "ArrayTypeName",
													"src": "9128:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9174:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "9161:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 904,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9161:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9046:138:2"
									},
									"returnParameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9194:0:2"
									},
									"scope": 1335,
									"src": "9015:445:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 957,
										"nodeType": "Block",
										"src": "10338:30:2",
										"statements": [
											{
												"expression": {
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 953,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "10348:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 954,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "10355:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "10348:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 956,
												"nodeType": "ExpressionStatement",
												"src": "10348:13:2"
											}
										]
									},
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "9466:811:2",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the values in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "10291:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "10313:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "10299:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 949,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10299:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10298:22:2"
									},
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10338:0:2"
									},
									"scope": 1335,
									"src": "10282:86:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1009,
										"nodeType": "Block",
										"src": "10828:264:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 970,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "10842:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10856:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10848:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 971,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10848:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 974,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10848:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10842:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 984,
												"nodeType": "IfStatement",
												"src": "10838:88:2",
												"trueBody": {
													"id": 983,
													"nodeType": "Block",
													"src": "10860:66:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 979,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10912:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 978,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10904:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 977,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10904:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10904:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 976,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "10881:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 981,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10881:34:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 982,
															"nodeType": "RevertStatement",
															"src": "10874:41:2"
														}
													]
												}
											},
											{
												"assignments": [
													989,
													992
												],
												"declarations": [
													{
														"constant": false,
														"id": 989,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "10953:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 1009,
														"src": "10936:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 987,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10936:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 988,
															"nodeType": "ArrayTypeName",
															"src": "10936:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 992,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "10975:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1009,
														"src": "10958:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 990,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10958:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 991,
															"nodeType": "ArrayTypeName",
															"src": "10958:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 997,
												"initialValue": {
													"arguments": [
														{
															"id": 994,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "11004:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 995,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "11008:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 993,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "10985:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10985:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10935:79:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11059:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1000,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11051:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 999,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11051:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11051:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1003,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "11063:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1004,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "11067:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1005,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "11072:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1006,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "11080:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 998,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "11024:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11024:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1008,
												"nodeType": "ExpressionStatement",
												"src": "11024:61:2"
											}
										]
									},
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "10374:367:2",
										"text": " @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 1010,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "10755:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10769:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "10761:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10761:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "10781:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "10773:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10773:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10793:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "10785:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10785:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10813:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "10800:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 966,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10800:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10760:58:2"
									},
									"returnParameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10828:0:2"
									},
									"scope": 1335,
									"src": "10746:346:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "11630:175:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1024,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1013,
														"src": "11644:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11658:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11650:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1025,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11650:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1028,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11650:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11644:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1038,
												"nodeType": "IfStatement",
												"src": "11640:88:2",
												"trueBody": {
													"id": 1037,
													"nodeType": "Block",
													"src": "11662:66:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1033,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11714:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1032,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11706:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1031,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11706:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1034,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11706:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1030,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "11683:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11683:34:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1036,
															"nodeType": "RevertStatement",
															"src": "11676:41:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1042,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11772:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11764:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1040,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11764:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11764:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1044,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "11776:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1045,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "11780:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1046,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "11785:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1047,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "11793:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1039,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "11737:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11737:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1049,
												"nodeType": "ExpressionStatement",
												"src": "11737:61:2"
											}
										]
									},
									"documentation": {
										"id": 1011,
										"nodeType": "StructuredDocumentation",
										"src": "11098:420:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 1051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "11532:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11551:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "11543:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11543:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "11572:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "11555:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1014,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11555:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1015,
													"nodeType": "ArrayTypeName",
													"src": "11555:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "11594:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "11577:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1017,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11577:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1018,
													"nodeType": "ArrayTypeName",
													"src": "11577:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11615:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "11602:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1020,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11602:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11542:78:2"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11630:0:2"
									},
									"scope": 1335,
									"src": "11523:282:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1100,
										"nodeType": "Block",
										"src": "12164:264:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1061,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "12178:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12194:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1063,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12186:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1062,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12186:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1065,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12186:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12178:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1075,
												"nodeType": "IfStatement",
												"src": "12174:88:2",
												"trueBody": {
													"id": 1074,
													"nodeType": "Block",
													"src": "12198:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1070,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12248:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1069,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12240:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1068,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12240:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1071,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12240:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1067,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "12219:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1072,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12219:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1073,
															"nodeType": "RevertStatement",
															"src": "12212:39:2"
														}
													]
												}
											},
											{
												"assignments": [
													1080,
													1083
												],
												"declarations": [
													{
														"constant": false,
														"id": 1080,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "12289:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 1100,
														"src": "12272:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1078,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12272:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1079,
															"nodeType": "ArrayTypeName",
															"src": "12272:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1083,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "12311:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1100,
														"src": "12294:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1081,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12294:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1082,
															"nodeType": "ArrayTypeName",
															"src": "12294:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1088,
												"initialValue": {
													"arguments": [
														{
															"id": 1085,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "12340:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1086,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "12344:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1084,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "12321:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12321:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12271:79:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1090,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "12387:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1093,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12401:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1092,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12393:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1091,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12393:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12393:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1095,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1080,
															"src": "12405:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1096,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "12410:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12418:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1089,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "12360:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12360:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1099,
												"nodeType": "ExpressionStatement",
												"src": "12360:61:2"
											}
										]
									},
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "11811:283:2",
										"text": " @dev Destroys a `value` amount of tokens of type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`."
									},
									"id": 1101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "12108:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12122:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "12114:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1053,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12114:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "12136:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "12128:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12128:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12148:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "12140:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12140:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12113:41:2"
									},
									"returnParameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12164:0:2"
									},
									"scope": 1335,
									"src": "12099:329:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1139,
										"nodeType": "Block",
										"src": "12874:175:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1113,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "12888:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12904:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12896:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1114,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12896:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1117,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12896:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12888:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1127,
												"nodeType": "IfStatement",
												"src": "12884:88:2",
												"trueBody": {
													"id": 1126,
													"nodeType": "Block",
													"src": "12908:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1122,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12958:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1121,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12950:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1120,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12950:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12950:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1119,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "12929:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12929:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1125,
															"nodeType": "RevertStatement",
															"src": "12922:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1129,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "13008:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13022:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13014:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1130,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13014:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13014:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1134,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1107,
															"src": "13026:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1135,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1110,
															"src": "13031:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13039:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1128,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "12981:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12981:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1138,
												"nodeType": "ExpressionStatement",
												"src": "12981:61:2"
											}
										]
									},
									"documentation": {
										"id": 1102,
										"nodeType": "StructuredDocumentation",
										"src": "12434:345:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`.\n - `ids` and `values` must have the same length."
									},
									"id": 1140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "12793:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12812:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "12804:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12804:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "12835:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "12818:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1105,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12818:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1106,
													"nodeType": "ArrayTypeName",
													"src": "12818:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "12857:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "12840:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1108,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12840:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1109,
													"nodeType": "ArrayTypeName",
													"src": "12840:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12803:61:2"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12874:0:2"
									},
									"scope": 1335,
									"src": "12784:265:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1179,
										"nodeType": "Block",
										"src": "13361:222:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1150,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1145,
														"src": "13375:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13395:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13387:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1151,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13387:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1154,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13387:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13375:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1164,
												"nodeType": "IfStatement",
												"src": "13371:94:2",
												"trueBody": {
													"id": 1163,
													"nodeType": "Block",
													"src": "13399:66:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1159,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13451:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "13443:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1157,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "13443:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13443:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1156,
																	"name": "ERC1155InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "13420:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13420:34:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1162,
															"nodeType": "RevertStatement",
															"src": "13413:41:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1165,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 332,
																"src": "13474:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1168,
															"indexExpression": {
																"id": 1166,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1143,
																"src": "13493:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13474:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1169,
														"indexExpression": {
															"id": 1167,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "13500:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13474:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1170,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "13512:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13474:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1172,
												"nodeType": "ExpressionStatement",
												"src": "13474:46:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1174,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1143,
															"src": "13550:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1175,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "13557:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1176,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "13567:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1173,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1379,
														"src": "13535:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13535:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1178,
												"nodeType": "EmitStatement",
												"src": "13530:46:2"
											}
										]
									},
									"documentation": {
										"id": 1141,
										"nodeType": "StructuredDocumentation",
										"src": "13055:208:2",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."
									},
									"id": 1180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "13277:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13304:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "13296:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13296:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13319:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "13311:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13311:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13334:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "13329:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1146,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13329:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13295:48:2"
									},
									"returnParameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13361:0:2"
									},
									"scope": 1335,
									"src": "13268:315:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1247,
										"nodeType": "Block",
										"src": "13953:782:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1196,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1187,
																"src": "13967:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13970:4:2",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "13967:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13975:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "13967:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1199,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13984:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13967:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1246,
												"nodeType": "IfStatement",
												"src": "13963:766:2",
												"trueBody": {
													"id": 1245,
													"nodeType": "Block",
													"src": "13987:742:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1225,
																		"nodeType": "Block",
																		"src": "14103:206:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1218,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1214,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1212,
																						"src": "14125:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1215,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1500,
																								"src": "14137:16:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1500_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1216,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "14154:17:2",
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1481,
																							"src": "14137:34:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1217,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "14172:8:2",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "14137:43:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "14125:55:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1224,
																				"nodeType": "IfStatement",
																				"src": "14121:174:2",
																				"trueBody": {
																					"id": 1223,
																					"nodeType": "Block",
																					"src": "14182:113:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1220,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1187,
																										"src": "14273:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1219,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 259,
																									"src": "14250:22:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1221,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14250:26:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1222,
																							"nodeType": "RevertStatement",
																							"src": "14243:33:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1226,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1213,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1212,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "14093:8:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1226,
																				"src": "14086:15:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1211,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "14086:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14085:17:2"
																	},
																	"src": "14077:232:2"
																},
																{
																	"block": {
																		"id": 1242,
																		"nodeType": "Block",
																		"src": "14338:381:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1233,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1230,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1228,
																							"src": "14360:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1231,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "14367:6:2",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "14360:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1232,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14377:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "14360:18:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1240,
																					"nodeType": "Block",
																					"src": "14515:190:2",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "14601:86:2",
																								"nodeType": "YulBlock",
																								"src": "14601:86:2",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "14638:2:2",
																															"nodeType": "YulLiteral",
																															"src": "14638:2:2",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "14642:6:2",
																															"nodeType": "YulIdentifier",
																															"src": "14642:6:2"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "14634:3:2",
																														"nodeType": "YulIdentifier",
																														"src": "14634:3:2"
																													},
																													"nativeSrc": "14634:15:2",
																													"nodeType": "YulFunctionCall",
																													"src": "14634:15:2"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "14657:6:2",
																															"nodeType": "YulIdentifier",
																															"src": "14657:6:2"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "14651:5:2",
																														"nodeType": "YulIdentifier",
																														"src": "14651:5:2"
																													},
																													"nativeSrc": "14651:13:2",
																													"nodeType": "YulFunctionCall",
																													"src": "14651:13:2"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "14627:6:2",
																												"nodeType": "YulIdentifier",
																												"src": "14627:6:2"
																											},
																											"nativeSrc": "14627:38:2",
																											"nodeType": "YulFunctionCall",
																											"src": "14627:38:2"
																										},
																										"nativeSrc": "14627:38:2",
																										"nodeType": "YulExpressionStatement",
																										"src": "14627:38:2"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1228,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14642:6:2",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1228,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14657:6:2",
																									"valueSize": 1
																								}
																							],
																							"id": 1239,
																							"nodeType": "InlineAssembly",
																							"src": "14592:95:2"
																						}
																					]
																				},
																				"id": 1241,
																				"nodeType": "IfStatement",
																				"src": "14356:349:2",
																				"trueBody": {
																					"id": 1238,
																					"nodeType": "Block",
																					"src": "14380:129:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1235,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1187,
																										"src": "14487:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1234,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 259,
																									"src": "14464:22:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1236,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14464:26:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1237,
																							"nodeType": "RevertStatement",
																							"src": "14457:33:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1243,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1229,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1228,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "14330:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1243,
																				"src": "14317:19:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1227,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "14317:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14316:21:2"
																	},
																	"src": "14310:409:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1205,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1183,
																		"src": "14044:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1206,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1185,
																		"src": "14054:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1207,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1189,
																		"src": "14060:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1208,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1191,
																		"src": "14064:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1209,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1193,
																		"src": "14071:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1202,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1187,
																				"src": "14022:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1201,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1500,
																			"src": "14005:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1500_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1203,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14005:20:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1500",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14026:17:2",
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1481,
																	"src": "14005:38:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14005:71:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1244,
															"nodeType": "TryStatement",
															"src": "14001:718:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1181,
										"nodeType": "StructuredDocumentation",
										"src": "13589:167:2",
										"text": " @dev Performs an acceptance check by calling {IERC1155-onERC1155Received} on the `to` address\n if it contains code at the moment of execution."
									},
									"id": 1248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "13770:30:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13818:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "13810:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13810:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13844:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "13836:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13836:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13866:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "13858:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13858:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "13886:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "13878:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13878:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13906:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "13898:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13898:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13934:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "13921:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1192,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13921:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13800:144:2"
									},
									"returnParameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13953:0:2"
									},
									"scope": 1335,
									"src": "13761:974:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1317,
										"nodeType": "Block",
										"src": "15140:824:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1266,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1255,
																"src": "15154:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15157:4:2",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "15154:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1268,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15162:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "15154:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1269,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15171:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15154:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1316,
												"nodeType": "IfStatement",
												"src": "15150:808:2",
												"trueBody": {
													"id": 1315,
													"nodeType": "Block",
													"src": "15174:784:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1295,
																		"nodeType": "Block",
																		"src": "15327:211:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1288,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1284,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1282,
																						"src": "15349:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1285,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1500,
																								"src": "15361:16:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1500_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1286,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "15378:22:2",
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1499,
																							"src": "15361:39:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1287,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "15401:8:2",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "15361:48:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "15349:60:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1294,
																				"nodeType": "IfStatement",
																				"src": "15345:179:2",
																				"trueBody": {
																					"id": 1293,
																					"nodeType": "Block",
																					"src": "15411:113:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1290,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1255,
																										"src": "15502:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1289,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 259,
																									"src": "15479:22:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1291,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15479:26:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1292,
																							"nodeType": "RevertStatement",
																							"src": "15472:33:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1296,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1283,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1282,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "15304:8:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1296,
																				"src": "15297:15:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1281,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "15297:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15279:47:2"
																	},
																	"src": "15271:267:2"
																},
																{
																	"block": {
																		"id": 1312,
																		"nodeType": "Block",
																		"src": "15567:381:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1303,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1300,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1298,
																							"src": "15589:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1301,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "15596:6:2",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "15589:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1302,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "15606:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "15589:18:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1310,
																					"nodeType": "Block",
																					"src": "15744:190:2",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "15830:86:2",
																								"nodeType": "YulBlock",
																								"src": "15830:86:2",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "15867:2:2",
																															"nodeType": "YulLiteral",
																															"src": "15867:2:2",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "15871:6:2",
																															"nodeType": "YulIdentifier",
																															"src": "15871:6:2"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "15863:3:2",
																														"nodeType": "YulIdentifier",
																														"src": "15863:3:2"
																													},
																													"nativeSrc": "15863:15:2",
																													"nodeType": "YulFunctionCall",
																													"src": "15863:15:2"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "15886:6:2",
																															"nodeType": "YulIdentifier",
																															"src": "15886:6:2"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "15880:5:2",
																														"nodeType": "YulIdentifier",
																														"src": "15880:5:2"
																													},
																													"nativeSrc": "15880:13:2",
																													"nodeType": "YulFunctionCall",
																													"src": "15880:13:2"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "15856:6:2",
																												"nodeType": "YulIdentifier",
																												"src": "15856:6:2"
																											},
																											"nativeSrc": "15856:38:2",
																											"nodeType": "YulFunctionCall",
																											"src": "15856:38:2"
																										},
																										"nativeSrc": "15856:38:2",
																										"nodeType": "YulExpressionStatement",
																										"src": "15856:38:2"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1298,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "15871:6:2",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1298,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "15886:6:2",
																									"valueSize": 1
																								}
																							],
																							"id": 1309,
																							"nodeType": "InlineAssembly",
																							"src": "15821:95:2"
																						}
																					]
																				},
																				"id": 1311,
																				"nodeType": "IfStatement",
																				"src": "15585:349:2",
																				"trueBody": {
																					"id": 1308,
																					"nodeType": "Block",
																					"src": "15609:129:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1305,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1255,
																										"src": "15716:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1304,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 259,
																									"src": "15693:22:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1306,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15693:26:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1307,
																							"nodeType": "RevertStatement",
																							"src": "15686:33:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1313,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1299,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1298,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "15559:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1313,
																				"src": "15546:19:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1297,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "15546:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15545:21:2"
																	},
																	"src": "15539:409:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1275,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1251,
																		"src": "15236:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1276,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1253,
																		"src": "15246:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1277,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1258,
																		"src": "15252:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1278,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1261,
																		"src": "15257:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1279,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1263,
																		"src": "15265:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1272,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1255,
																				"src": "15209:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1271,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1500,
																			"src": "15192:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1500_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15192:20:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1500",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15213:22:2",
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1499,
																	"src": "15192:43:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15192:78:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1314,
															"nodeType": "TryStatement",
															"src": "15188:760:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1249,
										"nodeType": "StructuredDocumentation",
										"src": "14741:177:2",
										"text": " @dev Performs a batch acceptance check by calling {IERC1155-onERC1155BatchReceived} on the `to` address\n if it contains code at the moment of execution."
									},
									"id": 1318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "14932:35:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14985:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "14977:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14977:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15011:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "15003:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15003:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15033:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "15025:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "15062:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "15045:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1256,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15045:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1257,
													"nodeType": "ArrayTypeName",
													"src": "15045:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "15092:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "15075:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1259,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15075:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1260,
													"nodeType": "ArrayTypeName",
													"src": "15075:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15121:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "15108:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1262,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15108:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14967:164:2"
									},
									"returnParameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15140:0:2"
									},
									"scope": 1335,
									"src": "14923:1041:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1333,
										"nodeType": "Block",
										"src": "16238:691:2",
										"statements": [
											{
												"AST": {
													"nativeSrc": "16300:623:2",
													"nodeType": "YulBlock",
													"src": "16300:623:2",
													"statements": [
														{
															"nativeSrc": "16358:21:2",
															"nodeType": "YulAssignment",
															"src": "16358:21:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16374:4:2",
																		"nodeType": "YulLiteral",
																		"src": "16374:4:2",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16368:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "16368:5:2"
																},
																"nativeSrc": "16368:11:2",
																"nodeType": "YulFunctionCall",
																"src": "16368:11:2"
															},
															"variableNames": [
																{
																	"name": "array1",
																	"nativeSrc": "16358:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "16358:6:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array1",
																		"nativeSrc": "16436:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "16436:6:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16444:1:2",
																		"nodeType": "YulLiteral",
																		"src": "16444:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16429:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "16429:6:2"
																},
																"nativeSrc": "16429:17:2",
																"nodeType": "YulFunctionCall",
																"src": "16429:17:2"
															},
															"nativeSrc": "16429:17:2",
															"nodeType": "YulExpressionStatement",
															"src": "16429:17:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array1",
																				"nativeSrc": "16567:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "16567:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16575:4:2",
																				"nodeType": "YulLiteral",
																				"src": "16575:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16563:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "16563:3:2"
																		},
																		"nativeSrc": "16563:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "16563:17:2"
																	},
																	{
																		"name": "element1",
																		"nativeSrc": "16582:8:2",
																		"nodeType": "YulIdentifier",
																		"src": "16582:8:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16556:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "16556:6:2"
																},
																"nativeSrc": "16556:35:2",
																"nodeType": "YulFunctionCall",
																"src": "16556:35:2"
															},
															"nativeSrc": "16556:35:2",
															"nodeType": "YulExpressionStatement",
															"src": "16556:35:2"
														},
														{
															"nativeSrc": "16682:27:2",
															"nodeType": "YulAssignment",
															"src": "16682:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "array1",
																		"nativeSrc": "16696:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "16696:6:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16704:4:2",
																		"nodeType": "YulLiteral",
																		"src": "16704:4:2",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16692:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "16692:3:2"
																},
																"nativeSrc": "16692:17:2",
																"nodeType": "YulFunctionCall",
																"src": "16692:17:2"
															},
															"variableNames": [
																{
																	"name": "array2",
																	"nativeSrc": "16682:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "16682:6:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array2",
																		"nativeSrc": "16729:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "16729:6:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16737:1:2",
																		"nodeType": "YulLiteral",
																		"src": "16737:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16722:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "16722:6:2"
																},
																"nativeSrc": "16722:17:2",
																"nodeType": "YulFunctionCall",
																"src": "16722:17:2"
															},
															"nativeSrc": "16722:17:2",
															"nodeType": "YulExpressionStatement",
															"src": "16722:17:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array2",
																				"nativeSrc": "16763:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "16763:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16771:4:2",
																				"nodeType": "YulLiteral",
																				"src": "16771:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16759:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "16759:3:2"
																		},
																		"nativeSrc": "16759:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "16759:17:2"
																	},
																	{
																		"name": "element2",
																		"nativeSrc": "16778:8:2",
																		"nodeType": "YulIdentifier",
																		"src": "16778:8:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16752:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "16752:6:2"
																},
																"nativeSrc": "16752:35:2",
																"nodeType": "YulFunctionCall",
																"src": "16752:35:2"
															},
															"nativeSrc": "16752:35:2",
															"nodeType": "YulExpressionStatement",
															"src": "16752:35:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16889:4:2",
																		"nodeType": "YulLiteral",
																		"src": "16889:4:2",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"name": "array2",
																				"nativeSrc": "16899:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "16899:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16907:4:2",
																				"nodeType": "YulLiteral",
																				"src": "16907:4:2",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16895:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "16895:3:2"
																		},
																		"nativeSrc": "16895:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "16895:17:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16882:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "16882:6:2"
																},
																"nativeSrc": "16882:31:2",
																"nodeType": "YulFunctionCall",
																"src": "16882:31:2"
															},
															"nativeSrc": "16882:31:2",
															"nodeType": "YulExpressionStatement",
															"src": "16882:31:2"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1327,
														"isOffset": false,
														"isSlot": false,
														"src": "16358:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1327,
														"isOffset": false,
														"isSlot": false,
														"src": "16436:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1327,
														"isOffset": false,
														"isSlot": false,
														"src": "16567:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1327,
														"isOffset": false,
														"isSlot": false,
														"src": "16696:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1330,
														"isOffset": false,
														"isSlot": false,
														"src": "16682:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1330,
														"isOffset": false,
														"isSlot": false,
														"src": "16729:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1330,
														"isOffset": false,
														"isSlot": false,
														"src": "16763:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1330,
														"isOffset": false,
														"isSlot": false,
														"src": "16899:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1321,
														"isOffset": false,
														"isSlot": false,
														"src": "16582:8:2",
														"valueSize": 1
													},
													{
														"declaration": 1323,
														"isOffset": false,
														"isSlot": false,
														"src": "16778:8:2",
														"valueSize": 1
													}
												],
												"id": 1332,
												"nodeType": "InlineAssembly",
												"src": "16291:632:2"
											}
										]
									},
									"documentation": {
										"id": 1319,
										"nodeType": "StructuredDocumentation",
										"src": "15970:105:2",
										"text": " @dev Creates an array in memory with only one value for each of the elements provided."
									},
									"id": 1334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArrays",
									"nameLocation": "16089:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "element1",
												"nameLocation": "16125:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "16117:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16117:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "element2",
												"nameLocation": "16151:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "16143:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16143:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16107:58:2"
									},
									"returnParameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "array1",
												"nameLocation": "16205:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "16188:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1325,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16188:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1326,
													"nodeType": "ArrayTypeName",
													"src": "16188:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "array2",
												"nameLocation": "16230:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "16213:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1328,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16213:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1329,
													"nodeType": "ArrayTypeName",
													"src": "16213:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16187:50:2"
									},
									"scope": 1335,
									"src": "16080:849:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1336,
							"src": "727:16204:2",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": [
								1355,
								1370,
								1379,
								1386
							]
						}
					],
					"src": "109:16823:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							1458
						],
						"IERC165": [
							1867
						]
					},
					"id": 1459,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1337,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "110:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1339,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1459,
							"sourceUnit": 1868,
							"src": "136:62:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1338,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1867,
										"src": "144:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1341,
										"name": "IERC165",
										"nameLocations": [
											"358:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1867,
										"src": "358:7:3"
									},
									"id": 1342,
									"nodeType": "InheritanceSpecifier",
									"src": "358:7:3"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1340,
								"nodeType": "StructuredDocumentation",
								"src": "200:135:3",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP]."
							},
							"fullyImplemented": false,
							"id": 1458,
							"linearizedBaseContracts": [
								1458,
								1867
							],
							"name": "IERC1155",
							"nameLocation": "346:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1343,
										"nodeType": "StructuredDocumentation",
										"src": "372:125:3",
										"text": " @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 1355,
									"name": "TransferSingle",
									"nameLocation": "508:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "539:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "523:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "523:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1347,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "565:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "549:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "549:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1349,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "587:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "571:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "571:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1351,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "599:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "591:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "591:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1353,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "611:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "603:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "522:95:3"
									},
									"src": "502:116:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1356,
										"nodeType": "StructuredDocumentation",
										"src": "624:144:3",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 1370,
									"name": "TransferBatch",
									"nameLocation": "779:13:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "818:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "802:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "802:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1360,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "852:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "836:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1362,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "882:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "866:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "866:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1365,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "904:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "894:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1363,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "894:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1364,
													"nodeType": "ArrayTypeName",
													"src": "894:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1368,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "927:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "917:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1366,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "917:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1367,
													"nodeType": "ArrayTypeName",
													"src": "917:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:147:3"
									},
									"src": "773:167:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1371,
										"nodeType": "StructuredDocumentation",
										"src": "946:147:3",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1379,
									"name": "ApprovalForAll",
									"nameLocation": "1104:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1373,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1135:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "1119:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1119:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1375,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1160:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "1144:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1144:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1377,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1175:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "1170:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1118:66:3"
									},
									"src": "1098:87:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1380,
										"nodeType": "StructuredDocumentation",
										"src": "1191:343:3",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 1386,
									"name": "URI",
									"nameLocation": "1545:3:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1556:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "1549:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1381,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1549:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1579:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "1563:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1563:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1548:34:3"
									},
									"src": "1539:44:3"
								},
								{
									"documentation": {
										"id": 1387,
										"nodeType": "StructuredDocumentation",
										"src": "1589:172:3",
										"text": " @dev Returns the value of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 1396,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1775:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1793:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "1785:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1785:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1810:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "1802:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1802:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1784:29:3"
									},
									"returnParameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "1837:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1837:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1836:9:3"
									},
									"scope": 1458,
									"src": "1766:80:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1397,
										"nodeType": "StructuredDocumentation",
										"src": "1852:188:3",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1409,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2054:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2097:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "2078:27:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1398,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2078:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1399,
													"nodeType": "ArrayTypeName",
													"src": "2078:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2134:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "2115:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1401,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2115:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1402,
													"nodeType": "ArrayTypeName",
													"src": "2115:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:75:3"
									},
									"returnParameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "2167:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1405,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2167:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1406,
													"nodeType": "ArrayTypeName",
													"src": "2167:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2166:18:3"
									},
									"scope": 1458,
									"src": "2045:140:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1410,
										"nodeType": "StructuredDocumentation",
										"src": "2191:248:3",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1417,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2453:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2479:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "2471:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2471:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2494:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "2489:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1413,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2489:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2470:33:3"
									},
									"returnParameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2512:0:3"
									},
									"scope": 1458,
									"src": "2444:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1418,
										"nodeType": "StructuredDocumentation",
										"src": "2519:135:3",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1427,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2668:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2693:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "2685:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2685:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2710:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "2702:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2702:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2684:35:3"
									},
									"returnParameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "2743:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1424,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2743:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2742:6:3"
									},
									"scope": 1458,
									"src": "2659:90:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1428,
										"nodeType": "StructuredDocumentation",
										"src": "2755:910:3",
										"text": " @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1441,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3679:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3704:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "3696:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3696:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3718:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "3710:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3710:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3730:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "3722:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3722:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3742:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "3734:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3734:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3764:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "3749:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1437,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3749:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3695:74:3"
									},
									"returnParameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3778:0:3"
									},
									"scope": 1458,
									"src": "3670:109:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1442,
										"nodeType": "StructuredDocumentation",
										"src": "3785:744:3",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1457,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4543:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4582:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "4574:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4574:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4604:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "4596:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4596:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4635:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "4616:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1447,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4616:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1448,
													"nodeType": "ArrayTypeName",
													"src": "4616:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "4667:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "4648:25:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1450,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4648:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1451,
													"nodeType": "ArrayTypeName",
													"src": "4648:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4698:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "4683:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1453,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4683:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4564:144:3"
									},
									"returnParameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4717:0:3"
									},
									"scope": 1458,
									"src": "4534:184:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1459,
							"src": "336:4384:3",
							"usedErrors": [],
							"usedEvents": [
								1355,
								1370,
								1379,
								1386
							]
						}
					],
					"src": "110:4611:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1500
						],
						"IERC165": [
							1867
						]
					},
					"id": 1501,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1460,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "118:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1462,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1501,
							"sourceUnit": 1868,
							"src": "144:62:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1461,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1867,
										"src": "152:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1464,
										"name": "IERC165",
										"nameLocations": [
											"357:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1867,
										"src": "357:7:4"
									},
									"id": 1465,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:4"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1463,
								"nodeType": "StructuredDocumentation",
								"src": "208:118:4",
								"text": " @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."
							},
							"fullyImplemented": false,
							"id": 1500,
							"linearizedBaseContracts": [
								1500,
								1867
							],
							"name": "IERC1155Receiver",
							"nameLocation": "337:16:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1466,
										"nodeType": "StructuredDocumentation",
										"src": "371:826:4",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1481,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1211:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1246:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "1238:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1238:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1272:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "1264:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1264:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1294:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "1286:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1286:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1314:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "1306:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1306:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1344:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "1329:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1475,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1329:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1228:126:4"
									},
									"returnParameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "1373:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1478,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1373:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1372:8:4"
									},
									"scope": 1500,
									"src": "1202:179:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1482,
										"nodeType": "StructuredDocumentation",
										"src": "1387:994:4",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1499,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2395:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2435:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2427:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2461:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2453:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2453:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2494:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2475:22:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1487,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2475:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1488,
													"nodeType": "ArrayTypeName",
													"src": "2475:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2526:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2507:25:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1490,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2507:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1491,
													"nodeType": "ArrayTypeName",
													"src": "2507:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2557:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2542:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1493,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2542:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2417:150:4"
									},
									"returnParameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2586:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1496,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2586:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2585:8:4"
									},
									"scope": 1500,
									"src": "2386:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1501,
							"src": "327:2269:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "118:2479:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
					"exportedSymbols": {
						"IERC1155": [
							1458
						],
						"IERC1155MetadataURI": [
							1516
						]
					},
					"id": 1517,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1502,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "132:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "../IERC1155.sol",
							"id": 1504,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1517,
							"sourceUnit": 1459,
							"src": "158:41:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1503,
										"name": "IERC1155",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1458,
										"src": "166:8:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1506,
										"name": "IERC1155",
										"nameLocations": [
											"399:8:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1458,
										"src": "399:8:5"
									},
									"id": 1507,
									"nodeType": "InheritanceSpecifier",
									"src": "399:8:5"
								}
							],
							"canonicalName": "IERC1155MetadataURI",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1505,
								"nodeType": "StructuredDocumentation",
								"src": "201:164:5",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]."
							},
							"fullyImplemented": false,
							"id": 1516,
							"linearizedBaseContracts": [
								1516,
								1458,
								1867
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "376:19:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1508,
										"nodeType": "StructuredDocumentation",
										"src": "414:192:5",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1515,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "620:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "632:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "624:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:12:5"
									},
									"returnParameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "659:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1512,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "659:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "658:15:5"
									},
									"scope": 1516,
									"src": "611:63:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1517,
							"src": "366:310:5",
							"usedErrors": [],
							"usedEvents": [
								1355,
								1370,
								1379,
								1386
							]
						}
					],
					"src": "132:545:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Arrays.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Arrays.sol",
					"exportedSymbols": {
						"Arrays": [
							1699
						],
						"Math": [
							2921
						],
						"StorageSlot": [
							1831
						]
					},
					"id": 1700,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1518,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "./StorageSlot.sol",
							"id": 1520,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1700,
							"sourceUnit": 1832,
							"src": "126:46:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1519,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1831,
										"src": "134:11:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1522,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1700,
							"sourceUnit": 2922,
							"src": "173:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1521,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2921,
										"src": "181:4:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Arrays",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1523,
								"nodeType": "StructuredDocumentation",
								"src": "212:63:6",
								"text": " @dev Collection of functions related to array types."
							},
							"fullyImplemented": true,
							"id": 1699,
							"linearizedBaseContracts": [
								1699
							],
							"name": "Arrays",
							"nameLocation": "284:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1526,
									"libraryName": {
										"id": 1524,
										"name": "StorageSlot",
										"nameLocations": [
											"303:11:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1831,
										"src": "303:11:6"
									},
									"nodeType": "UsingForDirective",
									"src": "297:30:6",
									"typeName": {
										"id": 1525,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "319:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"body": {
										"id": 1608,
										"nodeType": "Block",
										"src": "843:834:6",
										"statements": [
											{
												"assignments": [
													1538
												],
												"declarations": [
													{
														"constant": false,
														"id": 1538,
														"mutability": "mutable",
														"name": "low",
														"nameLocation": "861:3:6",
														"nodeType": "VariableDeclaration",
														"scope": 1608,
														"src": "853:11:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1537,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "853:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1540,
												"initialValue": {
													"hexValue": "30",
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "867:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "853:15:6"
											},
											{
												"assignments": [
													1542
												],
												"declarations": [
													{
														"constant": false,
														"id": 1542,
														"mutability": "mutable",
														"name": "high",
														"nameLocation": "886:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1608,
														"src": "878:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1541,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "878:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1545,
												"initialValue": {
													"expression": {
														"id": 1543,
														"name": "array",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1530,
														"src": "893:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
															"typeString": "uint256[] storage pointer"
														}
													},
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "899:6:6",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "893:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "878:27:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1546,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1542,
														"src": "920:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1547,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "928:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "920:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1552,
												"nodeType": "IfStatement",
												"src": "916:48:6",
												"trueBody": {
													"id": 1551,
													"nodeType": "Block",
													"src": "931:33:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1549,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "952:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1536,
															"id": 1550,
															"nodeType": "Return",
															"src": "945:8:6"
														}
													]
												}
											},
											{
												"body": {
													"id": 1584,
													"nodeType": "Block",
													"src": "993:423:6",
													"statements": [
														{
															"assignments": [
																1557
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1557,
																	"mutability": "mutable",
																	"name": "mid",
																	"nameLocation": "1015:3:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1584,
																	"src": "1007:11:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1556,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1007:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1563,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1560,
																		"name": "low",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1538,
																		"src": "1034:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1561,
																		"name": "high",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1542,
																		"src": "1039:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1558,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2921,
																		"src": "1021:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2921_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1026:7:6",
																	"memberName": "average",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2095,
																	"src": "1021:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1021:23:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1007:37:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1565,
																				"name": "array",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1530,
																				"src": "1282:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																					"typeString": "uint256[] storage pointer"
																				}
																			},
																			{
																				"id": 1566,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1557,
																				"src": "1289:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																					"typeString": "uint256[] storage pointer"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1564,
																			"name": "unsafeAccess",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1630,
																				1651,
																				1672
																			],
																			"referencedDeclaration": 1672,
																			"src": "1269:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$1736_storage_ptr_$",
																				"typeString": "function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
																			}
																		},
																		"id": 1567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1269:24:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Uint256Slot_$1736_storage_ptr",
																			"typeString": "struct StorageSlot.Uint256Slot storage pointer"
																		}
																	},
																	"id": 1568,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1294:5:6",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1735,
																	"src": "1269:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 1569,
																	"name": "element",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1532,
																	"src": "1302:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1269:40:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1582,
																"nodeType": "Block",
																"src": "1360:46:6",
																"statements": [
																	{
																		"expression": {
																			"id": 1580,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1576,
																				"name": "low",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1538,
																				"src": "1378:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1579,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1577,
																					"name": "mid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1557,
																					"src": "1384:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1578,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1390:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "1384:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1378:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1581,
																		"nodeType": "ExpressionStatement",
																		"src": "1378:13:6"
																	}
																]
															},
															"id": 1583,
															"nodeType": "IfStatement",
															"src": "1265:141:6",
															"trueBody": {
																"id": 1575,
																"nodeType": "Block",
																"src": "1311:43:6",
																"statements": [
																	{
																		"expression": {
																			"id": 1573,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1571,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1542,
																				"src": "1329:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1572,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1557,
																				"src": "1336:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1329:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1574,
																		"nodeType": "ExpressionStatement",
																		"src": "1329:10:6"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1553,
														"name": "low",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1538,
														"src": "981:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1554,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1542,
														"src": "987:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "981:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1585,
												"nodeType": "WhileStatement",
												"src": "974:442:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1586,
															"name": "low",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1538,
															"src": "1533:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1587,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1539:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1533:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1597,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1590,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1530,
																		"src": "1557:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1591,
																			"name": "low",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1538,
																			"src": "1564:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1592,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1570:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1564:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1589,
																	"name": "unsafeAccess",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1630,
																		1651,
																		1672
																	],
																	"referencedDeclaration": 1672,
																	"src": "1544:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$1736_storage_ptr_$",
																		"typeString": "function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
																	}
																},
																"id": 1594,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1544:28:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Uint256Slot_$1736_storage_ptr",
																	"typeString": "struct StorageSlot.Uint256Slot storage pointer"
																}
															},
															"id": 1595,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1573:5:6",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1735,
															"src": "1544:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1596,
															"name": "element",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1532,
															"src": "1582:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1544:45:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1533:56:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1606,
													"nodeType": "Block",
													"src": "1636:35:6",
													"statements": [
														{
															"expression": {
																"id": 1604,
																"name": "low",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1538,
																"src": "1657:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1536,
															"id": 1605,
															"nodeType": "Return",
															"src": "1650:10:6"
														}
													]
												},
												"id": 1607,
												"nodeType": "IfStatement",
												"src": "1529:142:6",
												"trueBody": {
													"id": 1603,
													"nodeType": "Block",
													"src": "1591:39:6",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1599,
																	"name": "low",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1538,
																	"src": "1612:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1618:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1612:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1536,
															"id": 1602,
															"nodeType": "Return",
															"src": "1605:14:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1527,
										"nodeType": "StructuredDocumentation",
										"src": "333:407:6",
										"text": " @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n `array` is expected to be sorted in ascending order, and to contain no\n repeated elements."
									},
									"id": 1609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findUpperBound",
									"nameLocation": "754:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "787:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "769:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1528,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "769:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1529,
													"nodeType": "ArrayTypeName",
													"src": "769:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "802:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "794:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "794:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "768:42:6"
									},
									"returnParameters": {
										"id": 1536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "834:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "834:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "833:9:6"
									},
									"scope": 1699,
									"src": "745:932:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1629,
										"nodeType": "Block",
										"src": "1993:459:6",
										"statements": [
											{
												"assignments": [
													1622
												],
												"declarations": [
													{
														"constant": false,
														"id": 1622,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "2011:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1629,
														"src": "2003:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1621,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2003:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1623,
												"nodeType": "VariableDeclarationStatement",
												"src": "2003:12:6"
											},
											{
												"AST": {
													"nativeSrc": "2316:92:6",
													"nodeType": "YulBlock",
													"src": "2316:92:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2337:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2337:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nativeSrc": "2340:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "2340:8:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2330:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2330:6:6"
																},
																"nativeSrc": "2330:19:6",
																"nodeType": "YulFunctionCall",
																"src": "2330:19:6"
															},
															"nativeSrc": "2330:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "2330:19:6"
														},
														{
															"nativeSrc": "2362:36:6",
															"nodeType": "YulAssignment",
															"src": "2362:36:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2384:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2384:1:6",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2387:4:6",
																				"nodeType": "YulLiteral",
																				"src": "2387:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "2374:9:6",
																			"nodeType": "YulIdentifier",
																			"src": "2374:9:6"
																		},
																		"nativeSrc": "2374:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2374:18:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2394:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2394:3:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2370:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2370:3:6"
																},
																"nativeSrc": "2370:28:6",
																"nodeType": "YulFunctionCall",
																"src": "2370:28:6"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nativeSrc": "2362:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2362:4:6"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1613,
														"isOffset": false,
														"isSlot": true,
														"src": "2340:8:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1615,
														"isOffset": false,
														"isSlot": false,
														"src": "2394:3:6",
														"valueSize": 1
													},
													{
														"declaration": 1622,
														"isOffset": false,
														"isSlot": false,
														"src": "2362:4:6",
														"valueSize": 1
													}
												],
												"id": 1624,
												"nodeType": "InlineAssembly",
												"src": "2307:101:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1625,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1622,
															"src": "2424:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1626,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2429:14:6",
														"memberName": "getAddressSlot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1753,
														"src": "2424:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1727_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
														}
													},
													"id": 1627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2424:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1727_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot storage pointer"
													}
												},
												"functionReturnParameters": 1620,
												"id": 1628,
												"nodeType": "Return",
												"src": "2417:28:6"
											}
										]
									},
									"documentation": {
										"id": 1610,
										"nodeType": "StructuredDocumentation",
										"src": "1683:191:6",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "1888:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1613,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "1919:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "1901:21:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1611,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1901:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1612,
													"nodeType": "ArrayTypeName",
													"src": "1901:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "1932:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "1924:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1924:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1900:36:6"
									},
									"returnParameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "1960:31:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1727_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1618,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1617,
														"name": "StorageSlot.AddressSlot",
														"nameLocations": [
															"1960:11:6",
															"1972:11:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1727,
														"src": "1960:23:6"
													},
													"referencedDeclaration": 1727,
													"src": "1960:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1727_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:33:6"
									},
									"scope": 1699,
									"src": "1879:573:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1650,
										"nodeType": "Block",
										"src": "2768:459:6",
										"statements": [
											{
												"assignments": [
													1643
												],
												"declarations": [
													{
														"constant": false,
														"id": 1643,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "2786:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1650,
														"src": "2778:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1642,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2778:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1644,
												"nodeType": "VariableDeclarationStatement",
												"src": "2778:12:6"
											},
											{
												"AST": {
													"nativeSrc": "3091:92:6",
													"nodeType": "YulBlock",
													"src": "3091:92:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3112:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3112:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nativeSrc": "3115:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "3115:8:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3105:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3105:6:6"
																},
																"nativeSrc": "3105:19:6",
																"nodeType": "YulFunctionCall",
																"src": "3105:19:6"
															},
															"nativeSrc": "3105:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "3105:19:6"
														},
														{
															"nativeSrc": "3137:36:6",
															"nodeType": "YulAssignment",
															"src": "3137:36:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3159:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3159:1:6",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3162:4:6",
																				"nodeType": "YulLiteral",
																				"src": "3162:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "3149:9:6",
																			"nodeType": "YulIdentifier",
																			"src": "3149:9:6"
																		},
																		"nativeSrc": "3149:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3149:18:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3169:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3169:3:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3145:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3145:3:6"
																},
																"nativeSrc": "3145:28:6",
																"nodeType": "YulFunctionCall",
																"src": "3145:28:6"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nativeSrc": "3137:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3137:4:6"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1634,
														"isOffset": false,
														"isSlot": true,
														"src": "3115:8:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1636,
														"isOffset": false,
														"isSlot": false,
														"src": "3169:3:6",
														"valueSize": 1
													},
													{
														"declaration": 1643,
														"isOffset": false,
														"isSlot": false,
														"src": "3137:4:6",
														"valueSize": 1
													}
												],
												"id": 1645,
												"nodeType": "InlineAssembly",
												"src": "3082:101:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1646,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1643,
															"src": "3199:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1647,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3204:14:6",
														"memberName": "getBytes32Slot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1775,
														"src": "3199:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$1733_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"
														}
													},
													"id": 1648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3199:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1733_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot storage pointer"
													}
												},
												"functionReturnParameters": 1641,
												"id": 1649,
												"nodeType": "Return",
												"src": "3192:28:6"
											}
										]
									},
									"documentation": {
										"id": 1631,
										"nodeType": "StructuredDocumentation",
										"src": "2458:191:6",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "2663:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "2694:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "2676:21:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1632,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "2676:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1633,
													"nodeType": "ArrayTypeName",
													"src": "2676:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "2707:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "2699:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2675:36:6"
									},
									"returnParameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "2735:31:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1733_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1639,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1638,
														"name": "StorageSlot.Bytes32Slot",
														"nameLocations": [
															"2735:11:6",
															"2747:11:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1733,
														"src": "2735:23:6"
													},
													"referencedDeclaration": 1733,
													"src": "2735:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1733_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2734:33:6"
									},
									"scope": 1699,
									"src": "2654:573:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1671,
										"nodeType": "Block",
										"src": "3543:459:6",
										"statements": [
											{
												"assignments": [
													1664
												],
												"declarations": [
													{
														"constant": false,
														"id": 1664,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "3561:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1671,
														"src": "3553:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1663,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3553:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1665,
												"nodeType": "VariableDeclarationStatement",
												"src": "3553:12:6"
											},
											{
												"AST": {
													"nativeSrc": "3866:92:6",
													"nodeType": "YulBlock",
													"src": "3866:92:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3887:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3887:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nativeSrc": "3890:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "3890:8:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3880:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3880:6:6"
																},
																"nativeSrc": "3880:19:6",
																"nodeType": "YulFunctionCall",
																"src": "3880:19:6"
															},
															"nativeSrc": "3880:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "3880:19:6"
														},
														{
															"nativeSrc": "3912:36:6",
															"nodeType": "YulAssignment",
															"src": "3912:36:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3934:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3934:1:6",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3937:4:6",
																				"nodeType": "YulLiteral",
																				"src": "3937:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "3924:9:6",
																			"nodeType": "YulIdentifier",
																			"src": "3924:9:6"
																		},
																		"nativeSrc": "3924:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3924:18:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3944:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3944:3:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3920:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3920:3:6"
																},
																"nativeSrc": "3920:28:6",
																"nodeType": "YulFunctionCall",
																"src": "3920:28:6"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nativeSrc": "3912:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3912:4:6"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1655,
														"isOffset": false,
														"isSlot": true,
														"src": "3890:8:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1657,
														"isOffset": false,
														"isSlot": false,
														"src": "3944:3:6",
														"valueSize": 1
													},
													{
														"declaration": 1664,
														"isOffset": false,
														"isSlot": false,
														"src": "3912:4:6",
														"valueSize": 1
													}
												],
												"id": 1666,
												"nodeType": "InlineAssembly",
												"src": "3857:101:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1667,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "3974:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3979:14:6",
														"memberName": "getUint256Slot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1786,
														"src": "3974:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$1736_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
														}
													},
													"id": 1669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3974:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1736_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot storage pointer"
													}
												},
												"functionReturnParameters": 1662,
												"id": 1670,
												"nodeType": "Return",
												"src": "3967:28:6"
											}
										]
									},
									"documentation": {
										"id": 1652,
										"nodeType": "StructuredDocumentation",
										"src": "3233:191:6",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "3438:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "3469:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "3451:21:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1653,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3451:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1654,
													"nodeType": "ArrayTypeName",
													"src": "3451:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "3482:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "3474:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:36:6"
									},
									"returnParameters": {
										"id": 1662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1661,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "3510:31:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1736_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1660,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1659,
														"name": "StorageSlot.Uint256Slot",
														"nameLocations": [
															"3510:11:6",
															"3522:11:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1736,
														"src": "3510:23:6"
													},
													"referencedDeclaration": 1736,
													"src": "3510:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1736_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3509:33:6"
									},
									"scope": 1699,
									"src": "3429:573:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1684,
										"nodeType": "Block",
										"src": "4303:98:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4322:73:6",
													"nodeType": "YulBlock",
													"src": "4322:73:6",
													"statements": [
														{
															"nativeSrc": "4336:49:6",
															"nodeType": "YulAssignment",
															"src": "4336:49:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "arr",
																						"nativeSrc": "4357:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4357:3:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4362:4:6",
																						"nodeType": "YulLiteral",
																						"src": "4362:4:6",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4353:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4353:3:6"
																				},
																				"nativeSrc": "4353:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4353:14:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4373:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4373:3:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4378:4:6",
																						"nodeType": "YulLiteral",
																						"src": "4378:4:6",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4369:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4369:3:6"
																				},
																				"nativeSrc": "4369:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4369:14:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4349:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4349:3:6"
																		},
																		"nativeSrc": "4349:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4349:35:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4343:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4343:5:6"
																},
																"nativeSrc": "4343:42:6",
																"nodeType": "YulFunctionCall",
																"src": "4343:42:6"
															},
															"variableNames": [
																{
																	"name": "res",
																	"nativeSrc": "4336:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4336:3:6"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1676,
														"isOffset": false,
														"isSlot": false,
														"src": "4357:3:6",
														"valueSize": 1
													},
													{
														"declaration": 1678,
														"isOffset": false,
														"isSlot": false,
														"src": "4373:3:6",
														"valueSize": 1
													},
													{
														"declaration": 1681,
														"isOffset": false,
														"isSlot": false,
														"src": "4336:3:6",
														"valueSize": 1
													}
												],
												"id": 1683,
												"nodeType": "InlineAssembly",
												"src": "4313:82:6"
											}
										]
									},
									"documentation": {
										"id": 1673,
										"nodeType": "StructuredDocumentation",
										"src": "4008:191:6",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeMemoryAccess",
									"nameLocation": "4213:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "4249:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "4232:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1674,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4232:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1675,
													"nodeType": "ArrayTypeName",
													"src": "4232:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "4262:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "4254:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4254:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4231:35:6"
									},
									"returnParameters": {
										"id": 1682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "4298:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "4290:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4290:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4289:13:6"
									},
									"scope": 1699,
									"src": "4204:197:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1697,
										"nodeType": "Block",
										"src": "4702:98:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4721:73:6",
													"nodeType": "YulBlock",
													"src": "4721:73:6",
													"statements": [
														{
															"nativeSrc": "4735:49:6",
															"nodeType": "YulAssignment",
															"src": "4735:49:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "arr",
																						"nativeSrc": "4756:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4756:3:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4761:4:6",
																						"nodeType": "YulLiteral",
																						"src": "4761:4:6",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4752:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4752:3:6"
																				},
																				"nativeSrc": "4752:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4752:14:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4772:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4772:3:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4777:4:6",
																						"nodeType": "YulLiteral",
																						"src": "4777:4:6",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4768:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4768:3:6"
																				},
																				"nativeSrc": "4768:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4768:14:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4748:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4748:3:6"
																		},
																		"nativeSrc": "4748:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4748:35:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4742:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4742:5:6"
																},
																"nativeSrc": "4742:42:6",
																"nodeType": "YulFunctionCall",
																"src": "4742:42:6"
															},
															"variableNames": [
																{
																	"name": "res",
																	"nativeSrc": "4735:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4735:3:6"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1689,
														"isOffset": false,
														"isSlot": false,
														"src": "4756:3:6",
														"valueSize": 1
													},
													{
														"declaration": 1691,
														"isOffset": false,
														"isSlot": false,
														"src": "4772:3:6",
														"valueSize": 1
													},
													{
														"declaration": 1694,
														"isOffset": false,
														"isSlot": false,
														"src": "4735:3:6",
														"valueSize": 1
													}
												],
												"id": 1696,
												"nodeType": "InlineAssembly",
												"src": "4712:82:6"
											}
										]
									},
									"documentation": {
										"id": 1686,
										"nodeType": "StructuredDocumentation",
										"src": "4407:191:6",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeMemoryAccess",
									"nameLocation": "4612:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "4648:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "4631:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1687,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4631:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1688,
													"nodeType": "ArrayTypeName",
													"src": "4631:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1691,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "4661:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "4653:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4653:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:35:6"
									},
									"returnParameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1694,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "4697:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "4689:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4689:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4688:13:6"
									},
									"scope": 1699,
									"src": "4603:197:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1700,
							"src": "276:4526:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:4703:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1721
						]
					},
					"id": 1722,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1701,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1702,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1721,
							"linearizedBaseContracts": [
								1721
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1710,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1707,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1706,
												"id": 1709,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 1711,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1721,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1719,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1716,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1715,
												"id": 1718,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1713,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1721,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1722,
							"src": "624:235:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:759:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							1831
						]
					},
					"id": 1832,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1723,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1724,
								"nodeType": "StructuredDocumentation",
								"src": "219:1025:8",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1831,
							"linearizedBaseContracts": [
								1831
							],
							"name": "StorageSlot",
							"nameLocation": "1253:11:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1727,
									"members": [
										{
											"constant": false,
											"id": 1726,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1308:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1727,
											"src": "1300:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1725,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1300:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1278:11:8",
									"nodeType": "StructDefinition",
									"scope": 1831,
									"src": "1271:49:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1730,
									"members": [
										{
											"constant": false,
											"id": 1729,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1360:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1730,
											"src": "1355:10:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1728,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1355:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1333:11:8",
									"nodeType": "StructDefinition",
									"scope": 1831,
									"src": "1326:46:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1733,
									"members": [
										{
											"constant": false,
											"id": 1732,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1415:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1733,
											"src": "1407:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1731,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1407:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1385:11:8",
									"nodeType": "StructDefinition",
									"scope": 1831,
									"src": "1378:49:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1736,
									"members": [
										{
											"constant": false,
											"id": 1735,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1736,
											"src": "1462:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1734,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1440:11:8",
									"nodeType": "StructDefinition",
									"scope": 1831,
									"src": "1433:49:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1739,
									"members": [
										{
											"constant": false,
											"id": 1738,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1523:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1739,
											"src": "1516:12:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1737,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1516:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1495:10:8",
									"nodeType": "StructDefinition",
									"scope": 1831,
									"src": "1488:47:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1742,
									"members": [
										{
											"constant": false,
											"id": 1741,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1574:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1742,
											"src": "1568:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1740,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1568:5:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1548:9:8",
									"nodeType": "StructDefinition",
									"scope": 1831,
									"src": "1541:45:8",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1752,
										"nodeType": "Block",
										"src": "1768:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1830:38:8",
													"nodeType": "YulBlock",
													"src": "1830:38:8",
													"statements": [
														{
															"nativeSrc": "1844:14:8",
															"nodeType": "YulAssignment",
															"src": "1844:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "1854:4:8",
																"nodeType": "YulIdentifier",
																"src": "1854:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "1844:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1844:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1749,
														"isOffset": false,
														"isSlot": true,
														"src": "1844:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1745,
														"isOffset": false,
														"isSlot": false,
														"src": "1854:4:8",
														"valueSize": 1
													}
												],
												"id": 1751,
												"nodeType": "InlineAssembly",
												"src": "1821:47:8"
											}
										]
									},
									"documentation": {
										"id": 1743,
										"nodeType": "StructuredDocumentation",
										"src": "1592:87:8",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1753,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1693:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1716:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "1708:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1744,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1708:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1707:14:8"
									},
									"returnParameters": {
										"id": 1750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1749,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1765:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "1745:21:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1727_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1748,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1747,
														"name": "AddressSlot",
														"nameLocations": [
															"1745:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1727,
														"src": "1745:11:8"
													},
													"referencedDeclaration": 1727,
													"src": "1745:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1727_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:23:8"
									},
									"scope": 1831,
									"src": "1684:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1763,
										"nodeType": "Block",
										"src": "2056:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2118:38:8",
													"nodeType": "YulBlock",
													"src": "2118:38:8",
													"statements": [
														{
															"nativeSrc": "2132:14:8",
															"nodeType": "YulAssignment",
															"src": "2132:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "2142:4:8",
																"nodeType": "YulIdentifier",
																"src": "2142:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2132:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1760,
														"isOffset": false,
														"isSlot": true,
														"src": "2132:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1756,
														"isOffset": false,
														"isSlot": false,
														"src": "2142:4:8",
														"valueSize": 1
													}
												],
												"id": 1762,
												"nodeType": "InlineAssembly",
												"src": "2109:47:8"
											}
										]
									},
									"documentation": {
										"id": 1754,
										"nodeType": "StructuredDocumentation",
										"src": "1880:87:8",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1981:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2004:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "1996:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1755,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:14:8"
									},
									"returnParameters": {
										"id": 1761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1760,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2053:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "2033:21:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1730_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1759,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1758,
														"name": "BooleanSlot",
														"nameLocations": [
															"2033:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1730,
														"src": "2033:11:8"
													},
													"referencedDeclaration": 1730,
													"src": "2033:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1730_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:23:8"
									},
									"scope": 1831,
									"src": "1972:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1774,
										"nodeType": "Block",
										"src": "2344:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2406:38:8",
													"nodeType": "YulBlock",
													"src": "2406:38:8",
													"statements": [
														{
															"nativeSrc": "2420:14:8",
															"nodeType": "YulAssignment",
															"src": "2420:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "2430:4:8",
																"nodeType": "YulIdentifier",
																"src": "2430:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2420:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1771,
														"isOffset": false,
														"isSlot": true,
														"src": "2420:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1767,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:4:8",
														"valueSize": 1
													}
												],
												"id": 1773,
												"nodeType": "InlineAssembly",
												"src": "2397:47:8"
											}
										]
									},
									"documentation": {
										"id": 1765,
										"nodeType": "StructuredDocumentation",
										"src": "2168:87:8",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1775,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2269:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2292:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "2284:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1766,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2283:14:8"
									},
									"returnParameters": {
										"id": 1772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1771,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2341:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "2321:21:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1733_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1770,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1769,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2321:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1733,
														"src": "2321:11:8"
													},
													"referencedDeclaration": 1733,
													"src": "2321:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1733_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2320:23:8"
									},
									"scope": 1831,
									"src": "2260:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1785,
										"nodeType": "Block",
										"src": "2632:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2694:38:8",
													"nodeType": "YulBlock",
													"src": "2694:38:8",
													"statements": [
														{
															"nativeSrc": "2708:14:8",
															"nodeType": "YulAssignment",
															"src": "2708:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "2718:4:8",
																"nodeType": "YulIdentifier",
																"src": "2718:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2708:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2708:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1782,
														"isOffset": false,
														"isSlot": true,
														"src": "2708:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1778,
														"isOffset": false,
														"isSlot": false,
														"src": "2718:4:8",
														"valueSize": 1
													}
												],
												"id": 1784,
												"nodeType": "InlineAssembly",
												"src": "2685:47:8"
											}
										]
									},
									"documentation": {
										"id": 1776,
										"nodeType": "StructuredDocumentation",
										"src": "2456:87:8",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1786,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2557:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2580:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1786,
												"src": "2572:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1777,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2571:14:8"
									},
									"returnParameters": {
										"id": 1783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2629:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1786,
												"src": "2609:21:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1736_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1781,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1780,
														"name": "Uint256Slot",
														"nameLocations": [
															"2609:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1736,
														"src": "2609:11:8"
													},
													"referencedDeclaration": 1736,
													"src": "2609:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1736_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:23:8"
									},
									"scope": 1831,
									"src": "2548:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1796,
										"nodeType": "Block",
										"src": "2917:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2979:38:8",
													"nodeType": "YulBlock",
													"src": "2979:38:8",
													"statements": [
														{
															"nativeSrc": "2993:14:8",
															"nodeType": "YulAssignment",
															"src": "2993:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "3003:4:8",
																"nodeType": "YulIdentifier",
																"src": "3003:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2993:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2993:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1793,
														"isOffset": false,
														"isSlot": true,
														"src": "2993:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1789,
														"isOffset": false,
														"isSlot": false,
														"src": "3003:4:8",
														"valueSize": 1
													}
												],
												"id": 1795,
												"nodeType": "InlineAssembly",
												"src": "2970:47:8"
											}
										]
									},
									"documentation": {
										"id": 1787,
										"nodeType": "StructuredDocumentation",
										"src": "2744:86:8",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 1797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "2844:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1789,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2866:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "2858:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1788,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2857:14:8"
									},
									"returnParameters": {
										"id": 1794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2914:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "2895:20:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1739_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1792,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1791,
														"name": "StringSlot",
														"nameLocations": [
															"2895:10:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1739,
														"src": "2895:10:8"
													},
													"referencedDeclaration": 1739,
													"src": "2895:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1739_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2894:22:8"
									},
									"scope": 1831,
									"src": "2835:188:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1807,
										"nodeType": "Block",
										"src": "3225:112:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3287:44:8",
													"nodeType": "YulBlock",
													"src": "3287:44:8",
													"statements": [
														{
															"nativeSrc": "3301:20:8",
															"nodeType": "YulAssignment",
															"src": "3301:20:8",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3311:10:8",
																"nodeType": "YulIdentifier",
																"src": "3311:10:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3301:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3301:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1804,
														"isOffset": false,
														"isSlot": true,
														"src": "3301:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1800,
														"isOffset": false,
														"isSlot": true,
														"src": "3311:10:8",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1806,
												"nodeType": "InlineAssembly",
												"src": "3278:53:8"
											}
										]
									},
									"documentation": {
										"id": 1798,
										"nodeType": "StructuredDocumentation",
										"src": "3029:101:8",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1808,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3144:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1800,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3173:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "3158:20:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1799,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3158:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3157:22:8"
									},
									"returnParameters": {
										"id": 1805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1804,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3222:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "3203:20:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1739_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1803,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1802,
														"name": "StringSlot",
														"nameLocations": [
															"3203:10:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1739,
														"src": "3203:10:8"
													},
													"referencedDeclaration": 1739,
													"src": "3203:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1739_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:22:8"
									},
									"scope": 1831,
									"src": "3135:202:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1818,
										"nodeType": "Block",
										"src": "3513:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3575:38:8",
													"nodeType": "YulBlock",
													"src": "3575:38:8",
													"statements": [
														{
															"nativeSrc": "3589:14:8",
															"nodeType": "YulAssignment",
															"src": "3589:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "3599:4:8",
																"nodeType": "YulIdentifier",
																"src": "3599:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3589:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1815,
														"isOffset": false,
														"isSlot": true,
														"src": "3589:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1811,
														"isOffset": false,
														"isSlot": false,
														"src": "3599:4:8",
														"valueSize": 1
													}
												],
												"id": 1817,
												"nodeType": "InlineAssembly",
												"src": "3566:47:8"
											}
										]
									},
									"documentation": {
										"id": 1809,
										"nodeType": "StructuredDocumentation",
										"src": "3343:85:8",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1819,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3442:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3463:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1819,
												"src": "3455:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1810,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3455:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:14:8"
									},
									"returnParameters": {
										"id": 1816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3510:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1819,
												"src": "3492:19:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1742_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1814,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1813,
														"name": "BytesSlot",
														"nameLocations": [
															"3492:9:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1742,
														"src": "3492:9:8"
													},
													"referencedDeclaration": 1742,
													"src": "3492:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1742_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:21:8"
									},
									"scope": 1831,
									"src": "3433:186:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1829,
										"nodeType": "Block",
										"src": "3816:112:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3878:44:8",
													"nodeType": "YulBlock",
													"src": "3878:44:8",
													"statements": [
														{
															"nativeSrc": "3892:20:8",
															"nodeType": "YulAssignment",
															"src": "3892:20:8",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3902:10:8",
																"nodeType": "YulIdentifier",
																"src": "3902:10:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3892:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3892:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1826,
														"isOffset": false,
														"isSlot": true,
														"src": "3892:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1822,
														"isOffset": false,
														"isSlot": true,
														"src": "3902:10:8",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1828,
												"nodeType": "InlineAssembly",
												"src": "3869:53:8"
											}
										]
									},
									"documentation": {
										"id": 1820,
										"nodeType": "StructuredDocumentation",
										"src": "3625:99:8",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3738:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1822,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3765:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1830,
												"src": "3751:19:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1821,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3751:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3750:21:8"
									},
									"returnParameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3813:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1830,
												"src": "3795:19:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1742_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1825,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1824,
														"name": "BytesSlot",
														"nameLocations": [
															"3795:9:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1742,
														"src": "3795:9:8"
													},
													"referencedDeclaration": 1742,
													"src": "3795:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1742_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3794:21:8"
									},
									"scope": 1831,
									"src": "3729:199:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1832,
							"src": "1245:2685:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3738:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1855
						],
						"IERC165": [
							1867
						]
					},
					"id": 1856,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1833,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1835,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1856,
							"sourceUnit": 1868,
							"src": "140:38:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1834,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1867,
										"src": "148:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1837,
										"name": "IERC165",
										"nameLocations": [
											"687:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1867,
										"src": "687:7:9"
									},
									"id": 1838,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:9"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1836,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:9",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1855,
							"linearizedBaseContracts": [
								1855,
								1867
							],
							"name": "ERC165",
							"nameLocation": "677:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1866
									],
									"body": {
										"id": 1853,
										"nodeType": "Block",
										"src": "844:64:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1846,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1841,
														"src": "861:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1848,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1867,
																	"src": "881:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1867_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1867_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1847,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1849,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1867",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1850,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:9",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1845,
												"id": 1852,
												"nodeType": "Return",
												"src": "854:47:9"
											}
										]
									},
									"documentation": {
										"id": 1839,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:9",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1841,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "789:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1840,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:9"
									},
									"returnParameters": {
										"id": 1845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1844,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "838:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1843,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:9"
									},
									"scope": 1855,
									"src": "762:146:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1856,
							"src": "659:251:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1867
						]
					},
					"id": 1868,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1857,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1858,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:10",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1867,
							"linearizedBaseContracts": [
								1867
							],
							"name": "IERC165",
							"nameLocation": "431:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1859,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:10",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1866,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1861,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "817:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1860,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:10"
									},
									"returnParameters": {
										"id": 1865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1864,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "860:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1863,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:10"
									},
									"scope": 1867,
									"src": "790:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1868,
							"src": "421:447:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2921
						]
					},
					"id": 2922,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1869,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1870,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:11",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2921,
							"linearizedBaseContracts": [
								2921
							],
							"name": "Math",
							"nameLocation": "211:4:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1871,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:11",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1873,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1872,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:11"
									},
									"src": "277:29:11"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1878,
									"members": [
										{
											"id": 1874,
											"name": "Floor",
											"nameLocation": "336:5:11",
											"nodeType": "EnumValue",
											"src": "336:5:11"
										},
										{
											"id": 1875,
											"name": "Ceil",
											"nameLocation": "379:4:11",
											"nodeType": "EnumValue",
											"src": "379:4:11"
										},
										{
											"id": 1876,
											"name": "Trunc",
											"nameLocation": "421:5:11",
											"nodeType": "EnumValue",
											"src": "421:5:11"
										},
										{
											"id": 1877,
											"name": "Expand",
											"nameLocation": "451:6:11",
											"nodeType": "EnumValue",
											"src": "451:6:11"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:11",
									"nodeType": "EnumDefinition",
									"src": "312:169:11"
								},
								{
									"body": {
										"id": 1909,
										"nodeType": "Block",
										"src": "661:140:11",
										"statements": [
											{
												"id": 1908,
												"nodeType": "UncheckedBlock",
												"src": "671:124:11",
												"statements": [
													{
														"assignments": [
															1891
														],
														"declarations": [
															{
																"constant": false,
																"id": 1891,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:11",
																"nodeType": "VariableDeclaration",
																"scope": 1908,
																"src": "695:9:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1890,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1895,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1892,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1881,
																"src": "707:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1893,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1883,
																"src": "711:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:11"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1898,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1896,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1891,
																"src": "730:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1897,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1881,
																"src": "734:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1903,
														"nodeType": "IfStatement",
														"src": "726:28:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1899,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1901,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1889,
															"id": 1902,
															"nodeType": "Return",
															"src": "737:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1905,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1891,
																	"src": "782:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1906,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1889,
														"id": 1907,
														"nodeType": "Return",
														"src": "768:16:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1879,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:11",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1910,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1881,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "601:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1883,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "612:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:11"
									},
									"returnParameters": {
										"id": 1889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1886,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "646:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1885,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "652:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:11"
									},
									"scope": 2921,
									"src": "585:216:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1937,
										"nodeType": "Block",
										"src": "984:113:11",
										"statements": [
											{
												"id": 1936,
												"nodeType": "UncheckedBlock",
												"src": "994:97:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1922,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1915,
																"src": "1022:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1923,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1913,
																"src": "1026:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1929,
														"nodeType": "IfStatement",
														"src": "1018:28:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1925,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1927,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1921,
															"id": 1928,
															"nodeType": "Return",
															"src": "1029:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1931,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1913,
																		"src": "1074:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1932,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1915,
																		"src": "1078:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1934,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1921,
														"id": 1935,
														"nodeType": "Return",
														"src": "1060:20:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1911,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:11",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 1938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1913,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "924:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1915,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "935:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:11"
									},
									"returnParameters": {
										"id": 1921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "969:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1917,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1920,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "975:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:11"
									},
									"scope": 2921,
									"src": "908:189:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1979,
										"nodeType": "Block",
										"src": "1283:417:11",
										"statements": [
											{
												"id": 1978,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1950,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1941,
																"src": "1551:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1957,
														"nodeType": "IfStatement",
														"src": "1547:28:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1953,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1955,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1949,
															"id": 1956,
															"nodeType": "Return",
															"src": "1559:16:11"
														}
													},
													{
														"assignments": [
															1959
														],
														"declarations": [
															{
																"constant": false,
																"id": 1959,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:11",
																"nodeType": "VariableDeclaration",
																"scope": 1978,
																"src": "1589:9:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1958,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1963,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1960,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1941,
																"src": "1601:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1961,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1943,
																"src": "1605:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:11"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1966,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1964,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1959,
																	"src": "1624:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1965,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1941,
																	"src": "1628:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1967,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1943,
																"src": "1633:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1973,
														"nodeType": "IfStatement",
														"src": "1620:33:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1969,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1970,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1971,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1949,
															"id": 1972,
															"nodeType": "Return",
															"src": "1636:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1974,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1975,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1959,
																	"src": "1681:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1976,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1949,
														"id": 1977,
														"nodeType": "Return",
														"src": "1667:16:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1939,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:11",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 1980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1941,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "1223:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1943,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "1234:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:11"
									},
									"returnParameters": {
										"id": 1949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1946,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "1268:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1945,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1948,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "1274:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:11"
									},
									"scope": 2921,
									"src": "1207:493:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2007,
										"nodeType": "Block",
										"src": "1887:114:11",
										"statements": [
											{
												"id": 2006,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1992,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1985,
																"src": "1925:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1993,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1999,
														"nodeType": "IfStatement",
														"src": "1921:29:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1995,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1996,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1997,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1991,
															"id": 1998,
															"nodeType": "Return",
															"src": "1933:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2003,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2001,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1983,
																		"src": "1978:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2002,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1985,
																		"src": "1982:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2004,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1991,
														"id": 2005,
														"nodeType": "Return",
														"src": "1964:20:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1981,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:11",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2008,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1983,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "1827:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "1838:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:11"
									},
									"returnParameters": {
										"id": 1991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1988,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "1872:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1987,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1990,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "1878:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:11"
									},
									"scope": 2921,
									"src": "1811:190:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2035,
										"nodeType": "Block",
										"src": "2198:114:11",
										"statements": [
											{
												"id": 2034,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2022,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2020,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2013,
																"src": "2236:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2021,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2027,
														"nodeType": "IfStatement",
														"src": "2232:29:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2024,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2025,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2019,
															"id": 2026,
															"nodeType": "Return",
															"src": "2244:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2031,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2029,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2011,
																		"src": "2289:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2030,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2013,
																		"src": "2293:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2032,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2019,
														"id": 2033,
														"nodeType": "Return",
														"src": "2275:20:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2009,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:11",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2036,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2011,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "2138:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2013,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "2149:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:11"
									},
									"returnParameters": {
										"id": 2019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2016,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "2183:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2015,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2018,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "2189:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:11"
									},
									"scope": 2921,
									"src": "2122:190:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2053,
										"nodeType": "Block",
										"src": "2449:37:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2048,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2046,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2039,
															"src": "2466:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2047,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2041,
															"src": "2470:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2050,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2041,
														"src": "2478:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:11",
													"trueExpression": {
														"id": 2049,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2039,
														"src": "2474:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2045,
												"id": 2052,
												"nodeType": "Return",
												"src": "2459:20:11"
											}
										]
									},
									"documentation": {
										"id": 2037,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:11",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2054,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2039,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2054,
												"src": "2395:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2041,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2054,
												"src": "2406:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:11"
									},
									"returnParameters": {
										"id": 2045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2044,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2054,
												"src": "2440:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:11"
									},
									"scope": 2921,
									"src": "2382:104:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2071,
										"nodeType": "Block",
										"src": "2624:37:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2066,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2064,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2057,
															"src": "2641:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2065,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2059,
															"src": "2645:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2068,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2059,
														"src": "2653:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:11",
													"trueExpression": {
														"id": 2067,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2057,
														"src": "2649:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2063,
												"id": 2070,
												"nodeType": "Return",
												"src": "2634:20:11"
											}
										]
									},
									"documentation": {
										"id": 2055,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:11",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2072,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2057,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2072,
												"src": "2570:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2059,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2072,
												"src": "2581:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:11"
									},
									"returnParameters": {
										"id": 2063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2062,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2072,
												"src": "2615:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:11"
									},
									"scope": 2921,
									"src": "2557:104:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2094,
										"nodeType": "Block",
										"src": "2845:82:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2084,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2082,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2075,
																	"src": "2900:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2083,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2077,
																	"src": "2904:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2085,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2091,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2088,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2086,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2075,
																		"src": "2910:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2087,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2077,
																		"src": "2914:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2089,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2090,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2081,
												"id": 2093,
												"nodeType": "Return",
												"src": "2892:28:11"
											}
										]
									},
									"documentation": {
										"id": 2073,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:11",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2095,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2075,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2095,
												"src": "2791:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2077,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2095,
												"src": "2802:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:11"
									},
									"returnParameters": {
										"id": 2081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2080,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2095,
												"src": "2836:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2079,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:11"
									},
									"scope": 2921,
									"src": "2774:153:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2128,
										"nodeType": "Block",
										"src": "3219:260:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2105,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2100,
														"src": "3233:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2106,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2113,
												"nodeType": "IfStatement",
												"src": "3229:127:11",
												"trueBody": {
													"id": 2112,
													"nodeType": "Block",
													"src": "3241:115:11",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2108,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2098,
																	"src": "3340:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2109,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2100,
																	"src": "3344:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2104,
															"id": 2111,
															"nodeType": "Return",
															"src": "3333:12:11"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2114,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2098,
															"src": "3444:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2125,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2118,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2098,
																			"src": "3458:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2119,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2122,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2100,
																"src": "3467:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2124,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:11",
													"trueExpression": {
														"hexValue": "30",
														"id": 2117,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2104,
												"id": 2127,
												"nodeType": "Return",
												"src": "3437:35:11"
											}
										]
									},
									"documentation": {
										"id": 2096,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:11",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2098,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2129,
												"src": "3165:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2100,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2129,
												"src": "3176:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:11"
									},
									"returnParameters": {
										"id": 2104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2103,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2129,
												"src": "3210:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:11"
									},
									"scope": 2921,
									"src": "3148:331:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2254,
										"nodeType": "Block",
										"src": "3901:4018:11",
										"statements": [
											{
												"id": 2253,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:11",
												"statements": [
													{
														"assignments": [
															2142
														],
														"declarations": [
															{
																"constant": false,
																"id": 2142,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:11",
																"nodeType": "VariableDeclaration",
																"scope": 2253,
																"src": "4232:13:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2141,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2146,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2143,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2132,
																"src": "4248:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2144,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2134,
																"src": "4252:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:11"
													},
													{
														"assignments": [
															2148
														],
														"declarations": [
															{
																"constant": false,
																"id": 2148,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:11",
																"nodeType": "VariableDeclaration",
																"scope": 2253,
																"src": "4312:13:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2147,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2149,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:11"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:11",
															"nodeType": "YulBlock",
															"src": "4392:122:11",
															"statements": [
																{
																	"nativeSrc": "4410:30:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:11"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:11",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:11"
																				},
																				"nativeSrc": "4433:6:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:11"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:11"
																		},
																		"nativeSrc": "4420:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:11"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:11",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:11",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:11"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:11"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:11"
																				},
																				"nativeSrc": "4470:14:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:11"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:11"
																				},
																				"nativeSrc": "4486:13:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:11"
																		},
																		"nativeSrc": "4466:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:11"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2142,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2142,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2148,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2132,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:11",
																"valueSize": 1
															},
															{
																"declaration": 2134,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:11",
																"valueSize": 1
															}
														],
														"id": 2150,
														"nodeType": "InlineAssembly",
														"src": "4383:131:11"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2151,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2148,
																"src": "4595:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2152,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2159,
														"nodeType": "IfStatement",
														"src": "4591:368:11",
														"trueBody": {
															"id": 2158,
															"nodeType": "Block",
															"src": "4607:352:11",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2154,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2142,
																			"src": "4925:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2155,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2136,
																			"src": "4933:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2140,
																	"id": 2157,
																	"nodeType": "Return",
																	"src": "4918:26:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2160,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2136,
																"src": "5065:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2161,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2148,
																"src": "5080:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2167,
														"nodeType": "IfStatement",
														"src": "5061:88:11",
														"trueBody": {
															"id": 2166,
															"nodeType": "Block",
															"src": "5087:62:11",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2163,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1873,
																			"src": "5112:20:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2165,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:11"
																}
															]
														}
													},
													{
														"assignments": [
															2169
														],
														"declarations": [
															{
																"constant": false,
																"id": 2169,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:11",
																"nodeType": "VariableDeclaration",
																"scope": 2253,
																"src": "5404:17:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2168,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2170,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:11"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:11",
															"nodeType": "YulBlock",
															"src": "5444:291:11",
															"statements": [
																{
																	"nativeSrc": "5513:38:11",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:11"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:11"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:11",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:11"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:11"
																		},
																		"nativeSrc": "5526:25:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:11"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:11",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:11"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:11",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:11"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:11"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:11"
																				},
																				"nativeSrc": "5653:20:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:11"
																		},
																		"nativeSrc": "5642:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:11"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:11",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:11"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:11"
																		},
																		"nativeSrc": "5700:21:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:11"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2136,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:11",
																"valueSize": 1
															},
															{
																"declaration": 2142,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2142,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2142,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2148,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2148,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2169,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:11",
																"valueSize": 1
															},
															{
																"declaration": 2169,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:11",
																"valueSize": 1
															},
															{
																"declaration": 2169,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:11",
																"valueSize": 1
															},
															{
																"declaration": 2132,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:11",
																"valueSize": 1
															},
															{
																"declaration": 2134,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:11",
																"valueSize": 1
															}
														],
														"id": 2171,
														"nodeType": "InlineAssembly",
														"src": "5435:300:11"
													},
													{
														"assignments": [
															2173
														],
														"declarations": [
															{
																"constant": false,
																"id": 2173,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:11",
																"nodeType": "VariableDeclaration",
																"scope": 2253,
																"src": "5939:12:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2172,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2180,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2174,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2136,
																"src": "5954:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2175,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2176,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2136,
																			"src": "5973:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2178,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:11"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:11",
															"nodeType": "YulBlock",
															"src": "6008:362:11",
															"statements": [
																{
																	"nativeSrc": "6073:37:11",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:11",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:11"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:11"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:11"
																		},
																		"nativeSrc": "6088:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:11"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:11",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:11"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:11",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:11"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:11"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:11"
																		},
																		"nativeSrc": "6186:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:11"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:11",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:11",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:11",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:11",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:11"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:11"
																						},
																						"nativeSrc": "6333:12:11",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:11"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:11"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:11"
																				},
																				"nativeSrc": "6329:23:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:11",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:11",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:11"
																		},
																		"nativeSrc": "6325:31:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:11"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:11",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:11"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2136,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:11",
																"valueSize": 1
															},
															{
																"declaration": 2136,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:11",
																"valueSize": 1
															},
															{
																"declaration": 2142,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2142,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2173,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:11",
																"valueSize": 1
															},
															{
																"declaration": 2173,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:11",
																"valueSize": 1
															},
															{
																"declaration": 2173,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:11",
																"valueSize": 1
															},
															{
																"declaration": 2173,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:11",
																"valueSize": 1
															},
															{
																"declaration": 2173,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:11",
																"valueSize": 1
															}
														],
														"id": 2181,
														"nodeType": "InlineAssembly",
														"src": "5999:371:11"
													},
													{
														"expression": {
															"id": 2186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2182,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2142,
																"src": "6436:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2183,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2148,
																	"src": "6445:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2184,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2173,
																	"src": "6453:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2187,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:11"
													},
													{
														"assignments": [
															2189
														],
														"declarations": [
															{
																"constant": false,
																"id": 2189,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:11",
																"nodeType": "VariableDeclaration",
																"scope": 2253,
																"src": "6775:15:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2188,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2196,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2190,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2191,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2136,
																			"src": "6798:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2193,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2194,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:11"
													},
													{
														"expression": {
															"id": 2203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2197,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2189,
																"src": "7031:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2201,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2199,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2136,
																		"src": "7046:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2200,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2189,
																		"src": "7060:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2204,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:11"
													},
													{
														"expression": {
															"id": 2211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2205,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2189,
																"src": "7100:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2207,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2136,
																		"src": "7115:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2208,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2189,
																		"src": "7129:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2212,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:11"
													},
													{
														"expression": {
															"id": 2219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2213,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2189,
																"src": "7170:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2215,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2136,
																		"src": "7185:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2216,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2189,
																		"src": "7199:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2220,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:11"
													},
													{
														"expression": {
															"id": 2227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2221,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2189,
																"src": "7240:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2223,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2136,
																		"src": "7255:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2224,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2189,
																		"src": "7269:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2228,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:11"
													},
													{
														"expression": {
															"id": 2235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2229,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2189,
																"src": "7310:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2231,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2136,
																		"src": "7325:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2232,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2189,
																		"src": "7339:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2236,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:11"
													},
													{
														"expression": {
															"id": 2243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2237,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2189,
																"src": "7381:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2239,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2136,
																		"src": "7396:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2240,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2189,
																		"src": "7410:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2244,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:11"
													},
													{
														"expression": {
															"id": 2249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2245,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2139,
																"src": "7851:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2248,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2246,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2142,
																	"src": "7860:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2247,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2189,
																	"src": "7868:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2250,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:11"
													},
													{
														"expression": {
															"id": 2251,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2139,
															"src": "7896:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2140,
														"id": 2252,
														"nodeType": "Return",
														"src": "7889:13:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2130,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:11",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2132,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2255,
												"src": "3819:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2134,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2255,
												"src": "3830:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2136,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2255,
												"src": "3841:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:11"
									},
									"returnParameters": {
										"id": 2140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2139,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2255,
												"src": "3885:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:11"
									},
									"scope": 2921,
									"src": "3803:4116:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2297,
										"nodeType": "Block",
										"src": "8161:192:11",
										"statements": [
											{
												"assignments": [
													2271
												],
												"declarations": [
													{
														"constant": false,
														"id": 2271,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2297,
														"src": "8171:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2270,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2277,
												"initialValue": {
													"arguments": [
														{
															"id": 2273,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2258,
															"src": "8195:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2274,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2260,
															"src": "8198:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2275,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2262,
															"src": "8201:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2272,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2255,
															2298
														],
														"referencedDeclaration": 2255,
														"src": "8188:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2279,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2265,
																"src": "8244:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1878",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1878",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2278,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2920,
															"src": "8227:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1878_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2280,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2282,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2258,
																	"src": "8264:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2283,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2260,
																	"src": "8267:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2284,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2262,
																	"src": "8270:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2281,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2286,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2294,
												"nodeType": "IfStatement",
												"src": "8223:101:11",
												"trueBody": {
													"id": 2293,
													"nodeType": "Block",
													"src": "8288:36:11",
													"statements": [
														{
															"expression": {
																"id": 2291,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2289,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2271,
																	"src": "8302:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2292,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2295,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2271,
													"src": "8340:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2269,
												"id": 2296,
												"nodeType": "Return",
												"src": "8333:13:11"
											}
										]
									},
									"documentation": {
										"id": 2256,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:11",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2258,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "8067:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2260,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "8078:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2262,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "8089:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2265,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "8110:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1878",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2264,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2263,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1878,
														"src": "8110:8:11"
													},
													"referencedDeclaration": 1878,
													"src": "8110:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1878",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:11"
									},
									"returnParameters": {
										"id": 2269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "8152:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:11"
									},
									"scope": 2921,
									"src": "8051:302:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2409,
										"nodeType": "Block",
										"src": "8644:1585:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2306,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2301,
														"src": "8658:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2307,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2312,
												"nodeType": "IfStatement",
												"src": "8654:45:11",
												"trueBody": {
													"id": 2311,
													"nodeType": "Block",
													"src": "8666:33:11",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2309,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2305,
															"id": 2310,
															"nodeType": "Return",
															"src": "8680:8:11"
														}
													]
												}
											},
											{
												"assignments": [
													2314
												],
												"declarations": [
													{
														"constant": false,
														"id": 2314,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2409,
														"src": "9378:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2313,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2323,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2315,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2320,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2317,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2301,
																			"src": "9406:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2316,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2577,
																			2612
																		],
																		"referencedDeclaration": 2577,
																		"src": "9401:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2321,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:11"
											},
											{
												"id": 2408,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:11",
												"statements": [
													{
														"expression": {
															"id": 2333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2324,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2314,
																"src": "9839:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2332,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2329,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2325,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2314,
																				"src": "9849:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2328,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2326,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2301,
																					"src": "9858:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2327,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2314,
																					"src": "9862:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2330,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2334,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:11"
													},
													{
														"expression": {
															"id": 2344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2335,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2314,
																"src": "9888:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2343,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2340,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2336,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2314,
																				"src": "9898:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2339,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2337,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2301,
																					"src": "9907:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2338,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2314,
																					"src": "9911:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2341,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2345,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:11"
													},
													{
														"expression": {
															"id": 2355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2346,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2314,
																"src": "9937:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2354,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2351,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2347,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2314,
																				"src": "9947:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2350,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2348,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2301,
																					"src": "9956:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2349,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2314,
																					"src": "9960:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2352,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2356,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:11"
													},
													{
														"expression": {
															"id": 2366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2357,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2314,
																"src": "9986:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2362,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2358,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2314,
																				"src": "9996:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2361,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2359,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2301,
																					"src": "10005:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2360,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2314,
																					"src": "10009:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2363,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2367,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:11"
													},
													{
														"expression": {
															"id": 2377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2368,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2314,
																"src": "10035:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2373,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2369,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2314,
																				"src": "10045:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2372,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2370,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2301,
																					"src": "10054:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2371,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2314,
																					"src": "10058:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2374,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2378,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:11"
													},
													{
														"expression": {
															"id": 2388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2379,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2314,
																"src": "10084:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2387,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2384,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2380,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2314,
																				"src": "10094:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2383,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2381,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2301,
																					"src": "10103:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2382,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2314,
																					"src": "10107:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2385,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2389,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:11"
													},
													{
														"expression": {
															"id": 2399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2390,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2314,
																"src": "10133:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2395,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2391,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2314,
																				"src": "10143:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2394,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2392,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2301,
																					"src": "10152:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2393,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2314,
																					"src": "10156:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2396,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2400,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:11"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2402,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2314,
																	"src": "10193:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2403,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2301,
																		"src": "10201:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2404,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2314,
																		"src": "10205:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2401,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2072,
																"src": "10189:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2305,
														"id": 2407,
														"nodeType": "Return",
														"src": "10182:30:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2299,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:11",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2301,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2410,
												"src": "8601:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:11"
									},
									"returnParameters": {
										"id": 2305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2410,
												"src": "8635:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:11"
									},
									"scope": 2921,
									"src": "8587:1642:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2444,
										"nodeType": "Block",
										"src": "10405:164:11",
										"statements": [
											{
												"id": 2443,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:11",
												"statements": [
													{
														"assignments": [
															2422
														],
														"declarations": [
															{
																"constant": false,
																"id": 2422,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2443,
																"src": "10439:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2421,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2426,
														"initialValue": {
															"arguments": [
																{
																	"id": 2424,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2413,
																	"src": "10461:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2423,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2410,
																	2445
																],
																"referencedDeclaration": 2410,
																"src": "10456:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2427,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2422,
																"src": "10484:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2436,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2429,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2416,
																						"src": "10511:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1878",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1878",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2428,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2920,
																					"src": "10494:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1878_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2430,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2435,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2433,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2431,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2422,
																						"src": "10524:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2432,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2422,
																						"src": "10533:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2434,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2413,
																					"src": "10542:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2438,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2439,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2437,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2440,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2420,
														"id": 2442,
														"nodeType": "Return",
														"src": "10477:75:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2411,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:11",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2413,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2445,
												"src": "10343:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2416,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2445,
												"src": "10354:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1878",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2415,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2414,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1878,
														"src": "10354:8:11"
													},
													"referencedDeclaration": 1878,
													"src": "10354:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1878",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:11"
									},
									"returnParameters": {
										"id": 2420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2419,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2445,
												"src": "10396:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:11"
									},
									"scope": 2921,
									"src": "10329:240:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2576,
										"nodeType": "Block",
										"src": "10760:922:11",
										"statements": [
											{
												"assignments": [
													2454
												],
												"declarations": [
													{
														"constant": false,
														"id": 2454,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2576,
														"src": "10770:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2453,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2456,
												"initialValue": {
													"hexValue": "30",
													"id": 2455,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:11"
											},
											{
												"id": 2573,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2457,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2448,
																	"src": "10826:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2460,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2471,
														"nodeType": "IfStatement",
														"src": "10822:99:11",
														"trueBody": {
															"id": 2470,
															"nodeType": "Block",
															"src": "10844:77:11",
															"statements": [
																{
																	"expression": {
																		"id": 2464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2462,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2448,
																			"src": "10862:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2463,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2465,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:11"
																},
																{
																	"expression": {
																		"id": 2468,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2466,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2454,
																			"src": "10893:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2467,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2469,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2472,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2448,
																	"src": "10938:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2475,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2486,
														"nodeType": "IfStatement",
														"src": "10934:96:11",
														"trueBody": {
															"id": 2485,
															"nodeType": "Block",
															"src": "10955:75:11",
															"statements": [
																{
																	"expression": {
																		"id": 2479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2477,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2448,
																			"src": "10973:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2478,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2480,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:11"
																},
																{
																	"expression": {
																		"id": 2483,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2481,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2454,
																			"src": "11003:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2482,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2484,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2491,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2487,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2448,
																	"src": "11047:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2488,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2501,
														"nodeType": "IfStatement",
														"src": "11043:96:11",
														"trueBody": {
															"id": 2500,
															"nodeType": "Block",
															"src": "11064:75:11",
															"statements": [
																{
																	"expression": {
																		"id": 2494,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2492,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2448,
																			"src": "11082:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2493,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2495,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:11"
																},
																{
																	"expression": {
																		"id": 2498,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2496,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2454,
																			"src": "11112:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2497,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2499,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2502,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2448,
																	"src": "11156:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2505,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2516,
														"nodeType": "IfStatement",
														"src": "11152:96:11",
														"trueBody": {
															"id": 2515,
															"nodeType": "Block",
															"src": "11173:75:11",
															"statements": [
																{
																	"expression": {
																		"id": 2509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2507,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2448,
																			"src": "11191:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2508,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2510,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:11"
																},
																{
																	"expression": {
																		"id": 2513,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2511,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2454,
																			"src": "11221:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2512,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2514,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2517,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2448,
																	"src": "11265:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2520,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2531,
														"nodeType": "IfStatement",
														"src": "11261:93:11",
														"trueBody": {
															"id": 2530,
															"nodeType": "Block",
															"src": "11281:73:11",
															"statements": [
																{
																	"expression": {
																		"id": 2524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2522,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2448,
																			"src": "11299:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2523,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2525,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:11"
																},
																{
																	"expression": {
																		"id": 2528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2526,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2454,
																			"src": "11328:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2527,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2529,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2532,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2448,
																	"src": "11371:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2535,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2546,
														"nodeType": "IfStatement",
														"src": "11367:93:11",
														"trueBody": {
															"id": 2545,
															"nodeType": "Block",
															"src": "11387:73:11",
															"statements": [
																{
																	"expression": {
																		"id": 2539,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2537,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2448,
																			"src": "11405:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2538,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2540,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:11"
																},
																{
																	"expression": {
																		"id": 2543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2541,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2454,
																			"src": "11434:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2542,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2544,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2547,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2448,
																	"src": "11477:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2548,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2550,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2561,
														"nodeType": "IfStatement",
														"src": "11473:93:11",
														"trueBody": {
															"id": 2560,
															"nodeType": "Block",
															"src": "11493:73:11",
															"statements": [
																{
																	"expression": {
																		"id": 2554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2552,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2448,
																			"src": "11511:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2553,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2555,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:11"
																},
																{
																	"expression": {
																		"id": 2558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2556,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2454,
																			"src": "11540:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2557,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2559,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2564,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2562,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2448,
																	"src": "11583:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2565,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2572,
														"nodeType": "IfStatement",
														"src": "11579:64:11",
														"trueBody": {
															"id": 2571,
															"nodeType": "Block",
															"src": "11599:44:11",
															"statements": [
																{
																	"expression": {
																		"id": 2569,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2567,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2454,
																			"src": "11617:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2568,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2570,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:11"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2574,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2454,
													"src": "11669:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2452,
												"id": 2575,
												"nodeType": "Return",
												"src": "11662:13:11"
											}
										]
									},
									"documentation": {
										"id": 2446,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:11",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2448,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2577,
												"src": "10713:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:11"
									},
									"returnParameters": {
										"id": 2452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2577,
												"src": "10751:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:11"
									},
									"scope": 2921,
									"src": "10699:983:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2611,
										"nodeType": "Block",
										"src": "11915:168:11",
										"statements": [
											{
												"id": 2610,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:11",
												"statements": [
													{
														"assignments": [
															2589
														],
														"declarations": [
															{
																"constant": false,
																"id": 2589,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2610,
																"src": "11949:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2588,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2593,
														"initialValue": {
															"arguments": [
																{
																	"id": 2591,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2580,
																	"src": "11971:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2590,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2577,
																	2612
																],
																"referencedDeclaration": 2577,
																"src": "11966:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2594,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2589,
																"src": "11998:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2603,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2596,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2583,
																						"src": "12025:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1878",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1878",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2595,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2920,
																					"src": "12008:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1878_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2597,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2602,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2600,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2598,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2599,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2589,
																						"src": "12043:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2601,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2580,
																					"src": "12052:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2605,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2606,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2604,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2607,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2587,
														"id": 2609,
														"nodeType": "Return",
														"src": "11991:75:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2578,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:11",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2580,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2612,
												"src": "11849:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2583,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2612,
												"src": "11864:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1878",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2582,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2581,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1878,
														"src": "11864:8:11"
													},
													"referencedDeclaration": 1878,
													"src": "11864:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1878",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:11"
									},
									"returnParameters": {
										"id": 2587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2586,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2612,
												"src": "11906:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:11"
									},
									"scope": 2921,
									"src": "11835:248:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2740,
										"nodeType": "Block",
										"src": "12276:854:11",
										"statements": [
											{
												"assignments": [
													2621
												],
												"declarations": [
													{
														"constant": false,
														"id": 2621,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2740,
														"src": "12286:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2620,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2623,
												"initialValue": {
													"hexValue": "30",
													"id": 2622,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:11"
											},
											{
												"id": 2737,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2624,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2615,
																"src": "12342:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2627,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2640,
														"nodeType": "IfStatement",
														"src": "12338:103:11",
														"trueBody": {
															"id": 2639,
															"nodeType": "Block",
															"src": "12361:80:11",
															"statements": [
																{
																	"expression": {
																		"id": 2633,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2629,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2615,
																			"src": "12379:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2632,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2630,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2631,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2634,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:11"
																},
																{
																	"expression": {
																		"id": 2637,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2635,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2621,
																			"src": "12414:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2636,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2638,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2641,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2615,
																"src": "12458:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2644,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2642,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2657,
														"nodeType": "IfStatement",
														"src": "12454:103:11",
														"trueBody": {
															"id": 2656,
															"nodeType": "Block",
															"src": "12477:80:11",
															"statements": [
																{
																	"expression": {
																		"id": 2650,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2646,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2615,
																			"src": "12495:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2649,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2647,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2648,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2651,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:11"
																},
																{
																	"expression": {
																		"id": 2654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2652,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2621,
																			"src": "12530:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2653,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2655,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2658,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2615,
																"src": "12574:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2661,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2674,
														"nodeType": "IfStatement",
														"src": "12570:103:11",
														"trueBody": {
															"id": 2673,
															"nodeType": "Block",
															"src": "12593:80:11",
															"statements": [
																{
																	"expression": {
																		"id": 2667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2663,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2615,
																			"src": "12611:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2666,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2664,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2665,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2668,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:11"
																},
																{
																	"expression": {
																		"id": 2671,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2669,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2621,
																			"src": "12646:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2670,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2672,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2675,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2615,
																"src": "12690:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2678,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2677,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2691,
														"nodeType": "IfStatement",
														"src": "12686:100:11",
														"trueBody": {
															"id": 2690,
															"nodeType": "Block",
															"src": "12708:78:11",
															"statements": [
																{
																	"expression": {
																		"id": 2684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2680,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2615,
																			"src": "12726:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2683,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2681,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2682,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2685,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:11"
																},
																{
																	"expression": {
																		"id": 2688,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2686,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2621,
																			"src": "12760:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2689,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2692,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2615,
																"src": "12803:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2695,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2693,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2694,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2708,
														"nodeType": "IfStatement",
														"src": "12799:100:11",
														"trueBody": {
															"id": 2707,
															"nodeType": "Block",
															"src": "12821:78:11",
															"statements": [
																{
																	"expression": {
																		"id": 2701,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2697,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2615,
																			"src": "12839:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2700,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2698,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2699,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2702,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:11"
																},
																{
																	"expression": {
																		"id": 2705,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2703,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2621,
																			"src": "12873:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2704,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2706,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2709,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2615,
																"src": "12916:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2712,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2725,
														"nodeType": "IfStatement",
														"src": "12912:100:11",
														"trueBody": {
															"id": 2724,
															"nodeType": "Block",
															"src": "12934:78:11",
															"statements": [
																{
																	"expression": {
																		"id": 2718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2714,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2615,
																			"src": "12952:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2717,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2715,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2716,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2719,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:11"
																},
																{
																	"expression": {
																		"id": 2722,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2720,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2621,
																			"src": "12986:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2721,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2723,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2726,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2615,
																"src": "13029:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2729,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2736,
														"nodeType": "IfStatement",
														"src": "13025:66:11",
														"trueBody": {
															"id": 2735,
															"nodeType": "Block",
															"src": "13047:44:11",
															"statements": [
																{
																	"expression": {
																		"id": 2733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2731,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2621,
																			"src": "13065:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2732,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2734,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:11"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2738,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2621,
													"src": "13117:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2619,
												"id": 2739,
												"nodeType": "Return",
												"src": "13110:13:11"
											}
										]
									},
									"documentation": {
										"id": 2613,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:11",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2741,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2615,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2741,
												"src": "12229:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:11"
									},
									"returnParameters": {
										"id": 2619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2618,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2741,
												"src": "12267:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:11"
									},
									"scope": 2921,
									"src": "12214:916:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2775,
										"nodeType": "Block",
										"src": "13365:170:11",
										"statements": [
											{
												"id": 2774,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:11",
												"statements": [
													{
														"assignments": [
															2753
														],
														"declarations": [
															{
																"constant": false,
																"id": 2753,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2774,
																"src": "13399:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2752,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2757,
														"initialValue": {
															"arguments": [
																{
																	"id": 2755,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2744,
																	"src": "13422:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2754,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2741,
																	2776
																],
																"referencedDeclaration": 2741,
																"src": "13416:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2758,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2753,
																"src": "13449:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2767,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2760,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2747,
																						"src": "13476:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1878",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1878",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2759,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2920,
																					"src": "13459:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1878_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2761,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2766,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2764,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2762,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2763,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2753,
																						"src": "13495:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2765,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2744,
																					"src": "13504:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2769,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2770,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2768,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2771,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2751,
														"id": 2773,
														"nodeType": "Return",
														"src": "13442:76:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2742,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:11",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2744,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2776,
												"src": "13299:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2747,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2776,
												"src": "13314:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1878",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2746,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2745,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1878,
														"src": "13314:8:11"
													},
													"referencedDeclaration": 1878,
													"src": "13314:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1878",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:11"
									},
									"returnParameters": {
										"id": 2751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2750,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2776,
												"src": "13356:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:11"
									},
									"scope": 2921,
									"src": "13284:251:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2862,
										"nodeType": "Block",
										"src": "13855:600:11",
										"statements": [
											{
												"assignments": [
													2785
												],
												"declarations": [
													{
														"constant": false,
														"id": 2785,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2862,
														"src": "13865:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2784,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2787,
												"initialValue": {
													"hexValue": "30",
													"id": 2786,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:11"
											},
											{
												"id": 2859,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2790,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2788,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2779,
																	"src": "13921:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2789,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2791,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2802,
														"nodeType": "IfStatement",
														"src": "13917:98:11",
														"trueBody": {
															"id": 2801,
															"nodeType": "Block",
															"src": "13939:76:11",
															"statements": [
																{
																	"expression": {
																		"id": 2795,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2793,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2779,
																			"src": "13957:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2796,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:11"
																},
																{
																	"expression": {
																		"id": 2799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2797,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2785,
																			"src": "13988:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2798,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2800,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2805,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2803,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2779,
																	"src": "14032:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2804,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2806,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2817,
														"nodeType": "IfStatement",
														"src": "14028:95:11",
														"trueBody": {
															"id": 2816,
															"nodeType": "Block",
															"src": "14049:74:11",
															"statements": [
																{
																	"expression": {
																		"id": 2810,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2808,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2779,
																			"src": "14067:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2809,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2811,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:11"
																},
																{
																	"expression": {
																		"id": 2814,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2812,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2785,
																			"src": "14097:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2813,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2815,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2822,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2820,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2818,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2779,
																	"src": "14140:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2819,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2821,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2832,
														"nodeType": "IfStatement",
														"src": "14136:95:11",
														"trueBody": {
															"id": 2831,
															"nodeType": "Block",
															"src": "14157:74:11",
															"statements": [
																{
																	"expression": {
																		"id": 2825,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2823,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2779,
																			"src": "14175:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2824,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2826,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:11"
																},
																{
																	"expression": {
																		"id": 2829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2827,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2785,
																			"src": "14205:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2828,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2830,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2837,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2835,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2833,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2779,
																	"src": "14248:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2836,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2847,
														"nodeType": "IfStatement",
														"src": "14244:95:11",
														"trueBody": {
															"id": 2846,
															"nodeType": "Block",
															"src": "14265:74:11",
															"statements": [
																{
																	"expression": {
																		"id": 2840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2838,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2779,
																			"src": "14283:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2839,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2841,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:11"
																},
																{
																	"expression": {
																		"id": 2844,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2842,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2785,
																			"src": "14313:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2843,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2845,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2850,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2848,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2779,
																	"src": "14356:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2849,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2851,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2858,
														"nodeType": "IfStatement",
														"src": "14352:64:11",
														"trueBody": {
															"id": 2857,
															"nodeType": "Block",
															"src": "14372:44:11",
															"statements": [
																{
																	"expression": {
																		"id": 2855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2853,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2785,
																			"src": "14390:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2854,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2856,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:11"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2860,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2785,
													"src": "14442:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2783,
												"id": 2861,
												"nodeType": "Return",
												"src": "14435:13:11"
											}
										]
									},
									"documentation": {
										"id": 2777,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:11",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2779,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2863,
												"src": "13808:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:11"
									},
									"returnParameters": {
										"id": 2783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2782,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2863,
												"src": "13846:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:11"
									},
									"scope": 2921,
									"src": "13792:663:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2900,
										"nodeType": "Block",
										"src": "14692:177:11",
										"statements": [
											{
												"id": 2899,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:11",
												"statements": [
													{
														"assignments": [
															2875
														],
														"declarations": [
															{
																"constant": false,
																"id": 2875,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2899,
																"src": "14726:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2874,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2879,
														"initialValue": {
															"arguments": [
																{
																	"id": 2877,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2866,
																	"src": "14750:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2876,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2863,
																	2901
																],
																"referencedDeclaration": 2863,
																"src": "14743:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2897,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2880,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2875,
																"src": "14777:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2892,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2882,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2869,
																						"src": "14804:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1878",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1878",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2881,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2920,
																					"src": "14787:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1878_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2883,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2891,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2889,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2884,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2887,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2885,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2875,
																									"src": "14823:6:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2886,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2888,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2890,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2866,
																					"src": "14838:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2894,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2895,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2893,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2896,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2873,
														"id": 2898,
														"nodeType": "Return",
														"src": "14770:82:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2864,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:11",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2901,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2866,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2901,
												"src": "14626:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2869,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2901,
												"src": "14641:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1878",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2868,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2867,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1878,
														"src": "14641:8:11"
													},
													"referencedDeclaration": 1878,
													"src": "14641:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1878",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:11"
									},
									"returnParameters": {
										"id": 2873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2872,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2901,
												"src": "14683:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:11"
									},
									"scope": 2921,
									"src": "14610:259:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2919,
										"nodeType": "Block",
										"src": "15067:48:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2915,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2912,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2905,
																	"src": "15090:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1878",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1878",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2911,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2910,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2913,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2914,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2916,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2909,
												"id": 2918,
												"nodeType": "Return",
												"src": "15077:31:11"
											}
										]
									},
									"documentation": {
										"id": 2902,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:11",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2920,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2905,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2920,
												"src": "15019:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1878",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2904,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2903,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1878,
														"src": "15019:8:11"
													},
													"referencedDeclaration": 1878,
													"src": "15019:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1878",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:11"
									},
									"returnParameters": {
										"id": 2909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2908,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2920,
												"src": "15061:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2907,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:11"
									},
									"scope": 2921,
									"src": "14993:122:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2922,
							"src": "203:14914:11",
							"usedErrors": [
								1873
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:11"
				},
				"id": 11
			},
			"contracts/MultiNFT.sol": {
				"ast": {
					"absolutePath": "contracts/MultiNFT.sol",
					"exportedSymbols": {
						"Arrays": [
							1699
						],
						"Context": [
							1721
						],
						"ERC1155": [
							1335
						],
						"ERC165": [
							1855
						],
						"IERC1155": [
							1458
						],
						"IERC1155Errors": [
							284
						],
						"IERC1155MetadataURI": [
							1516
						],
						"IERC1155Receiver": [
							1500
						],
						"IERC165": [
							1867
						],
						"MultiNFT": [
							3013
						],
						"Ownable": [
							147
						]
					},
					"id": 3014,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2923,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"id": 2924,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3014,
							"sourceUnit": 1336,
							"src": "57:59:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 2925,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3014,
							"sourceUnit": 148,
							"src": "117:52:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2926,
										"name": "ERC1155",
										"nameLocations": [
											"192:7:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1335,
										"src": "192:7:12"
									},
									"id": 2927,
									"nodeType": "InheritanceSpecifier",
									"src": "192:7:12"
								},
								{
									"baseName": {
										"id": 2928,
										"name": "Ownable",
										"nameLocations": [
											"201:7:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "201:7:12"
									},
									"id": 2929,
									"nodeType": "InheritanceSpecifier",
									"src": "201:7:12"
								}
							],
							"canonicalName": "MultiNFT",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3013,
							"linearizedBaseContracts": [
								3013,
								147,
								1335,
								284,
								1516,
								1458,
								1855,
								1867,
								1721
							],
							"name": "MultiNFT",
							"nameLocation": "180:8:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "2693ebf2",
									"id": 2933,
									"mutability": "mutable",
									"name": "tokenSupply",
									"nameLocation": "289:11:12",
									"nodeType": "VariableDeclaration",
									"scope": 3013,
									"src": "254:46:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 2932,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2930,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "262:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "254:27:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2931,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "273:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 2953,
										"nodeType": "Block",
										"src": "390:102:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 2944,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "451:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"hexValue": "313030",
															"id": 2945,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "454:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"id": 2943,
														"name": "mintToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2978,
														"src": "441:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 2946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "441:17:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2947,
												"nodeType": "ExpressionStatement",
												"src": "441:17:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 2949,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "478:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														{
															"hexValue": "323030",
															"id": 2950,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "481:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_200_by_1",
																"typeString": "int_const 200"
															},
															"value": "200"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															{
																"typeIdentifier": "t_rational_200_by_1",
																"typeString": "int_const 200"
															}
														],
														"id": 2948,
														"name": "mintToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2978,
														"src": "468:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 2951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "468:17:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2952,
												"nodeType": "ExpressionStatement",
												"src": "468:17:12"
											}
										]
									},
									"id": 2954,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "68747470733a2f2f6d796170692e636f6d2f6170692f746f6b656e2f7b69647d2e6a736f6e",
													"id": 2936,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "329:39:12",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_be7838470a3c26528d43bae23565234ed295a39bde7b6c68ac16c023b38bf94f",
														"typeString": "literal_string \"https://myapi.com/api/token/{id}.json\""
													},
													"value": "https://myapi.com/api/token/{id}.json"
												}
											],
											"id": 2937,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2935,
												"name": "ERC1155",
												"nameLocations": [
													"321:7:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1335,
												"src": "321:7:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "321:48:12"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 2939,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "378:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "382:6:12",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "378:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 2941,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2938,
												"name": "Ownable",
												"nameLocations": [
													"370:7:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "370:7:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "370:19:12"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2934,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "318:2:12"
									},
									"returnParameters": {
										"id": 2942,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:0:12"
									},
									"scope": 3013,
									"src": "307:185:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2977,
										"nodeType": "Block",
										"src": "567:95:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2964,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "583:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "587:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "583:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2966,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2956,
															"src": "595:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2967,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2958,
															"src": "604:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 2968,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "612:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2963,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "577:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 2969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "577:38:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2970,
												"nodeType": "ExpressionStatement",
												"src": "577:38:12"
											},
											{
												"expression": {
													"id": 2975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2971,
															"name": "tokenSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2933,
															"src": "625:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2973,
														"indexExpression": {
															"id": 2972,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2956,
															"src": "637:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "625:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2974,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2958,
														"src": "649:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "625:30:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2976,
												"nodeType": "ExpressionStatement",
												"src": "625:30:12"
											}
										]
									},
									"functionSelector": "20cbf5f9",
									"id": 2978,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2961,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2960,
												"name": "onlyOwner",
												"nameLocations": [
													"557:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "557:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "557:9:12"
										}
									],
									"name": "mintToken",
									"nameLocation": "507:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2956,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "525:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2978,
												"src": "517:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "517:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2958,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "542:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2978,
												"src": "534:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "534:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "516:33:12"
									},
									"returnParameters": {
										"id": 2962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "567:0:12"
									},
									"scope": 3013,
									"src": "498:164:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3011,
										"nodeType": "Block",
										"src": "737:174:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2989,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "765:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2990,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "769:6:12",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "765:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2991,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2980,
																		"src": "777:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2988,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 404,
																	"src": "755:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 2992,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "755:30:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2993,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2982,
																"src": "789:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "755:40:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 2995,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "797:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 2987,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "747:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "747:73:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2997,
												"nodeType": "ExpressionStatement",
												"src": "747:73:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2999,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "836:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "840:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "836:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3001,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2980,
															"src": "848:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3002,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2982,
															"src": "857:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2998,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1101,
														"src": "830:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 3003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "830:34:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3004,
												"nodeType": "ExpressionStatement",
												"src": "830:34:12"
											},
											{
												"expression": {
													"id": 3009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3005,
															"name": "tokenSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2933,
															"src": "874:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 3007,
														"indexExpression": {
															"id": 3006,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2980,
															"src": "886:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "874:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 3008,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2982,
														"src": "898:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "874:30:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3010,
												"nodeType": "ExpressionStatement",
												"src": "874:30:12"
											}
										]
									},
									"functionSelector": "8225b247",
									"id": 3012,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2985,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2984,
												"name": "onlyOwner",
												"nameLocations": [
													"727:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "727:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "727:9:12"
										}
									],
									"name": "burnToken",
									"nameLocation": "677:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2980,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "695:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 3012,
												"src": "687:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2982,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "712:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 3012,
												"src": "704:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "704:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:33:12"
									},
									"returnParameters": {
										"id": 2986,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "737:0:12"
									},
									"scope": 3013,
									"src": "668:243:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3014,
							"src": "171:742:12",
							"usedErrors": [
								13,
								18,
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": [
								24,
								1355,
								1370,
								1379,
								1386
							]
						}
					],
					"src": "32:881:12"
				},
				"id": 12
			}
		}
	}
}